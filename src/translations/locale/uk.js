// Ukrainian translations
const translations = {
    "File Metadata Inheritance": "Наслідування метаданих файлу",
    "Configure how tasks inherit metadata from file frontmatter": "Налаштування наслідування завданнями метаданих з frontmatter файлу",
    "Enable file metadata inheritance": "Увімкнути наслідування метаданих файлу",
    "Allow tasks to inherit metadata properties from their file's frontmatter": "Дозволити завданням наслідувати властивості метаданих з frontmatter свого файлу",
    "Inherit from frontmatter": "Inherit from frontmatter",
    "Tasks inherit metadata properties like priority, context, etc. from file frontmatter when not explicitly set on the task": "Завдання наслідують властивості метаданих, такі як пріоритет, контекст тощо, з frontmatter файлу, коли вони не встановлені явно на завданні",
    "Inherit from frontmatter for subtasks": "Inherit from frontmatter for subtasks",
    "Allow subtasks to inherit metadata from file frontmatter. When disabled, only top-level tasks inherit file metadata": "Дозволити підзавданням наслідувати метадані з frontmatter файлу. Коли вимкнено, тільки завдання верхнього рівня наслідують метадані файлу",
    "Comprehensive task management plugin for Obsidian with progress bars, task status cycling, and advanced task tracking features.": "Комплексний додаток для керування завданнями в Obsidian з індікатором виконання, циклічною зміною станів, та розширеними функціями відстеження.",
    "Show progress bar": "Показати прогрес-бар",
    "Toggle this to show the progress bar.": "Увімкніть для відображення прогрес-бару.",
    "Support hover to show progress info": "Додаткова інформація при наведенні",
    "Toggle this to allow this plugin to show progress info when hovering over the progress bar.": "Увімкніть для відображення додаткової інформації при наведенні на прогрес-бар.",
    "Add progress bar to non-task bullet": "Додати прогрес-бар до звичайних елементів списку",
    "Toggle this to allow adding progress bars to regular list items (non-task bullets).": "Увімкніть для додавання прогрес-бару до звичайних елементів списку (не завдань).",
    "Add progress bar to Heading": "Додати прогрес-бар до заголовків",
    "Toggle this to allow this plugin to add progress bar for Task below the headings.": "Увімкніть для додавання прогрес-бару для завдань під заголовками.",
    "Enable heading progress bars": "Увімкнути прогрес-бари для заголовків",
    "Add progress bars to headings to show progress of all tasks under that heading.": "Додайте прогрес-бари до заголовків, щоб показати виконання усіх завдань під цим заголовком.",
    "Auto complete parent task": "Автоматично завершувати батьківське завдання",
    "Toggle this to allow this plugin to auto complete parent task when all child tasks are completed.": "Увімкніть, щоб додаток автоматично завершував батьківське завдання, коли всі дочірні завдання завершені.",
    "Mark parent as 'In Progress' when partially complete": "Позначати батьківське завдання як 'В процесі', якщо завершено частково",
    "When some but not all child tasks are completed, mark the parent task as 'In Progress'. Only works when 'Auto complete parent' is enabled.": "Якщо деякі, але не всі дочірні завдання завершені, позначити батьківське завдання як 'В процесі'. Працює лише при увімкненій опції 'Автоматично завершувати батьківське завдання'.",
    "Count sub children level of current Task": "Враховувати дочірні завдання поточного завдання",
    "Toggle this to allow this plugin to count sub tasks.": "Увімкніть, щоб додаток враховував дочірні завдання.",
    "Checkbox Status Settings": "Налаштування статусу завдань",
    "Select a predefined task status collection or customize your own": "Оберіть попередньо визначений набір статусів завдань, або налаштуйте власний",
    "Completed task markers": "Маркери завершених завдань",
    "Characters in square brackets that represent completed tasks. Example: \"x|X\"": "Символи в квадратних дужках, що позначають завершені завдання. Приклад: \"x|X\"",
    "Planned task markers": "Маркери запланованих завдань",
    "Characters in square brackets that represent planned tasks. Example: \"?\"": "Символи в квадратних дужках, що позначають заплановані завдання. Приклад: \"?\"",
    "In progress task markers": "Маркери завдань у процесі",
    "Characters in square brackets that represent tasks in progress. Example: \">|/\"": "Символи в квадратних дужках, що позначають завдання в процесі. Приклад: \">|/\"",
    "Abandoned task markers": "Маркери покинутих завдань",
    "Characters in square brackets that represent abandoned tasks. Example: \"-\"": "Символи в квадратних дужках, що позначають покинуті завдання. Приклад: \"-\"",
    "Characters in square brackets that represent not started tasks. Default is space \" \"": "Символи в квадратних дужках, що позначають не розпочаті завдання. За замовчуванням — пробіл \" \"",
    "Count other statuses as": "Враховувати інші статуси як",
    "Select the status to count other statuses as. Default is \"Not Started\".": "Виберіть статус, у який переводити інші статуси. За замовчуванням — \"Не розпочато\".",
    "Task Counting Settings": "Налаштування підрахунку завдань",
    "Exclude specific task markers": "Виключити певні маркери завдань",
    "Specify task markers to exclude from counting. Example: \"?|/\"": "Вкажіть маркери завдань, які потрібно виключити з підрахунку. Приклад: \"?|/\"",
    "Only count specific task markers": "Враховувати лише певні маркери завдань",
    "Toggle this to only count specific task markers": "Увімкніть, щоб враховувати лише певні маркери завдань",
    "Specific task markers to count": "Певні маркери завдань для підрахунку",
    "Specify which task markers to count. Example: \"x|X|>|/\"": "Вкажіть, які маркери завдань враховувати. Приклад: \"x|X|>|/\"",
    "Conditional Progress Bar Display": "Умовне відображення прогрес-бару",
    "Hide progress bars based on conditions": "Приховувати прогрес-бар за певних умов",
    "Toggle this to enable hiding progress bars based on tags, folders, or metadata.": "Ховати прогрес-бар за умовами на основі міток, тек, або властивостей.",
    "Hide by tags": "Приховувати за мітками",
    "Specify tags that will hide progress bars (comma-separated, without #). Example: \"no-progress-bar,hide-progress\"": "Вкажіть мітки, які приховуватимуть прогрес-бар (через кому, без #). Наприклад: \"no-progress-bar,hide-progress\"",
    "Hide by folders": "Приховувати за теками",
    "Specify folder paths that will hide progress bars (comma-separated). Example: \"Daily Notes,Projects/Hidden\"": "Вкажіть шлях до тек в яких приховуватиметься прогрес-бар (через кому). Наприклад: \"Daily Notes,Projects/Hidden\"",
    "Hide by metadata": "Приховувати за властивостями",
    "Specify frontmatter metadata that will hide progress bars. Example: \"hide-progress-bar: true\"": "Вкажіть властивість, яка приховуватиме прогрес-бар у нотатці. Наприклад: \"hide-progress-bar:true\"",
    "Checkbox Status Switcher": "Перемикач статусу завдань",
    "Enable task status switcher": "Увімкнути перемикач статусу завдань",
    "Enable/disable the ability to cycle through task states by clicking.": "Увімкнути/вимкнути можливість перемикання статусів завдань клацанням.",
    "Enable custom task marks": "Увімкнути користувацькі маркери завдань",
    "Replace default checkboxes with styled text marks that follow your task status cycle when clicked.": "Замініть стандартні прапорці на стилізовані текстові маркери, які слідують за вашим циклом статусів завдань при клацанні.",
    "Enable cycle complete status": "Увімкнути циклічне завершення статусу",
    "Enable/disable the ability to automatically cycle through task states when pressing a mark.": "Увімкнути/вимкнути автоматичне перемикання статусів завдань при натисканні на маркер.",
    "Always cycle new tasks": "Завжди перемикати нові завдання",
    "When enabled, newly inserted tasks will immediately cycle to the next status. When disabled, newly inserted tasks with valid marks will keep their original mark.": "Якщо увімкнено, нові завдання одразу перемикатимуться на наступний статус. Якщо вимкнено, нові завдання з дійсними маркерами збережуть свій початковий маркер.",
    "Checkbox Status Cycle and Marks": "Цикл статусів завдань і маркери",
    "Define task states and their corresponding marks. The order from top to bottom defines the cycling sequence.": "Визначте стани завдань і відповідні маркери. Порядок зверху вниз визначає послідовність перемикання.",
    "Add Status": "Додати статус",
    "Completed Task Mover": "Переміщення завершених завдань",
    "Enable completed task mover": "Увімкнути переміщення завершених завдань",
    "Toggle this to enable commands for moving completed tasks to another file.": "Увімкніть, щоб увімкнути команди для переміщення завершених завдань до іншого файлу.",
    "Task marker type": "Тип маркера завдання",
    "Choose what type of marker to add to moved tasks": "Оберіть тип маркера, який буде додано до переміщених завдань",
    "Version marker text": "Текст маркера версії",
    "Text to append to tasks when moved (e.g., 'version 1.0')": "Текст, який додається до завдань при переміщенні (наприклад: 'версія 1.0')",
    "Date marker text": "Текст маркера дати",
    "Text to append to tasks when moved (e.g., 'archived on 2023-12-31')": "Текст, який додається до завдань при переміщенні (наприклад: 'архівовано 2023-12-31')",
    "Custom marker text": "Користувацький текст маркера",
    "Use {{DATE:format}} for date formatting (e.g., {{DATE:YYYY-MM-DD}}": "Використовуйте {{DATE:format}} для форматування дат (наприклад: {{DATE:YYYY-MM-DD}})",
    "Treat abandoned tasks as completed": "Вважати покинуті завдання завершеними",
    "If enabled, abandoned tasks will be treated as completed.": "Якщо увімкнено, покинуті завдання вважатимуться завершеними.",
    "Complete all moved tasks": "Завершувати всі переміщені завдання",
    "If enabled, all moved tasks will be marked as completed.": "Якщо увімкнено, усі переміщені завдання будуть позначені як завершені.",
    "With current file link": "З посиланням на поточний файл",
    "A link to the current file will be added to the parent task of the moved tasks.": "Посилання на поточний файл буде додано до батьківського завдання переміщених завдань.",
    "Say Thank You": "Подякувати",
    "Donate": "Пожертвувати",
    "If you like this plugin, consider donating to support continued development:": "Якщо вам подобається цей додаток, подумайте про пожертву для підтримки подальшого розвитку:",
    "Add number to the Progress Bar": "Додати число до прогрес-бару",
    "Toggle this to allow this plugin to add tasks number to progress bar.": "Увімкніть, щоб додаток додавав число завдань до прогрес-бару.",
    "Show percentage": "Показати відсоток",
    "Toggle this to allow this plugin to show percentage in the progress bar.": "Увімкніть, щоб додаток показував відсоток у прогрес-барі.",
    "Customize progress text": "Налаштувати текст прогресу",
    "Toggle this to customize text representation for different progress percentage ranges.": "Увімкніть, щоб налаштувати текстове представлення для різних діапазонів відсотків прогресу.",
    "Progress Ranges": "Діапазони прогресу",
    "Define progress ranges and their corresponding text representations.": "Визначте діапазони прогресу та відповідні текстові представлення.",
    "Add new range": "Додати новий діапазон",
    "Add a new progress percentage range with custom text": "Додати новий діапазон відсотків прогресу з користувацьким текстом",
    "Min percentage (0-100)": "Мінімальний відсоток (0-100)",
    "Max percentage (0-100)": "Максимальний відсоток (0-100)",
    "Text template (use {{PROGRESS}})": "Шаблон тексту (використовуйте {{PROGRESS}})",
    "Reset to defaults": "Скинути до значень за замовчуванням",
    "Reset progress ranges to default values": "Скинути діапазони прогресу до значень за замовчуванням",
    "Reset": "Скинути",
    "Priority Picker Settings": "Налаштування вибору пріоритету",
    "Toggle to enable priority picker dropdown for emoji and letter format priorities.": "Увімкніть, щоб активувати випадаючий список вибору пріоритету для форматів з емодзі та літерами.",
    "Enable priority picker": "Увімкнути вибір пріоритету",
    "Enable priority keyboard shortcuts": "Увімкнути гарячі клавіші для пріоритету",
    "Toggle to enable keyboard shortcuts for setting task priorities.": "Увімкніть, щоб активувати гарячі клавіші для встановлення пріоритетів завдань.",
    "Date picker": "Вибір дати",
    "Enable date picker": "Увімкнути вибір дати",
    "Toggle this to enable date picker for tasks. This will add a calendar icon near your tasks which you can click to select a date.": "Увімкніть, щоб активувати вибір дати для завдань. Це додасть іконку календаря поруч із завданнями, на яку можна натиснути для вибору дати.",
    "Date mark": "Маркер дати",
    "Emoji mark to identify dates. You can use multiple emoji separated by commas.": "Емодзі іконки для позначення дат. Можна використовувати кілька емодзі, розділених комами.",
    "Quick capture": "Швидкий захват",
    "Enable quick capture": "Увімкнути швидкий захват",
    "Toggle this to enable Org-mode style quick capture panel. Press Alt+C to open the capture panel.": "Увімкніть, щоб активувати панель швидкого захоплення в стилі Org-mode. Натисніть Alt+C, щоб відкрити панель захоплення.",
    "Target file": "Цільовий файл",
    "The file where captured text will be saved. You can include a path, e.g., 'folder/Quick Capture.md'": "Файл, у якому зберігатиметься захоплений текст. Можна вказати шлях, наприклад: 'folder/Quick Capture.md'",
    "Placeholder text": "Текст-заповнювач",
    "Placeholder text to display in the capture panel": "Текст-заповнювач для відображення в панелі захоплення",
    "Append to file": "Додати до файлу",
    "If enabled, captured text will be appended to the target file. If disabled, it will replace the file content.": "Якщо увімкнено, захоплений текст додаватиметься до цільового файлу. Якщо вимкнено, він замінить вміст файлу.",
    "Task Filter": "Фільтр завдань",
    "Enable Task Filter": "Увімкнути фільтр завдань",
    "Toggle this to enable the task filter panel": "Увімкніть для активації панелі фільтрів завдань",
    "Preset Filters": "Типові фільтри",
    "Create and manage preset filters for quick access to commonly used task filters.": "Створюйте та керуйте типовими фільтрами для швидкого доступу до часто використуємих фільтрів завдань.",
    "Edit Filter: ": "Редагувати фільтр: ",
    "Filter name": "Назва фільтру",
    "Checkbox Status": "Статус завдання",
    "Include or exclude tasks based on their status": "Включати, або виключати завдання на основі їхнього статусу",
    "Include Completed Tasks": "Включати завершені завдання",
    "Include In Progress Tasks": "Включати завдання у процесі",
    "Include Abandoned Tasks": "Включати покинуті завдання",
    "Include Not Started Tasks": "Включати не розпочаті завдання",
    "Include Planned Tasks": "Включати заплановані завдання",
    "Related Tasks": "Пов’язані завдання",
    "Include parent, child, and sibling tasks in the filter": "Включати батьківські, дочірні та сусідні завдання у фільтр",
    "Include Parent Tasks": "Включати батьківські завдання",
    "Include Child Tasks": "Включати дочірні завдання",
    "Include Sibling Tasks": "Включати сусідні завдання",
    "Advanced Filter": "Розширений фільтр",
    "Use boolean operations: AND, OR, NOT. Example: 'text content AND #tag1'": "Використовуйте булеві операції: AND, OR, NOT. Приклад: 'зміст тексту AND #мітка1'",
    "Filter query": "Запит фільтрування",
    "Filter out tasks": "Фільтрувати завдання",
    "If enabled, tasks that match the query will be hidden, otherwise they will be shown": "Якщо увімкнено, завдання, що відповідають запиту, будуть приховані, інакше вони відображатимуться",
    "Save": "Зберегти",
    "Cancel": "Скасувати",
    "Hide filter panel": "Приховати панель фільтрів",
    "Show filter panel": "Показати панель фільтрів",
    "Filter Tasks": "Фільтрувати завдання",
    "Preset filters": "Типові фільтри",
    "Select a saved filter preset to apply": "Оберіть типовий фільтр для застосування",
    "Select a preset...": "Оберіть типовий...",
    "Query": "Запит",
    "Use boolean operations: AND, OR, NOT. Example: 'text content AND #tag1 AND DATE:<2022-01-02 NOT PRIORITY:>=#B' - Supports >, <, =, >=, <=, != for PRIORITY and DATE.": "Використовуйте булеві операції: AND, OR, NOT. Приклад: 'зміст тексту AND #мітка1 AND DATE:<2022-01-02 NOT PRIORITY:>=#B' - Підтримує: >, <, =, >=, <=, != для PRIORITY та DATE.",
    "If true, tasks that match the query will be hidden, otherwise they will be shown": "Якщо увімкнено, завдання, що відповідають запиту, будуть приховані, інакше вони відображатимуться",
    "Completed": "Завершено",
    "In Progress": "В процесі",
    "Abandoned": "Покинуто",
    "Not Started": "Не розпочато",
    "Planned": "Заплановано",
    "Include Related Tasks": "Включити пов’язані завдання",
    "Parent Tasks": "Батьківські завдання",
    "Child Tasks": "Дочірні завдання",
    "Sibling Tasks": "Сусідні завдання",
    "Apply": "Застосувати",
    "New Preset": "Створити типовий фільтр",
    "Preset saved": "Типовий фільтр збережено",
    "No changes to save": "Немає змін для збереження",
    "Close": "Закрити",
    "Capture to": "Захопити до",
    "Capture": "Захопити",
    "Capture thoughts, tasks, or ideas...": "Захоплюйте думки, завдання чи ідеї...",
    "Tomorrow": "Завтра",
    "In 2 days": "Через 2 дні",
    "In 3 days": "Через 3 дні",
    "In 5 days": "Через 5 днів",
    "In 1 week": "Через 1 тиждень",
    "In 10 days": "Через 10 днів",
    "In 2 weeks": "Через 2 тижні",
    "In 1 month": "Через 1 місяць",
    "In 2 months": "Через 2 місяці",
    "In 3 months": "Через 3 місяці",
    "In 6 months": "Через 6 місяців",
    "In 1 year": "Через 1 рік",
    "In 5 years": "Через 5 років",
    "In 10 years": "Через 10 років",
    "Today": "Сьогодні",
    "Quick Select": "Швидкий вибір",
    "Calendar": "Календар",
    "Clear Date": "Очистити дату",
    "Highest priority": "Найвищий пріоритет",
    "High priority": "Високий пріоритет",
    "Medium priority": "Середній пріоритет",
    "No priority": "Без пріоритету",
    "Low priority": "Низький пріоритет",
    "Lowest priority": "Найнижчий пріоритет",
    "Priority A": "Пріоритет A",
    "Priority B": "Пріоритет B",
    "Priority C": "Пріоритет C",
    "Task Priority": "Пріоритет завдання",
    "Remove Priority": "Видалити пріоритет",
    "Cycle task status forward": "Перемкнути статус завдання вперед",
    "Cycle task status backward": "Перемкнути статус завдання назад",
    "Remove priority": "Видалити пріоритет",
    "Move task to another file": "Перемістити завдання до іншого файлу",
    "Move all completed subtasks to another file": "Перемістити всі завершені підзавдання до іншого файлу",
    "Move direct completed subtasks to another file": "Перемістити прямі завершені підзавдання до іншого файлу",
    "Move all subtasks to another file": "Перемістити всі підзавдання до іншого файлу",
    "Incomplete Task Mover": "Переміщення незавершених завдань",
    "Enable incomplete task mover": "Увімкнути переміщення незавершених завдань",
    "Toggle this to enable commands for moving incomplete tasks to another file.": "Увімкніть, щоб увімкнути команди для переміщення незавершених завдань до іншого файлу.",
    "Incomplete task marker type": "Тип маркера незавершених завдань",
    "Choose what type of marker to add to moved incomplete tasks": "Оберіть, який тип маркера потрібно додати до переміщених незавершених завдань",
    "Incomplete version marker text": "Текст маркера незавершеного",
    "Text to append to incomplete tasks when moved (e.g., 'version 1.0')": "Текст, який додається до незавершених завдань при переміщенні (наприклад: 'версія 1.0')",
    "Incomplete date marker text": "Текст маркера незавершеної дати",
    "Text to append to incomplete tasks when moved (e.g., 'moved on 2023-12-31')": "Текст, який додається до незавершених завдань при переміщенні (наприклад: 'переміщено 2023-12-31')",
    "Incomplete custom marker text": "Текст маркера незавершеного",
    "With current file link for incomplete tasks": "З поточним посиланням на файл для незавершених завдань",
    "A link to the current file will be added to the parent task of the moved incomplete tasks.": "Посилання на поточний файл буде додано до батьківського завдання переміщених незавершених завдань.",
    "Move all incomplete subtasks to another file": "Перемістити всі підзавдання до іншого файлу",
    "Move direct incomplete subtasks to another file": "Перемістити прямі незавершені підзавдання до іншого файлу",
    "moved on": "переміщено",
    "Set priority": "Встановити пріоритет",
    "Toggle quick capture panel": "Перемкнути панель швидкого захоплення",
    "Quick capture (Global)": "Швидкий захват (глобально)",
    "Toggle task filter panel": "Перемкнути панель фільтрів завдань",
    "Filter Mode": "Режим фільтрації",
    "Choose whether to include or exclude tasks that match the filters": "Виберіть, включати чи виключати завдання, що відповідають фільтрам",
    "Show matching tasks": "Показати відповідні завдання",
    "Hide matching tasks": "Приховати відповідні завдання",
    "Choose whether to show or hide tasks that match the filters": "Виберіть, показувати чи приховувати завдання, що відповідають фільтрам",
    "Create new file:": "Створити новий файл:",
    "Completed tasks moved to": "Завершені завдання переміщені до",
    "Failed to create file:": "Не вдалося створити файл:",
    "Beginning of file": "Початок файлу",
    "Failed to move tasks:": "Не вдалося перемістити завдання:",
    "No active file found": "Активний файл не знайдено",
    "Task moved to": "Завдання переміщено до",
    "Failed to move task:": "Не вдалося перемістити завдання:",
    "Nothing to capture": "Немає що захопити",
    "Captured successfully": "Успішно захоплено",
    "Failed to save:": "Не вдалося зберегти:",
    "Captured successfully to": "Успішно захоплено до",
    "Total": "Загалом",
    "Workflow": "Робочий процес",
    "Add as workflow root": "Додати як корінь робочого процесу",
    "Move to stage": "Перейти до етапу",
    "Complete stage": "Завершити етап",
    "Add child task with same stage": "Додати дочірнє завдання з тим самим етапом",
    "Could not open quick capture panel in the current editor": "Не вдалося відкрити панель швидкого захоплення в поточному редакторі",
    "Just started {{PROGRESS}}%": "Щойно розпочато {{PROGRESS}}%",
    "Making progress {{PROGRESS}}%": "Прогрес {{PROGRESS}}%",
    "Half way {{PROGRESS}}%": "На півдорозі {{PROGRESS}}%",
    "Good progress {{PROGRESS}}%": "Гарний прогрес {{PROGRESS}}%",
    "Almost there {{PROGRESS}}%": "Майже виконане {{PROGRESS}}%",
    "Progress bar": "Прогрес виконання",
    "You can customize the progress bar behind the parent task(usually at the end of the task). You can also customize the progress bar for the task below the heading.": "Налаштування відображення прогресу виконання у батьківському завданні (зазвичай наприкінці завдання). Також можна налаштувати прогрес-бару завдань під заголовками.",
    "Hide progress bars": "Приховати прогрес-бари",
    "Parent task changer": "Зміна батьківського завдання",
    "Change the parent task of the current task.": "Змінити батьківське завдання поточного завдання.",
    "No preset filters created yet. Click 'Add New Preset' to create one.": "Типові фільтри ще не створені. Натисніть 'Створити типовий фільтр', щоб додати один.",
    "Configure task workflows for project and process management": "Налаштуйте робочі процеси завдань для керування проєктами та процесами",
    "Enable workflow": "Увімкнути робочий процес",
    "Toggle to enable the workflow system for tasks": "Увімкніть, щоб активувати систему робочих процесів для завдань",
    "Auto-add timestamp": "Автоматично додавати часову мітку",
    "Automatically add a timestamp to the task when it is created": "Автоматично додавати часову мітку до завдання під час його створення",
    "Timestamp format:": "Формат часової мітки:",
    "Timestamp format": "Формат часової мітки",
    "Remove timestamp when moving to next stage": "Видаляти часову мітку при переході до наступного етапу",
    "Remove the timestamp from the current task when moving to the next stage": "Видаляти часову мітку з поточного завдання при переході до наступного етапу",
    "Calculate spent time": "Обчислити витрачений час",
    "Calculate and display the time spent on the task when moving to the next stage": "Розраховувати та відображати час, витрачений на завдання, при переході до наступного етапу",
    "Format for spent time:": "Формат для витраченого часу:",
    "Calculate spent time when move to next stage.": "Розраховувати витрачений час при переході до наступного етапу.",
    "Spent time format": "Формат витраченого часу",
    "Calculate full spent time": "Розраховувати повний витрачений час",
    "Calculate the full spent time from the start of the task to the last stage": "Розраховувати повний витрачений час від початку завдання до останнього етапу",
    "Auto remove last stage marker": "Автоматично видаляти маркер останнього етапу",
    "Automatically remove the last stage marker when a task is completed": "Автоматично видаляти маркер останнього етапу, коли завдання завершено",
    "Auto-add next task": "Автоматично додавати наступне завдання",
    "Automatically create a new task with the next stage when completing a task": "Автоматично створювати нове завдання з наступним етапом при завершенні завдання",
    "Workflow definitions": "Визначення робочих процесів",
    "Configure workflow templates for different types of processes": "Налаштуйте шаблони робочих процесів для різних типів процесів",
    "No workflow definitions created yet. Click 'Add New Workflow' to create one.": "Визначення робочих процесів ще не створені. Натисніть 'Додати новий робочий процес', щоб створити один.",
    "Edit workflow": "Редагувати робочий процес",
    "Remove workflow": "Видалити робочий процес",
    "Delete workflow": "Видалити робочий процес",
    "Delete": "Видалити",
    "Add New Workflow": "Додати новий робочий процес",
    "New Workflow": "Новий робочий процес",
    "Create New Workflow": "Створити новий робочий процес",
    "Workflow name": "Назва робочого процесу",
    "A descriptive name for the workflow": "Описова назва для робочого процесу",
    "Workflow ID": "Ідентифікатор робочого процесу",
    "A unique identifier for the workflow (used in tags)": "Унікальний ідентифікатор робочого процесу (використовується у мітках)",
    "Description": "Подробиці",
    "Optional description for the workflow": "Необов’язковий опис для робочого процесу",
    "Describe the purpose and use of this workflow...": "Опишіть призначення та використання цього робочого процесу...",
    "Workflow Stages": "Етапи робочого процесу",
    "No stages defined yet. Add a stage to get started.": "Етапи ще не визначені. Додайте етап, щоб почати.",
    "Edit": "Редагувати",
    "Move up": "Перемістити вгору",
    "Move down": "Перемістити вниз",
    "Sub-stage": "Підетап",
    "Sub-stage name": "Назва підетапу",
    "Sub-stage ID": "Ідентифікатор підетапу",
    "Next: ": "Далі: ",
    "Add Sub-stage": "Додати підетап",
    "New Sub-stage": "Новий підетап",
    "Edit Stage": "Редагувати етап",
    "Stage name": "Назва етапу",
    "A descriptive name for this workflow stage": "Описова назва для цього етапу робочого процесу",
    "Stage ID": "Ідентифікатор етапу",
    "A unique identifier for the stage (used in tags)": "Унікальний ідентифікатор етапу (використовується у мітках)",
    "Stage type": "Тип етапу",
    "The type of this workflow stage": "Тип цього етапу робочого процесу",
    "Linear (sequential)": "Лінійний (послідовний)",
    "Cycle (repeatable)": "Циклічний (повторюваний)",
    "Terminal (end stage)": "Термінальний (кінцевий етап)",
    "Next stage": "Наступний етап",
    "The stage to proceed to after this one": "Етап, до якого потрібно перейти після цього",
    "Sub-stages": "Підетапи",
    "Define cycle sub-stages (optional)": "Визначте цикли підетапів (необов’язково)",
    "No sub-stages defined yet.": "Підетапи ще не визначені.",
    "Can proceed to": "Може перейти до",
    "Additional stages that can follow this one (for right-click menu)": "Додаткові етапи, які можуть слідувати за цим (для контекстного меню)",
    "No additional destination stages defined.": "Додаткові цільові етапи не визначені.",
    "Remove": "Видалити",
    "Add": "Додати",
    "Name and ID are required.": "Назва та ідентифікатор є обов’язковими.",
    "End of file": "Кінець файлу",
    "Include in cycle": "Включити в цикл",
    "Preset": "Типовий фільтр",
    "Preset name": "Назва типового фільтру",
    "Edit Filter": "Редагувати фільтр",
    "Add New Preset": "Додати новий типовий фільтр",
    "New Filter": "Новий фільтр",
    "Reset to Default Presets": "Скинути до типових за замовчуванням",
    "This will replace all your current presets with the default set. Are you sure?": "Це замінить усі ваші поточні типові фільтри на набір за замовчуванням. Ви впевнені?",
    "Edit Workflow": "Редагувати робочий процес",
    "General": "Загальні",
    "Progress Bar": "Прогрес-бар",
    "Task Mover": "Переміщення завдань",
    "Quick Capture": "Швидкий захват",
    "Date & Priority": "Дата та пріоритет",
    "About": "Довідка",
    "Count sub children of current Task": "Враховувати дочірні завдання поточного завдання",
    "Toggle this to allow this plugin to count sub tasks when generating progress bar\t.": "Увімкніть, щоб додаток враховував дочірні завдання при створенні прогрес-бару\t.",
    "Configure task status settings": "Налаштувати параметри статусу завдань",
    "Configure which task markers to count or exclude": "Налаштувати, які маркери завдань враховувати, або виключати",
    "Task status cycle and marks": "Цикл статусів завдань та маркери",
    "About Task Genius": "Про Task Genius",
    "Version": "Версія",
    "Documentation": "Документація",
    "View the documentation for this plugin": "Переглянути документацію цього додатку",
    "Open Documentation": "Переглянути документацію",
    "Incomplete tasks": "Незавершені завдання",
    "In progress tasks": "Завдання у процесі",
    "Completed tasks": "Завершені завдання",
    "All tasks": "Усі завдання",
    "After heading": "Після заголовку",
    "End of section": "Кінець розділу",
    "Enable text mark in source mode": "Увімкнути текстовий маркер у вихідному режимі",
    "Make the text mark in source mode follow the task status cycle when clicked.": "Зробити так, щоб текстовий маркер у вихідному режимі слідував циклу статусу завдання при клацанні.",
    "Status name": "Назва статусу",
    "Progress display mode": "Режим відображення прогресу",
    "Choose how to display task progress": "Оберіть відображення для прогрес-бару",
    "No progress indicators": "Без індикатора прогресу",
    "Graphical progress bar": "Графічний прогрес-бар",
    "Text progress indicator": "Текстовий прогрес-бар",
    "Both graphical and text": "Графічний та текстовий",
    "Toggle this to allow this plugin to count sub tasks when generating progress bar.": "Увімкніть, щоб додаток враховував дочірні завдання при створенні прогрес-бару.",
    "Progress format": "Формат прогресу",
    "Choose how to display the task progress": "Виберіть, як відображати прогрес завдання",
    "Percentage (75%)": "Відсоток (75%)",
    "Bracketed percentage ([75%])": "Відсоток у дужках ([75%])",
    "Fraction (3/4)": "Дріб (3/4)",
    "Bracketed fraction ([3/4])": "Дріб у дужках ([3/4])",
    "Detailed ([3✓ 1⟳ 0✗ 1? / 5])": "Детально ([3✓ 1⟳ 0✗ 1? / 5])",
    "Custom format": "Користувацький формат",
    "Range-based text": "Текст з діапазону",
    "Use placeholders like {{COMPLETED}}, {{TOTAL}}, {{PERCENT}}, etc.": "Використовуйте такі заповнювачі: {{COMPLETED}}, {{TOTAL}}, {{PERCENT}} тощо.",
    "Preview:": "Попередній перегляд:",
    "Available placeholders": "Доступні заповнювачі",
    "Available placeholders: {{COMPLETED}}, {{TOTAL}}, {{IN_PROGRESS}}, {{ABANDONED}}, {{PLANNED}}, {{NOT_STARTED}}, {{PERCENT}}, {{COMPLETED_SYMBOL}}, {{IN_PROGRESS_SYMBOL}}, {{ABANDONED_SYMBOL}}, {{PLANNED_SYMBOL}}": "Доступні заповнювачі: {{COMPLETED}}, {{TOTAL}}, {{IN_PROGRESS}}, {{ABANDONED}}, {{PLANNED}}, {{NOT_STARTED}}, {{PERCENT}}, {{COMPLETED_SYMBOL}}, {{IN_PROGRESS_SYMBOL}}, {{ABANDONED_SYMBOL}}, {{PLANNED_SYMBOL}}",
    "Expression examples": "Приклади виразів",
    "Examples of advanced formats using expressions": "Приклади розширених форматів із використанням виразів",
    "Text Progress Bar": "Текстовий прогрес-бар",
    "Emoji Progress Bar": "Емодзі прогрес-бар",
    "Color-coded Status": "Статус із кольоровим кодуванням",
    "Status with Icons": "Статус із іконками",
    "Preview": "Попередній перегляд",
    "Use": "Використати",
    "Save Filter Configuration": "Зберегти конфігурацію фільтра",
    "Load Filter Configuration": "Завантажити конфігурацію фільтра",
    "Save Current Filter": "Зберегти поточний фільтр",
    "Load Saved Filter": "Завантажити збережений фільтр",
    "Filter Configuration Name": "Назва конфігурації фільтра",
    "Filter Configuration Description": "Опис конфігурації фільтра",
    "Enter a name for this filter configuration": "Введіть назву для цієї конфігурації фільтра",
    "Enter a description for this filter configuration (optional)": "Введіть опис для цієї конфігурації фільтра (необов'язково)",
    "No saved filter configurations": "Немає збережених конфігурацій фільтрів",
    "Select a saved filter configuration": "Оберіть збережену конфігурацію фільтра",
    "Delete Filter Configuration": "Видалити конфігурацію фільтра",
    "Are you sure you want to delete this filter configuration?": "Ви дійсно бажаєте видалити цю конфігурацію фільтра?",
    "Filter configuration saved successfully": "Збережена конфігурація фільтру",
    "Filter configuration loaded successfully": "Завантажена конфігурація фільтру",
    "Filter configuration deleted successfully": "Видалена конфігурація фільтру",
    "Failed to save filter configuration": "Помилка збереження конфігурації фільтру",
    "Failed to load filter configuration": "Помилка завантаження конфігурації фільтру",
    "Failed to delete filter configuration": "Помилка видалення конфігурації фільтру",
    "Filter configuration name is required": "Назва конфігурації фільтру обов'язкове",
    "Toggle this to show percentage instead of completed/total count.": "Увімкніть, щоб показувати відсоток замість кількості завершених/загальних.",
    "Customize progress ranges": "Налаштувати діапазони прогресу",
    "Toggle this to customize the text for different progress ranges.": "Увімкніть, щоб налаштувати текст для різних діапазонів прогресу.",
    "Apply Theme": "Застосувати тему",
    "Back to main settings": "Повернутися до основних налаштувань",
    "Support expression in format, like using data.percentages to get the percentage of completed tasks. And using math or even repeat operations to get the result.": "Підтримка виразів у форматі, наприклад, використання data.percentages для отримання відсотка завершених завдань. А також використання математичних операцій, або операцій повторення для отримання результату.",
    "Support expression in format, like using data.percentages to get the percentage of completed tasks. And using math or even repeat functions to get the result.": "Підтримка виразів у форматі, наприклад, використання data.percentages для отримання відсотка завершених завдань. А також використання математичних операцій, або функцій повторення для отримання результату.",
    "Target File:": "Цільовий файл:",
    "Task Properties": "Властивості завдання",
    "Start Date": "Дата початку",
    "Due Date": "Термін виконання",
    "Scheduled Date": "Запланована дата",
    "Priority": "Пріоритет",
    "None": "Немає",
    "Highest": "Найвищий",
    "High": "Високий",
    "Medium": "Середній",
    "Low": "Низький",
    "Lowest": "Найнижчий",
    "Project": "Проєкт",
    "Project name": "Назва проєкту",
    "Context": "Контекст",
    "Recurrence": "Повторення",
    "e.g., every day, every week": "наприклад: щодня, щотижня",
    "Task Content": "Вміст завдання",
    "Task Details": "Деталі завдання",
    "File": "Файл",
    "Edit in File": "Змінити у файлі",
    "Mark Incomplete": "Позначити незавершеним",
    "Mark Complete": "Позначити завершеним",
    "Task Title": "Назва завдання",
    "Tags": "Мітки",
    "e.g. every day, every 2 weeks": "наприклад: щодня, кожні 2 тижні",
    "Forecast": "Прогноз",
    "0 actions, 0 projects": "0 дій, 0 проєктів",
    "Toggle list/tree view": "Перемкнути подання списку/дерева",
    "Focusing on Work": "Фокусування на роботі",
    "Unfocus": "Розфокусувати",
    "Past Due": "Прострочено",
    "Future": "Майбутнє",
    "actions": "дії",
    "project": "проєкт",
    "Coming Up": "Наступні",
    "Task": "Завдання",
    "Tasks": "Завдання",
    "No upcoming tasks": "Немає наступних завдань",
    "No tasks scheduled": "Немає запланованих завдань",
    "0 tasks": "0 завдань",
    "Filter tasks...": "Фільтрувати завдання...",
    "Projects": "Проєкти",
    "Toggle multi-select": "Перемкнути множинний вибір",
    "No projects found": "Проєкти не знайдені",
    "projects selected": "вибрано проєктів",
    "tasks": "завдань",
    "No tasks in the selected projects": "Немає завдань у обраних проєктах",
    "Select a project to see related tasks": "Оберіть проєкт, щоб побачити пов’язані завдання",
    "Configure Review for": "Налаштувати огляд для",
    "Review Frequency": "Частота огляду",
    "How often should this project be reviewed": "Як часто потрібно переглядати цей проєкт",
    "Custom...": "Користувацький...",
    "e.g., every 3 months": "наприклад: кожні 3 місяці",
    "Last Reviewed": "Останній огляд",
    "Please specify a review frequency": "Будь ласка, вкажіть частоту огляду",
    "Review schedule updated for": "Графік огляду оновлено для",
    "Review Projects": "Огляд проєктів",
    "Select a project to review its tasks.": "Оберіть проєкт для огляду його завдань.",
    "Configured for Review": "Налаштовано для огляду",
    "Not Configured": "Не налаштовано",
    "No projects available.": "Немає доступних проєктів.",
    "Select a project to review.": "Оберіть проєкт для огляду.",
    "Show all tasks": "Показати всі завдання",
    "Showing all tasks, including completed tasks from previous reviews.": "Показані всі завдання, включно із завершеними завданнями з попередніх оглядів.",
    "Show only new and in-progress tasks": "Показати лише нові та завдання в процесі",
    "No tasks found for this project.": "Для цього проєкту завдань не знайдено.",
    "Review every": "Оглядувати кожні",
    "never": "ніколи",
    "Last reviewed": "Останній огляд",
    "Mark as Reviewed": "Позначити оглянутим",
    "No review schedule configured for this project": "Не налаштований графік огляду цього проєкту",
    "Configure Review Schedule": "Налаштувати графік огляду",
    "Project Review": "Огляд проєкту",
    "Select a project from the left sidebar to review its tasks.": "Оберіть проєкт у лівій бічній панелі, щоб переглянути його завдання.",
    "Inbox": "Вхідні",
    "Flagged": "Позначені",
    "Review": "Огляд",
    "tags selected": "вибрано міток",
    "No tasks with the selected tags": "Немає завдань із вибраними мітками",
    "Select a tag to see related tasks": "Оберіть мітку, щоб побачити пов’язані завдання",
    "Open Task Genius view": "Відкрити Task Genius",
    "Task capture with metadata": "Захоплення завдання з метаданими",
    "Refresh task index": "Оновити індекс завдань",
    "Refreshing task index...": "Оновлення індексу завдань...",
    "Task index refreshed": "Індекс завдань оновлено",
    "Failed to refresh task index": "Не вдалося оновити індекс завдань",
    "Force reindex all tasks": "Примусово переіндексувати всі завдання",
    "Clearing task cache and rebuilding index...": "Очищення кешу завдань і перебудова індексу...",
    "Task index completely rebuilt": "Індекс завдань повністю перебудовано",
    "Failed to force reindex tasks": "Не вдалося примусово переіндексувати завдання",
    "Task Genius View": "Вигляд Task Genius",
    "Toggle Sidebar": "Перемкнути бічну панель",
    "Details": "Деталі",
    "View": "Подання",
    "Task Genius view is a comprehensive view that allows you to manage your tasks in a more efficient way.": "Подання Task Genius — це комплексний вигляд, який дозволяє більш ефективно керувати завданнями.",
    "Enable task genius view": "Увімкнути подання Task Genius",
    "Select a task to view details": "Оберіть завдання, щоб переглянути деталі",
    "Status": "Стан",
    "Comma separated": "Розділені комами",
    "Focus": "Фокус",
    "Loading more...": "Завантаження ще...",
    "projects": "проєкти",
    "No tasks for this section.": "Немає завдань для цього розділу.",
    "No tasks found.": "Завдання не знайдені.",
    "Complete": "Завершити",
    "Switch status": "Перемкнути статус",
    "Rebuild index": "Перебудувати індекс",
    "Rebuild": "Перебудувати",
    "0 tasks, 0 projects": "0 завдань, 0 проєктів",
    "New Custom View": "Нове користувацьке подання",
    "Create Custom View": "Створити користувацьке подання",
    "Edit View: ": "Редагувати подання: ",
    "View Name": "Назва подання",
    "My Custom Task View": "Моє користувацьке подання завдань",
    "Icon Name": "Назва іконки",
    "Enter any Lucide icon name (e.g., list-checks, filter, inbox)": "Введіть будь-яку назву іконки Lucide (наприклад: list-checks, filter, inbox)",
    "Filter Rules": "Правила фільтрації",
    "Hide Completed and Abandoned Tasks": "Приховати завершені та покинуті завдання",
    "Hide completed and abandoned tasks in this view.": "Приховати завершені та покинуті завдання в цьому вигляді.",
    "Text Contains": "Текст містить",
    "Filter tasks whose content includes this text (case-insensitive).": "Фільтрувати завдання, вміст яких включає цей текст (без урахування регістру).",
    "Tags Include": "Мітки включають",
    "Task must include ALL these tags (comma-separated).": "Завдання має включати ВСІ ці мітки (розділені комами).",
    "Tags Exclude": "Мітки виключають",
    "Task must NOT include ANY of these tags (comma-separated).": "Завдання НЕ має включати ЖОДЕН із цих міток (розділені комами).",
    "Project Is": "Проєкт",
    "Task must belong to this project (exact match).": "Завдання має належати до цього проєкту (точна відповідність).",
    "Priority Is": "Пріоритет",
    "Task must have this priority (e.g., 1, 2, 3).": "Завдання має мати цей пріоритет (наприклад: 1, 2, 3).",
    "Status Include": "Статус включає",
    "Task status must be one of these (comma-separated markers, e.g., /,>).": "Статус завдання має бути одним із цих (маркери, розділені комами, наприклад: /,>).",
    "Status Exclude": "Статус виключає",
    "Task status must NOT be one of these (comma-separated markers, e.g., -,x).": "Статус завдання НЕ має бути одним із цих (маркери, розділені комами, наприклад: -,x).",
    "Use YYYY-MM-DD or relative terms like 'today', 'tomorrow', 'next week', 'last month'.": "Використовуйте YYYY-MM-DD, або відносні терміни, такі як 'сьогодні', 'завтра', 'наступний тиждень', 'минулий місяць'.",
    "Due Date Is": "Термін виконання",
    "Start Date Is": "Дата початку",
    "Scheduled Date Is": "Запланована дата",
    "Path Includes": "Шлях включає",
    "Task must contain this path (case-insensitive).": "Завдання має містити цей шлях (без урахування регістру).",
    "Path Excludes": "Шлях виключає",
    "Task must NOT contain this path (case-insensitive).": "Завдання НЕ має містити цей шлях (без урахування регістру).",
    "Unnamed View": "Подання без назви",
    "View configuration saved.": "Налаштування подання збережені.",
    "Hide Details": "Приховати деталі",
    "Show Details": "Показати деталі",
    "View Config": "Налаштування подання",
    "View Configuration": "Конфігурація подання",
    "Configure the Task Genius sidebar views, visibility, order, and create custom views.": "Налаштуйте вигляди бічної панелі Task Genius, їхню видимість, порядок і створюйте користувацькі вигляди.",
    "Manage Views": "Керування виглядами",
    "Configure sidebar views, order, visibility, and hide/show completed tasks per view.": "Налаштуйте вигляди бічної панелі, їхній порядок, видимість завершених завдань для кожного подання.",
    "Show in sidebar": "Показати в бічній панелі",
    "Edit View": "Редагувати подання",
    "Move Up": "Перемістити вгору",
    "Move Down": "Перемістити вниз",
    "Delete View": "Видалити подання",
    "Add Custom View": "Додати користувацьке подання",
    "Error: View ID already exists.": "Помилка: ID подання вже існує.",
    "Events": "Календань",
    "Plan": "План",
    "Year": "Рік",
    "Month": "Місяць",
    "Week": "Тиждень",
    "Day": "День",
    "Agenda": "Порядок денний",
    "Back to categories": "Повернутися до категорій",
    "No matching options found": "Відповідних варіантів не знайдено",
    "No matching filters found": "Відповідних фільтрів не знайдено",
    "Tag": "Мітка",
    "File Path": "Шлях файлу",
    "Add filter": "Додати фільтр",
    "Clear all": "Очистити все",
    "Add Card": "Додати картку",
    "First Day of Week": "Перший день тижня",
    "Overrides the locale default for calendar views.": "Перевизначає налаштування локалі за замовчуванням для виглядів календаря.",
    "Show checkbox": "Показати прапорець",
    "Show a checkbox for each task in the kanban view.": "Показувати прапорець кожного завдання у вигляді канбан.",
    "Locale Default": "Локальна за замовчуванням",
    "Use custom goal for progress bar": "Використовувати користувацьку мету для прогрес-бару",
    "Toggle this to allow this plugin to find the pattern g::number as goal of the parent task.": "Увімкніть, щоб додаток шукав шаблон g::number як мету батьківського завдання.",
    "Prefer metadata format of task": "Віддавати перевагу формату метаданих завдання",
    "You can choose dataview format or tasks format, that will influence both index and save format.": "Ви можете вибрати формат dataview, або tasks, що вплине на формат індексу та збереження.",
    "Open in new tab": "Відкрити у новомий вкладці",
    "Open settings": "Відкрити налаштування",
    "Hide in sidebar": "Приховати у бічній панелі",
    "No items found": "Немає елементів",
    "High Priority": "Високий пріоритет",
    "Medium Priority": "Середній пріоритет",
    "Low Priority": "Низький пріоритет",
    "No tasks in the selected items": "Немає завдань у вибраних елементах",
    "View Type": "Тип подання",
    "Select the type of view to create": "Виберіть тип подання для створення",
    "Standard View": "Стандартне подання",
    "Two Column View": "Двоколонкове подання",
    "Items": "Елементи",
    "selected items": "вибрані елементи",
    "No items selected": "Немає вибраних елементів",
    "Two Column View Settings": "Налаштування двоколонкового подання",
    "Group by Task Property": "Групувати за пріоритетом завдання",
    "Select which task property to use for left column grouping": "Виберіть властивість завдання для групування у лівій колонці",
    "Priorities": "Пріоритети",
    "Contexts": "Контексти",
    "Due Dates": "Терміни виконання",
    "Scheduled Dates": "Заплановані дати",
    "Start Dates": "Дати початку",
    "Files": "Файли",
    "Left Column Title": "Лівий стовбець",
    "Title for the left column (items list)": "Назва лівого стовбця (список елементів)",
    "Right Column Title": "Правий стовбець",
    "Default title for the right column (tasks list)": "Назва правого стовбця (список завдань)",
    "Multi-select Text": "Текст множинного вибору",
    "Text to show when multiple items are selected": "Відображаємий текст, коли вибрано кілька елементів",
    "Empty State Text": "Текст порожнього стану",
    "Text to show when no items are selected": "Відображаємий текст, коли немає вибраних елементів",
    "Filter Blanks": "Фільтрувати порожні завдання",
    "Filter out blank tasks in this view.": "Фільтрувати порожні завдання в цьому вигляді.",
    "Task must contain this path (case-insensitive). Separate multiple paths with commas.": "Завдання має містити цей шлях (без урахування регістру). Розділяйте кілька шляхів комами.",
    "Task must NOT contain this path (case-insensitive). Separate multiple paths with commas.": "Завдання НЕ має містити цей шлях (без урахування регістру). Розділяйте кілька шляхів комами.",
    "You have unsaved changes. Save before closing?": "Ви маєте незбережені зміни. Зберегти перед закриттям?",
    "Rotate": "Повернути",
    "Are you sure you want to force reindex all tasks?": "Ви дійсно бажаєте примусово переіндексувати всі завдання?",
    "Enable progress bar in reading mode": "Відображати прогрес-бар у режимі читання",
    "Toggle this to allow this plugin to show progress bars in reading mode.": "Увімкніть для відображення прогрес-бару у режимі читання.",
    "Range": "Діапазон",
    "as a placeholder for the percentage value": "як замінник для значення відсотка",
    "Template text with": "Шаблон тексту з",
    "placeholder": "замінником",
    "Reindex": "Переіндексувати",
    "From now": "З цього моменту",
    "Complete workflow": "Завершити робочий процес",
    "Move to": "Перемістити до",
    "Settings": "Налаштування",
    "Just started": "Щойно розпочато",
    "Making progress": "Досягнення прогресу",
    "Half way": "Половина шляху",
    "Good progress": "Гарний прогрес",
    "Almost there": "Майже готово",
    "archived on": "архівовано",
    "moved": "переміщено",
    "Capture your thoughts...": "Записуйте свої думки...",
    "Project Workflow": "Робочий процес проєкта",
    "Standard project management workflow": "Стандартний процес керування проєктами",
    "Planning": "Заплановано",
    "Development": "Розробка",
    "Testing": "Тестування",
    "Cancelled": "Скасовано",
    "Habit": "Звичка",
    "Drink a cup of good tea": "Випити чашку гарного чаю",
    "Watch an episode of a favorite series": "Подивитися серію улюбленого серіалу",
    "Play a game": "Пограти у гру",
    "Eat a piece of chocolate": "З’їсти шматочок шоколаду",
    "common": "звичайна",
    "rare": "рідкісна",
    "legendary": "легендарна",
    "No Habits Yet": "Звичок ще немає",
    "Click the open habit button to create a new habit.": "Натисніть кнопку відкриття звички, щоб створити нову звичку.",
    "Please enter details": "Будь ласка, вкажіть подробиці",
    "Goal reached": "Мета досягнута",
    "Exceeded goal": "Мета перевищена",
    "Active": "Активна",
    "today": "сьогодні",
    "Inactive": "Неактивна",
    "All Done!": "Всё зроблено!",
    "Select event...": "Оберіть подію...",
    "Create new habit": "Створити нову звичку",
    "Edit habit": "Редагувати звичку",
    "Habit type": "Тип звички",
    "Daily habit": "Щоденна",
    "Simple daily check-in habit": "Проста щоденна звичка для відстеження",
    "Count habit": "Кількісна",
    "Record numeric values, e.g., how many cups of water": "Записуйте кількість зробленого, наприклад: лічильник чашок води",
    "Mapping habit": "Зіставна",
    "Use different values to map, e.g., emotion tracking": "Використовуйте різні значення для зіставлення, наприклад: відстеження емоцій",
    "Scheduled habit": "За розкладом",
    "Habit with multiple events": "Звичка з декількома подіями",
    "Habit name": "Назва звички",
    "Display name of the habit": "Відображаєма назва звички",
    "Optional habit description": "Додатковий опис",
    "Icon": "Іконка",
    "Please enter a habit name": "Будь ласка, введіть назву звички",
    "Property name": "Властивость",
    "The property name of the daily note front matter": "Назва властивості у щоденній нотатці",
    "Completion text": "Текст завершення",
    "(Optional) Specific text representing completion, leave blank for any non-empty value to be considered completed": "(Необов’язково) Конкретний текст для завершення. Залиште порожнім, щоб будь-яке непорожнє значення вважалося завершеним",
    "The property name in daily note front matter to store count values": "Назва властивості у щоденній нотатці де зберігатиметися значення підрахунку",
    "Minimum value": "Мін значення",
    "(Optional) Minimum value for the count": "(Необов’язково) Мінімальне значення лічильника",
    "Maximum value": "Макс значення",
    "(Optional) Maximum value for the count": "(Необов’язково) Максимальне значення лічильника",
    "Unit": "Одиниця",
    "(Optional) Unit for the count, such as 'cups', 'times', etc.": "(Необов’язково) Одиниця підрахунку, наприклад: 'чашки', 'рази' тощо.",
    "Notice threshold": "Поріг сповіщення",
    "(Optional) Trigger a notification when this value is reached": "(Необов’язково) Сповіщати при досягненні цього значення",
    "The property name in daily note front matter to store mapping values": "Назва властивості у щоденній нотатці де зберігатимуться значення зіставлення",
    "Value mapping": "Значення зіставлення",
    "Define mappings from numeric values to display text": "Визначити зісталення для числових значень відображення тексту",
    "Add new mapping": "Створити нове зіставлення",
    "Scheduled events": "Заплановані події",
    "Add multiple events that need to be completed": "Додайте кілька подій, які потрібно завершити",
    "Event name": "Назва події",
    "Event details": "Опис події",
    "Add new event": "Додати нову подію",
    "Please enter a property name": "Будь ласка, введіть назву властивості",
    "Please add at least one mapping value": "Будь ласка, додайте принаймні одну значення зісталвлення",
    "Mapping key must be a number": "Ключ зіставлення повинен бути числом",
    "Please enter text for all mapping values": "Будь ласка, введіть текст для всіх зіставленних значень",
    "Please add at least one event": "Будь ласка, додайте принаймні одну подію",
    "Event name cannot be empty": "Назва події не може бути порожньою",
    "Add new habit": "Додати нову звичку",
    "No habits yet": "Ще немає звичок",
    "Click the button above to add your first habit": "Натисніть кнопку вище щоб додати першу звичку",
    "Habit updated": "Звичку оновлено",
    "Habit added": "Звичка додана",
    "Delete habit": "Видалити звичку",
    "This action cannot be undone.": "Цю дію не можна скасувати.",
    "Habit deleted": "Звичку видалено",
    "You've Earned a Reward!": "Ви отримали нагороду!",
    "Your reward:": "Ваша нагорода:",
    "Image not found:": "Зображення не знайдено:",
    "Claim Reward": "Отримати нагороду",
    "Skip": "Пропустити",
    "Reward": "Нагорода",
    "View & Index Configuration": "Налаштування Подання та Індексації",
    "Enable task genius view will also enable the task genius indexer, which will provide the task genius view results from whole vault.": "Увімкнення Task Genius, також увімкне індексатор task genius, який надасть у поданні task genius результати з усього сховища.",
    "Use daily note path as date": "Використати дату як шлях до щоденної нотатки",
    "If enabled, the daily note path will be used as the date for tasks.": "Якщо увімкнено, шлях до щоденної нотатки буде використовуватися як дата для завдань.",
    "Task Genius will use moment.js and also this format to parse the daily note path.": "Task Genius буде використовувати moment.js та цей формат, для обробки шляху щоденної нотатки.",
    "You need to set `yyyy` instead of `YYYY` in the format string. And `dd` instead of `DD`.": "У рядку форматування потрібно вказати `yyyy` замість `YYYY`. Та `dd` замість `DD`.",
    "Daily note format": "Формат щоденної нотатки",
    "Daily note path": "Шлях щоденної нотатки",
    "Select the folder that contains the daily note.": "Оберіть теку яка містить щоденну нотатку.",
    "Use as date type": "Використовувати як тип дати",
    "You can choose due, start, or scheduled as the date type for tasks.": "Ви можете обрати тип дати завдання як термін, початок, або заплановано.",
    "Due": "Термін",
    "Start": "Початок",
    "Scheduled": "Заплановано",
    "Rewards": "Нагороди",
    "Configure rewards for completing tasks. Define items, their occurrence chances, and conditions.": "Налаштуйте нагороди за виконання завдань. Визначайте елементи, ймовірності їх появи та умови.",
    "Enable rewards": "Увімкнути нагороди",
    "Toggle to enable or disable the reward system.": "Перемикач увімкнення/вимкнення системи нагород.",
    "Occurrence levels": "Рівні виникнення",
    "Define different levels of reward rarity and their probability.": "Визначити різні рівні рідкісності нагороди та їхню ймовірність.",
    "Chance must be between 0 and 100.": "Ймовірність повинна бути від 0 до 100.",
    "Level name (e.g., common)": "Назва рівня (наприклад: звичайний)",
    "Chance (%)": "Ймовірність (%)",
    "Delete level": "Видалити рівень",
    "Add occurrence level": "Додати рівень виникнення",
    "New level": "Новий рівень",
    "Reward items": "Нагороди",
    "Manage the specific rewards that can be obtained.": "Керуйте конкретними нагородами, які можна отримати.",
    "No levels defined": "Рівні не визначені",
    "Reward name/text": "Назва/текст нагороди",
    "Inventory (-1 for ∞)": "Інвентар (-1 для ∞)",
    "Invalid inventory number.": "Невірний номер інвентаря.",
    "Condition (e.g., #tag AND project)": "Умова (#мітка AND проєкт)",
    "Image url (optional)": "URL зображення (необов’язково)",
    "Delete reward item": "Видалити нагороду",
    "No reward items defined yet.": "Нагороди ще не визначені.",
    "Add reward item": "Додати нагороду",
    "New reward": "Нова нагорода",
    "Configure habit settings, including adding new habits, editing existing habits, and managing habit completion.": "Налаштуйте параметри звичок, включаючи додавання нових, редагування існуючих та керування завершенням звичок.",
    "Enable habits": "Увімкнути звички",
    "Reward display type": "Тип відображення нагороди",
    "Choose how rewards are displayed when earned.": "Оберіть відображення нагороди після досягнення.",
    "Modal dialog": "Модальне вікно",
    "Notice (Auto-accept)": "Повідомлення (автоприйняття)",
    "Task sorting is disabled or no sort criteria are defined in settings.": "Сортування завдань вимкнено, або не визначені критерії сортування у нааштунках.",
    "e.g. #tag1, #tag2, #tag3": "тобто #мітка1, #мітка2, #мітка3",
    "Overdue": "Прострочені",
    "No tasks found for this tag.": "За цією міткою не знайдено завдань.",
    "New custom view": "Додати подання",
    "Create custom view": "Створити власне подання",
    "Copy view: ": "Копіювати вигляд: ",
    "Copy View": "Копіювати вигляд",
    "Copy view": "Копіювати вигляд",
    "Copy of ": "Копія з ",
    "Creating a copy based on: ": "Створення копії на основі: ",
    "You can modify all settings below. The original view will remain unchanged.": "Ви можете змінити всі налаштування нижче. Початковий вигляд залишиться незмінним.",
    "View copied successfully: ": "Вигляд успішно скопійовано: ",
    "Edit view: ": "Редагувати подання: ",
    "Icon name": "Назва іконки",
    "First day of week": "Перший день тижня",
    "Overrides the locale default for forecast views.": "Перевизначає типові локальні у перегляді Прогнозу.",
    "View type": "Тип перегляду",
    "Standard view": "Стандартне подання",
    "Two column view": "Подання у два стовпчики",
    "Two column view settings": "Налаштування перегляду у два стовпчики",
    "Group by task property": "Групувати за властивістю завдання",
    "Left column title": "Назва лівого стовбця",
    "Right column title": "Назва правого стовбця",
    "Empty state text": "Текст пустого стану",
    "Hide completed and abandoned tasks": "Приховати завершені та покинуті завдання",
    "Filter blanks": "Фільтрувати порожні",
    "Text contains": "Текст містить",
    "Tags include": "Мітки включають",
    "Tags exclude": "За винятком міток",
    "Project is": "Проєкт",
    "Priority is": "Пріоритет",
    "Status include": "Має статус",
    "Status exclude": "Без стану",
    "Due date is": "Термін виконання - до",
    "Start date is": "Дата початку",
    "Scheduled date is": "Запланована дата проведення",
    "Path includes": "Шлях співпадає",
    "Path excludes": "Шлях не співпадає",
    "Sort Criteria": "Критерій сортування",
    "Define the order in which tasks should be sorted. Criteria are applied sequentially.": "Визначити порядок сортування завдань. Критерії застосовуються послідовно.",
    "No sort criteria defined. Add criteria below.": "Критерії сортування не визначені. Створіть новий нижче.",
    "Content": "Зміст",
    "Ascending": "Зростання",
    "Descending": "Спадання",
    "Ascending: High -> Low -> None. Descending: None -> Low -> High": "Зростання: Високий -> Низький -> Немає. Спадання: Немає -> Низький -> Високийigh",
    "Ascending: Earlier -> Later -> None. Descending: None -> Later -> Earlier": "Зростання: Раніше -> Пізніше -> Немає. Спадання: Немає -> Пізніше -> Раніше",
    "Ascending respects status order (Overdue first). Descending reverses it.": "Зростання дотримується порядку стану (Прострочені першими). Спадання - змінює його на протилежний.",
    "Ascending: A-Z. Descending: Z-A": "Зростання: А-Я. Спадання: Я-А",
    "Remove Criterion": "Видалити критерій",
    "Add Sort Criterion": "Додати критерій сортування",
    "Reset to Defaults": "Скинути до типових налаштувань",
    "Has due date": "Має термін виконання",
    "Has date": "Має дату",
    "No date": "Без дати",
    "Any": "Будь-який",
    "Has start date": "Має дату початку",
    "Has scheduled date": "Має заплановану дату",
    "Has created date": "Має дату створення",
    "Has completed date": "Має дату виконання",
    "Only show tasks that match the completed date.": "Відображати лише завдання, котрі відповідають завершеній даті.",
    "Has recurrence": "Має повторення",
    "Has property": "Має властивость",
    "No property": "Без властивості",
    "Unsaved Changes": "Незбережені зміни",
    "Sort Tasks in Section": "Сортувати завдання у вибраному",
    "Tasks sorted (using settings). Change application needs refinement.": "Завдання відсортовано (згідно налаштувань). Застосування змін потребує доопрацювання.",
    "Sort Tasks in Entire Document": "Сортувати завдання в усьому документі",
    "Entire document sorted (using settings).": "Весь документ відсортовано (згідно налаштувань).",
    "Tasks already sorted or no tasks found.": "Завдання вже відсортовані, або завдань не знайдено.",
    "Task Handler": "Обробник завдань",
    "Show progress bars based on heading": "Відображати прогрес-бар у заголовку",
    "Toggle this to enable showing progress bars based on heading.": "Увімкнути відображення індікатора виконання у заголовку.",
    "# heading": "# заголовок",
    "Task Sorting": "Сортування завдань",
    "Configure how tasks are sorted in the document.": "Налаштуйте як сортуватимуться завдання у документах.",
    "Enable Task Sorting": "Увімкнути сортування завдань",
    "Toggle this to enable commands for sorting tasks.": "Перемкнути, щоб увімкнути команди для сортування завдань.",
    "Use relative time for date": "Вікористовувати відносний час для дати",
    "Use relative time for date in task list item, e.g. 'yesterday', 'today', 'tomorrow', 'in 2 days', '3 months ago', etc.": "Використовувати відносний час дат у переліку завдань, наприклад: 'вчора', 'сьогодні', 'завтра', 'через 2 дні', '3 місяці тому' і т.д.",
    "Ignore all tasks behind heading": "Ігнорувати всі завдання під заголовком",
    "Enter the heading to ignore, e.g. '## Project', '## Inbox', separated by comma": "Вкажіть заголовки для ігнорування, тобто: '## Проєкт', '## Вхідні' (розділені комами)",
    "Focus all tasks behind heading": "Сфокусувати завдання за заголовком",
    "Enter the heading to focus, e.g. '## Project', '## Inbox', separated by comma": "Вкажіть заголовки для фокусування, тобто: '## Проєкт', '## Вхідні' (розділені комами)",
    "Level Name (e.g., common)": "Назва рівня, наприклад: звичайний",
    "Delete Level": "Видалити рівень",
    "New Level": "Додати рівень",
    "Reward Name/Text": "Нова нагорода",
    "New Reward": "Нова нагорода",
    "Created": "Створений",
    "Updated": "Оновлений",
    "Filter Summary": "Підсумок фільтра",
    "Root condition": "Коренева умова",
    "Priority (High to Low)": "Пріоритет (Високий до Низького)",
    "Priority (Low to High)": "Пріоритет (Низький до Високого)",
    "Due Date (Earliest First)": "Термін виконання (спочатку найраніший)",
    "Due Date (Latest First)": "Термін виконання (спочатку найпізніший)",
    "Scheduled Date (Earliest First)": "Запланована дата (спочатку найшвидша)",
    "Scheduled Date (Latest First)": "Запланована дата (спочатку найпізніша)",
    "Start Date (Earliest First)": "Дата початку (спочатку найшвидша)",
    "Start Date (Latest First)": "Дата початку (спочатку найпізніша)",
    "Created Date": "Дата створення",
    "Overview": "Огляд",
    "Dates": "Дати",
    "e.g. #tag1, #tag2": "наприклад: #мітка1, #мітка2",
    "e.g. @home, @work": "наприклад: @дом, @робота",
    "Recurrence Rule": "Правило повторення",
    "e.g. every day, every week": "наприклад: щодня, щотижня",
    "Edit Task": "Редагувати завдання",
    "Load": "Завантажити",
    "filter group": "група фільтрів",
    "filter": "фільтр",
    "Match": "Збіг",
    "All": "Все",
    "Add filter group": "Додати групу фільтрів",
    "filter in this group": "фільтрувати у цій групі",
    "Duplicate filter group": "Дублювати групу фільтрів",
    "Remove filter group": "Видалити групу фільтрів",
    "OR": "АБО",
    "AND NOT": "ТА НЕ",
    "AND": "ТА",
    "Remove filter": "Видалити фільтр",
    "contains": "містить",
    "does not contain": "не містить",
    "is": "є",
    "is not": "не є",
    "starts with": "починається з",
    "ends with": "закінчується",
    "is empty": "порожній",
    "is not empty": "не порожній",
    "is true": "є істиною",
    "is false": "є хибним",
    "is set": "встановлено",
    "is not set": "не встановлено",
    "equals": "дорівнює",
    "NOR": "НЕ",
    "Group by": "Групувати за",
    "Select which task property to use for creating columns": "Оберіть поле завдання для використання при створенні стовпців",
    "Hide empty columns": "Сховати порожні стовпці",
    "Hide columns that have no tasks.": "Сховати стовпці, в яких немає завдань.",
    "Default sort field": "Поле сортування за замовчуванням",
    "Default field to sort tasks by within each column.": "Поле за замовчуванням для сортування завдань у кожному стовпці.",
    "Default sort order": "Порядок сортування за замовчуванням",
    "Default order to sort tasks within each column.": "Порядок сортування у кожному стовпці за замовчуванням.",
    "Custom Columns": "Користувацькі стовпці",
    "Configure custom columns for the selected grouping property": "Налаштуйте користувацькі стовпці для вибраного поля групування",
    "No custom columns defined. Add columns below.": "Користувацькі стовпці не визначені. Додайте стовпці нижче.",
    "Column Title": "Назва стовпця",
    "Value": "Значення",
    "Remove Column": "Видалити стовпець",
    "Add Column": "Додати стовпець",
    "New Column": "Новий стовпець",
    "Reset Columns": "Скинути стовпці",
    "Task must have this priority (e.g., 1, 2, 3). You can also use 'none' to filter out tasks without a priority.": "Завдання повинно мати цей пріоритет (наприклад: 1, 2, 3). Також можна використовувати 'none', для фільтрації завдань без пріоритету.",
    "Filter": "Фільтр",
    "Reset Filter": "Скинути фільтр",
    "Saved Filters": "Збережені фільтри",
    "Manage Saved Filters": "Керувати збереженими фільтрами",
    "Filter applied: ": "Застосовано фільтр: ",
    "Recurrence date calculation": "Обчислення дати повторення",
    "Choose how to calculate the next date for recurring tasks": "Оберіть, як розрахувати наступну дату для повторюваних завдань",
    "Based on due date": "Згідно з терміном виконання",
    "Based on scheduled date": "За запланованою датою",
    "Based on current date": "За поточною датою",
    "Task Gutter": "Панель завдання",
    "Configure the task gutter.": "Налаштуйте панель завдань.",
    "Enable task gutter": "Увімкнути панель деталей завдання",
    "Toggle this to enable the task gutter.": "Перемкніть для увімкнення бічної панелі деталей завдання.",
    "Line Number": "Номер рядка",
    "Tasks Plugin Detected": "Виявлено додаток Tasks",
    "Current status management and date management may conflict with the Tasks plugin. Please check the ": "Управління поточним статусом та датами можуть конфліктувати з додатком Tasks. Будь ласка, перевірте ",
    "compatibility documentation": "документація про сумісність",
    " for more information.": " для додаткової інформації.",
    "Auto Date Manager": "Автоматичний менеджер дат",
    "Automatically manage dates based on task status changes": "Автоматично управляйте датами на основі змін стану завдань",
    "Enable auto date manager": "Увімкнути автоматичний менеджер дат",
    "Toggle this to enable automatic date management when task status changes. Dates will be added/removed based on your preferred metadata format (Tasks emoji format or Dataview format).": "Увімкніть для активації автоматичного управління датами при зміні стану завдань. Дати будуть додаватися/видалятися згідно з вказаним форматом метаданих (Формат emoji, або Формат Dataview).",
    "Manage completion dates": "Керування датами завершення",
    "Automatically add completion dates when tasks are marked as completed, and remove them when changed to other statuses.": "Автоматично додавати дати завершення, коли завдання завершені, та видаляти їх при перемиканні в інші статуси.",
    "Manage start dates": "Керувати датами початку",
    "Automatically add start dates when tasks are marked as in progress, and remove them when changed to other statuses.": "Автоматично додавати дату початку, коли завдання позначено 'в процесі', та видаляти їх при перемиканні в інші статуси.",
    "Manage cancelled dates": "Керування скасованими датами",
    "Automatically add cancelled dates when tasks are marked as abandoned, and remove them when changed to other statuses.": "Автоматично додавати дати скасування, коли завдання вважаються покинутими, та видаляти їх при перемиканні в інші статуси.",
    "Beta": "Бета",
    "Beta Test Features": "Функції бета-тестування",
    "Experimental features that are currently in testing phase. These features may be unstable and could change or be removed in future updates.": "Експериментальні функції, які наразі знаходяться на стадії тестування. Ці функції можуть бути нестабільними та можуть змінюватися, або бути видаленими в майбутніх оновленнях.",
    "Beta Features Warning": "Попередження про бета-функції",
    "These features are experimental and may be unstable. They could change significantly or be removed in future updates due to Obsidian API changes or other factors. Please use with caution and provide feedback to help improve these features.": "Ці функції експериментальні та можуть бути нестабільними. Вони можуть суттєво змінитися, або бути видаленими в майбутніх оновленнях через зміни API Obsidian, або інші фактори. Будь ласка, використовуйте з обережністю та надайте відгуки, щоб допомогти покращити роботу.",
    "Base View": "Вигляд Баз",
    "Advanced view management features that extend the default Task Genius views with additional functionality.": "Розширені можливості управління переглядом, які доповнюють стандартний перегляд Task Genius додатковим функціоналом.",
    "Enable experimental Base View functionality. This feature provides enhanced view management capabilities but may be affected by future Obsidian API changes. You may need to restart Obsidian to see the changes.": "Enable experimental Base View functionality. This feature provides enhanced view management capabilities but may be affected by future Obsidian API changes. You may need to restart Obsidian to see the changes.",
    "You need to close all bases view if you already create task view in them and remove unused view via edit them manually when disable this feature.": "You need to close all bases view if you already create task view in them and remove unused view via edit them manually when disable this feature.",
    "Enable Base View": "Увімкнути вигляд Баз",
    "Enable experimental Base View functionality. This feature provides enhanced view management capabilities but may be affected by future Obsidian API changes.": "Увімкнути експериментальні функції перегляду Баз. Функція забезпечує вдосконалені можливості керування, але її можуть змінити з подальшими змінами API Obsidian.",
    "Enable": "Увімкнути",
    "Beta Feedback": "Відгук про бета-версію",
    "Help improve these features by providing feedback on your experience.": "Допоможіть покращити ці функції, надіславши відгук про свій досвід.",
    "Report Issues": "Повідомити про проблему",
    "If you encounter any issues with beta features, please report them to help improve the plugin.": "Якщо у вас виникли проблеми з бета-функціями, повідомте про них, щоб покращити додаток.",
    "Report Issue": "Звітувати про помилку",
    "Table": "Таблиця",
    "No Priority": "Немає пріоритету",
    "Click to select date": "Натисніть для вибору дати",
    "Enter tags separated by commas": "Введіть мітки, розділені комами",
    "Enter project name": "Введіть назву проєкту",
    "Enter context": "Введіть контекст",
    "Invalid value": "Недійсне значення",
    "No tasks": "Немає завдань",
    "1 task": "1 завдання",
    "Columns": "Стовпці",
    "Toggle column visibility": "Перемкнути видимість стовпця",
    "Switch to List Mode": "Перемкнутися в режим списку",
    "Switch to Tree Mode": "Перемкнутися в режим дерева",
    "Collapse": "Згорнути",
    "Expand": "Розгорнути",
    "Collapse subtasks": "Згорнути підзадачі",
    "Expand subtasks": "Розгорнути підзадачі",
    "Click to change status": "Натисніть для зміни статусу",
    "Click to set priority": "Натисніть для вказання пріоритету",
    "Yesterday": "Вчора",
    "Click to edit date": "Натисніть для редагування дати",
    "No tags": "Міток немає",
    "Click to open file": "Натисніть для відкриття файлу",
    "No tasks found": "Завдання не знайдені",
    "Completed Date": "Дата завершення",
    "Loading...": "Завантаження...",
    "Advanced Filtering": "Розширене фільтрування",
    "Use advanced multi-group filtering with complex conditions": "Використати розширену фільтрацію зі складними умовами",
    "Auto-moved": "Auto-moved",
    "tasks to": "tasks to",
    "Failed to auto-move tasks:": "Failed to auto-move tasks:",
    "Workflow created successfully": "Workflow created successfully",
    "No task structure found at cursor position": "No task structure found at cursor position",
    "Use similar existing workflow": "Use similar existing workflow",
    "Create new workflow": "Create new workflow",
    "No workflows defined. Create a workflow first.": "No workflows defined. Create a workflow first.",
    "Workflow task created": "Workflow task created",
    "Task converted to workflow root": "Task converted to workflow root",
    "Failed to convert task": "Failed to convert task",
    "No workflows to duplicate": "No workflows to duplicate",
    "Duplicate": "Duplicate",
    "Workflow duplicated and saved": "Workflow duplicated and saved",
    "Workflow created from task structure": "Workflow created from task structure",
    "Create Quick Workflow": "Create Quick Workflow",
    "Convert Task to Workflow": "Convert Task to Workflow",
    "Convert to Workflow Root": "Convert to Workflow Root",
    "Start Workflow Here": "Start Workflow Here",
    "Duplicate Workflow": "Duplicate Workflow",
    "Simple Linear Workflow": "Simple Linear Workflow",
    "A basic linear workflow with sequential stages": "A basic linear workflow with sequential stages",
    "To Do": "To Do",
    "Done": "Done",
    "Project Management": "Project Management",
    "Coding": "Coding",
    "Research Process": "Research Process",
    "Academic or professional research workflow": "Academic or professional research workflow",
    "Literature Review": "Literature Review",
    "Data Collection": "Data Collection",
    "Analysis": "Analysis",
    "Writing": "Writing",
    "Published": "Published",
    "Custom Workflow": "Custom Workflow",
    "Create a custom workflow from scratch": "Create a custom workflow from scratch",
    "Quick Workflow Creation": "Quick Workflow Creation",
    "Workflow Template": "Workflow Template",
    "Choose a template to start with or create a custom workflow": "Choose a template to start with or create a custom workflow",
    "Workflow Name": "Workflow Name",
    "A descriptive name for your workflow": "A descriptive name for your workflow",
    "Enter workflow name": "Enter workflow name",
    "Unique identifier (auto-generated from name)": "Unique identifier (auto-generated from name)",
    "Optional description of the workflow purpose": "Optional description of the workflow purpose",
    "Describe your workflow...": "Describe your workflow...",
    "Preview of workflow stages (edit after creation for advanced options)": "Preview of workflow stages (edit after creation for advanced options)",
    "Add Stage": "Add Stage",
    "No stages defined. Choose a template or add stages manually.": "No stages defined. Choose a template or add stages manually.",
    "Remove stage": "Remove stage",
    "Create Workflow": "Create Workflow",
    "Please provide a workflow name and ID": "Please provide a workflow name and ID",
    "Please add at least one stage to the workflow": "Please add at least one stage to the workflow",
    "Discord": "Discord",
    "Chat with us": "Chat with us",
    "Open Discord": "Open Discord",
    "Task Genius icons are designed by": "Task Genius icons are designed by",
    "Task Genius Icons": "Task Genius Icons",
    "ICS Calendar Integration": "ICS Calendar Integration",
    "Configure external calendar sources to display events in your task views.": "Configure external calendar sources to display events in your task views.",
    "Add New Calendar Source": "Add New Calendar Source",
    "Global Settings": "Global Settings",
    "Enable Background Refresh": "Enable Background Refresh",
    "Automatically refresh calendar sources in the background": "Automatically refresh calendar sources in the background",
    "Global Refresh Interval": "Global Refresh Interval",
    "Default refresh interval for all sources (minutes)": "Default refresh interval for all sources (minutes)",
    "Maximum Cache Age": "Maximum Cache Age",
    "How long to keep cached data (hours)": "How long to keep cached data (hours)",
    "Network Timeout": "Network Timeout",
    "Request timeout in seconds": "Request timeout in seconds",
    "Max Events Per Source": "Max Events Per Source",
    "Maximum number of events to load from each source": "Maximum number of events to load from each source",
    "Default Event Color": "Default Event Color",
    "Default color for events without a specific color": "Default color for events without a specific color",
    "Calendar Sources": "Calendar Sources",
    "No calendar sources configured. Add a source to get started.": "No calendar sources configured. Add a source to get started.",
    "ICS Enabled": "ICS Enabled",
    "ICS Disabled": "ICS Disabled",
    "URL": "URL",
    "Refresh": "Refresh",
    "min": "min",
    "Color": "Color",
    "Edit this calendar source": "Edit this calendar source",
    "Sync": "Sync",
    "Sync this calendar source now": "Sync this calendar source now",
    "Syncing...": "Syncing...",
    "Sync completed successfully": "Sync completed successfully",
    "Sync failed: ": "Sync failed: ",
    "Disable": "Disable",
    "Disable this source": "Disable this source",
    "Enable this source": "Enable this source",
    "Delete this calendar source": "Delete this calendar source",
    "Are you sure you want to delete this calendar source?": "Are you sure you want to delete this calendar source?",
    "Edit ICS Source": "Edit ICS Source",
    "Add ICS Source": "Add ICS Source",
    "ICS Source Name": "ICS Source Name",
    "Display name for this calendar source": "Display name for this calendar source",
    "My Calendar": "My Calendar",
    "ICS URL": "ICS URL",
    "URL to the ICS/iCal file": "URL to the ICS/iCal file",
    "Whether this source is active": "Whether this source is active",
    "Refresh Interval": "Refresh Interval",
    "How often to refresh this source (minutes)": "How often to refresh this source (minutes)",
    "Color for events from this source (optional)": "Color for events from this source (optional)",
    "Show Type": "Show Type",
    "How to display events from this source in calendar views": "How to display events from this source in calendar views",
    "Event": "Event",
    "Badge": "Badge",
    "Show All-Day Events": "Show All-Day Events",
    "Include all-day events from this source": "Include all-day events from this source",
    "Show Timed Events": "Show Timed Events",
    "Include timed events from this source": "Include timed events from this source",
    "Authentication (Optional)": "Authentication (Optional)",
    "Authentication Type": "Authentication Type",
    "Type of authentication required": "Type of authentication required",
    "ICS Auth None": "ICS Auth None",
    "Basic Auth": "Basic Auth",
    "Bearer Token": "Bearer Token",
    "Custom Headers": "Custom Headers",
    "Text Replacements": "Text Replacements",
    "Configure rules to modify event text using regular expressions": "Configure rules to modify event text using regular expressions",
    "No text replacement rules configured": "No text replacement rules configured",
    "Enabled": "Enabled",
    "Disabled": "Disabled",
    "Target": "Target",
    "Pattern": "Pattern",
    "Replacement": "Replacement",
    "Are you sure you want to delete this text replacement rule?": "Are you sure you want to delete this text replacement rule?",
    "Add Text Replacement Rule": "Add Text Replacement Rule",
    "ICS Username": "ICS Username",
    "ICS Password": "ICS Password",
    "ICS Bearer Token": "ICS Bearer Token",
    "JSON object with custom headers": "JSON object with custom headers",
    "Holiday Configuration": "Holiday Configuration",
    "Configure how holiday events are detected and displayed": "Configure how holiday events are detected and displayed",
    "Enable Holiday Detection": "Enable Holiday Detection",
    "Automatically detect and group holiday events": "Automatically detect and group holiday events",
    "Status Mapping": "Status Mapping",
    "Configure how ICS events are mapped to task statuses": "Configure how ICS events are mapped to task statuses",
    "Enable Status Mapping": "Enable Status Mapping",
    "Automatically map ICS events to specific task statuses": "Automatically map ICS events to specific task statuses",
    "Grouping Strategy": "Grouping Strategy",
    "How to handle consecutive holiday events": "How to handle consecutive holiday events",
    "Show All Events": "Show All Events",
    "Show First Day Only": "Show First Day Only",
    "Show Summary": "Show Summary",
    "Show First and Last": "Show First and Last",
    "Maximum Gap Days": "Maximum Gap Days",
    "Maximum days between events to consider them consecutive": "Maximum days between events to consider them consecutive",
    "Show in Forecast": "Show in Forecast",
    "Whether to show holiday events in forecast view": "Whether to show holiday events in forecast view",
    "Show in Calendar": "Show in Calendar",
    "Whether to show holiday events in calendar view": "Whether to show holiday events in calendar view",
    "Detection Patterns": "Detection Patterns",
    "Summary Patterns": "Summary Patterns",
    "Regex patterns to match in event titles (one per line)": "Regex patterns to match in event titles (one per line)",
    "Keywords": "Keywords",
    "Keywords to detect in event text (one per line)": "Keywords to detect in event text (one per line)",
    "Categories": "Categories",
    "Event categories that indicate holidays (one per line)": "Event categories that indicate holidays (one per line)",
    "Group Display Format": "Group Display Format",
    "Format for grouped holiday display. Use {title}, {count}, {startDate}, {endDate}": "Format for grouped holiday display. Use {title}, {count}, {startDate}, {endDate}",
    "Override ICS Status": "Override ICS Status",
    "Override original ICS event status with mapped status": "Override original ICS event status with mapped status",
    "Timing Rules": "Timing Rules",
    "Past Events Status": "Past Events Status",
    "Status for events that have already ended": "Status for events that have already ended",
    "Status Incomplete": "Status Incomplete",
    "Status Complete": "Status Complete",
    "Status Cancelled": "Status Cancelled",
    "Status In Progress": "Status In Progress",
    "Status Question": "Status Question",
    "Current Events Status": "Current Events Status",
    "Status for events happening today": "Status for events happening today",
    "Future Events Status": "Future Events Status",
    "Status for events in the future": "Status for events in the future",
    "Property Rules": "Property Rules",
    "Optional rules based on event properties (higher priority than timing rules)": "Optional rules based on event properties (higher priority than timing rules)",
    "Holiday Status": "Holiday Status",
    "Status for events detected as holidays": "Status for events detected as holidays",
    "Use timing rules": "Use timing rules",
    "Category Mapping": "Category Mapping",
    "Map specific categories to statuses (format: category:status, one per line)": "Map specific categories to statuses (format: category:status, one per line)",
    "Please enter a name for the source": "Please enter a name for the source",
    "Please enter a URL for the source": "Please enter a URL for the source",
    "Please enter a valid URL": "Please enter a valid URL",
    "Edit Text Replacement Rule": "Edit Text Replacement Rule",
    "Rule Name": "Rule Name",
    "Descriptive name for this replacement rule": "Descriptive name for this replacement rule",
    "Remove Meeting Prefix": "Remove Meeting Prefix",
    "Whether this rule is active": "Whether this rule is active",
    "Target Field": "Target Field",
    "Which field to apply the replacement to": "Which field to apply the replacement to",
    "Summary/Title": "Summary/Title",
    "Location": "Location",
    "All Fields": "All Fields",
    "Pattern (Regular Expression)": "Pattern (Regular Expression)",
    "Regular expression pattern to match. Use parentheses for capture groups.": "Regular expression pattern to match. Use parentheses for capture groups.",
    "Text to replace matches with. Use $1, $2, etc. for capture groups.": "Text to replace matches with. Use $1, $2, etc. for capture groups.",
    "Regex Flags": "Regex Flags",
    "Regular expression flags (e.g., 'g' for global, 'i' for case-insensitive)": "Regular expression flags (e.g., 'g' for global, 'i' for case-insensitive)",
    "Examples": "Examples",
    "Remove prefix": "Remove prefix",
    "Replace room numbers": "Replace room numbers",
    "Swap words": "Swap words",
    "Test Rule": "Test Rule",
    "Output: ": "Output: ",
    "Test Input": "Test Input",
    "Enter text to test the replacement rule": "Enter text to test the replacement rule",
    "Please enter a name for the rule": "Please enter a name for the rule",
    "Please enter a pattern": "Please enter a pattern",
    "Invalid regular expression pattern": "Invalid regular expression pattern",
    "Enhanced Project Configuration": "Enhanced Project Configuration",
    "Configure advanced project detection and management features": "Configure advanced project detection and management features",
    "Enable enhanced project features": "Enable enhanced project features",
    "Enable path-based, metadata-based, and config file-based project detection": "Enable path-based, metadata-based, and config file-based project detection",
    "Path-based Project Mappings": "Path-based Project Mappings",
    "Configure project names based on file paths": "Configure project names based on file paths",
    "No path mappings configured yet.": "No path mappings configured yet.",
    "Mapping": "Mapping",
    "Path pattern (e.g., Projects/Work)": "Path pattern (e.g., Projects/Work)",
    "Add Path Mapping": "Add Path Mapping",
    "Metadata-based Project Configuration": "Metadata-based Project Configuration",
    "Configure project detection from file frontmatter": "Configure project detection from file frontmatter",
    "Enable metadata project detection": "Enable metadata project detection",
    "Detect project from file frontmatter metadata": "Detect project from file frontmatter metadata",
    "Metadata key": "Metadata key",
    "The frontmatter key to use for project name": "The frontmatter key to use for project name",
    "Inherit other metadata fields from file frontmatter": "Inherit other metadata fields from file frontmatter",
    "Allow subtasks to inherit metadata from file frontmatter. When disabled, only top-level tasks inherit file metadata.": "Allow subtasks to inherit metadata from file frontmatter. When disabled, only top-level tasks inherit file metadata.",
    "Project Configuration File": "Project Configuration File",
    "Configure project detection from project config files": "Configure project detection from project config files",
    "Enable config file project detection": "Enable config file project detection",
    "Detect project from project configuration files": "Detect project from project configuration files",
    "Config file name": "Config file name",
    "Name of the project configuration file": "Name of the project configuration file",
    "Search recursively": "Search recursively",
    "Search for config files in parent directories": "Search for config files in parent directories",
    "Metadata Mappings": "Metadata Mappings",
    "Configure how metadata fields are mapped and transformed": "Configure how metadata fields are mapped and transformed",
    "No metadata mappings configured yet.": "No metadata mappings configured yet.",
    "Source key (e.g., proj)": "Source key (e.g., proj)",
    "Select target field": "Select target field",
    "Add Metadata Mapping": "Add Metadata Mapping",
    "Default Project Naming": "Default Project Naming",
    "Configure fallback project naming when no explicit project is found": "Configure fallback project naming when no explicit project is found",
    "Enable default project naming": "Enable default project naming",
    "Use default naming strategy when no project is explicitly defined": "Use default naming strategy when no project is explicitly defined",
    "Naming strategy": "Naming strategy",
    "Strategy for generating default project names": "Strategy for generating default project names",
    "Use filename": "Use filename",
    "Use folder name": "Use folder name",
    "Use metadata field": "Use metadata field",
    "Metadata field to use as project name": "Metadata field to use as project name",
    "Enter metadata key (e.g., project-name)": "Enter metadata key (e.g., project-name)",
    "Strip file extension": "Strip file extension",
    "Remove file extension from filename when using as project name": "Remove file extension from filename when using as project name",
    "Target type": "Target type",
    "Choose whether to capture to a fixed file or daily note": "Choose whether to capture to a fixed file or daily note",
    "Fixed file": "Fixed file",
    "Daily note": "Daily note",
    "The file where captured text will be saved. You can include a path, e.g., 'folder/Quick Capture.md'. Supports date templates like {{DATE:YYYY-MM-DD}} or {{date:YYYY-MM-DD-HHmm}}": "The file where captured text will be saved. You can include a path, e.g., 'folder/Quick Capture.md'. Supports date templates like {{DATE:YYYY-MM-DD}} or {{date:YYYY-MM-DD-HHmm}}",
    "Sync with Daily Notes plugin": "Sync with Daily Notes plugin",
    "Automatically sync settings from the Daily Notes plugin": "Automatically sync settings from the Daily Notes plugin",
    "Sync now": "Sync now",
    "Daily notes settings synced successfully": "Daily notes settings synced successfully",
    "Daily Notes plugin is not enabled": "Daily Notes plugin is not enabled",
    "Failed to sync daily notes settings": "Failed to sync daily notes settings",
    "Date format for daily notes (e.g., YYYY-MM-DD)": "Date format for daily notes (e.g., YYYY-MM-DD)",
    "Daily note folder": "Daily note folder",
    "Folder path for daily notes (leave empty for root)": "Folder path for daily notes (leave empty for root)",
    "Daily note template": "Daily note template",
    "Template file path for new daily notes (optional)": "Template file path for new daily notes (optional)",
    "Target heading": "Target heading",
    "Optional heading to append content under (leave empty to append to file)": "Optional heading to append content under (leave empty to append to file)",
    "How to add captured content to the target location": "How to add captured content to the target location",
    "Append": "Append",
    "Prepend": "Prepend",
    "Replace": "Replace",
    "Enable auto-move for completed tasks": "Enable auto-move for completed tasks",
    "Automatically move completed tasks to a default file without manual selection.": "Automatically move completed tasks to a default file without manual selection.",
    "Default target file": "Default target file",
    "Default file to move completed tasks to (e.g., 'Archive.md')": "Default file to move completed tasks to (e.g., 'Archive.md')",
    "Default insertion mode": "Default insertion mode",
    "Where to insert completed tasks in the target file": "Where to insert completed tasks in the target file",
    "Default heading name": "Default heading name",
    "Heading name to insert tasks after (will be created if it doesn't exist)": "Heading name to insert tasks after (will be created if it doesn't exist)",
    "Enable auto-move for incomplete tasks": "Enable auto-move for incomplete tasks",
    "Automatically move incomplete tasks to a default file without manual selection.": "Automatically move incomplete tasks to a default file without manual selection.",
    "Default target file for incomplete tasks": "Default target file for incomplete tasks",
    "Default file to move incomplete tasks to (e.g., 'Backlog.md')": "Default file to move incomplete tasks to (e.g., 'Backlog.md')",
    "Default insertion mode for incomplete tasks": "Default insertion mode for incomplete tasks",
    "Where to insert incomplete tasks in the target file": "Where to insert incomplete tasks in the target file",
    "Default heading name for incomplete tasks": "Default heading name for incomplete tasks",
    "Heading name to insert incomplete tasks after (will be created if it doesn't exist)": "Heading name to insert incomplete tasks after (will be created if it doesn't exist)",
    "Other settings": "Other settings",
    "Use Task Genius icons": "Use Task Genius icons",
    "Use Task Genius icons for task statuses": "Use Task Genius icons for task statuses",
    "Timeline Sidebar": "Timeline Sidebar",
    "Enable Timeline Sidebar": "Enable Timeline Sidebar",
    "Toggle this to enable the timeline sidebar view for quick access to your daily events and tasks.": "Toggle this to enable the timeline sidebar view for quick access to your daily events and tasks.",
    "Auto-open on startup": "Auto-open on startup",
    "Automatically open the timeline sidebar when Obsidian starts.": "Automatically open the timeline sidebar when Obsidian starts.",
    "Show completed tasks": "Show completed tasks",
    "Include completed tasks in the timeline view. When disabled, only incomplete tasks will be shown.": "Include completed tasks in the timeline view. When disabled, only incomplete tasks will be shown.",
    "Focus mode by default": "Focus mode by default",
    "Enable focus mode by default, which highlights today's events and dims past/future events.": "Enable focus mode by default, which highlights today's events and dims past/future events.",
    "Maximum events to show": "Maximum events to show",
    "Maximum number of events to display in the timeline. Higher numbers may affect performance.": "Maximum number of events to display in the timeline. Higher numbers may affect performance.",
    "Open Timeline Sidebar": "Open Timeline Sidebar",
    "Click to open the timeline sidebar view.": "Click to open the timeline sidebar view.",
    "Open Timeline": "Open Timeline",
    "Timeline sidebar opened": "Timeline sidebar opened",
    "Task Parser Configuration": "Task Parser Configuration",
    "Configure how task metadata is parsed and recognized.": "Configure how task metadata is parsed and recognized.",
    "Project tag prefix": "Project tag prefix",
    "Customize the prefix used for project tags in dataview format (e.g., 'project' for [project:: myproject]). Changes require reindexing.": "Customize the prefix used for project tags in dataview format (e.g., 'project' for [project:: myproject]). Changes require reindexing.",
    "Customize the prefix used for project tags (e.g., 'project' for #project/myproject). Changes require reindexing.": "Customize the prefix used for project tags (e.g., 'project' for #project/myproject). Changes require reindexing.",
    "Context tag prefix": "Context tag prefix",
    "Customize the prefix used for context tags in dataview format (e.g., 'context' for [context:: home]). Changes require reindexing.": "Customize the prefix used for context tags in dataview format (e.g., 'context' for [context:: home]). Changes require reindexing.",
    "Customize the prefix used for context tags (e.g., '@home' for @home). Changes require reindexing.": "Customize the prefix used for context tags (e.g., '@home' for @home). Changes require reindexing.",
    "Area tag prefix": "Area tag prefix",
    "Customize the prefix used for area tags in dataview format (e.g., 'area' for [area:: work]). Changes require reindexing.": "Customize the prefix used for area tags in dataview format (e.g., 'area' for [area:: work]). Changes require reindexing.",
    "Customize the prefix used for area tags (e.g., 'area' for #area/work). Changes require reindexing.": "Customize the prefix used for area tags (e.g., 'area' for #area/work). Changes require reindexing.",
    "Format Examples:": "Format Examples:",
    "Area": "Area",
    "always uses @ prefix": "always uses @ prefix",
    "File Parsing Configuration": "File Parsing Configuration",
    "Configure how to extract tasks from file metadata and tags.": "Configure how to extract tasks from file metadata and tags.",
    "Enable file metadata parsing": "Enable file metadata parsing",
    "Parse tasks from file frontmatter metadata fields. When enabled, files with specific metadata fields will be treated as tasks.": "Parse tasks from file frontmatter metadata fields. When enabled, files with specific metadata fields will be treated as tasks.",
    "File metadata parsing enabled. Rebuilding task index...": "File metadata parsing enabled. Rebuilding task index...",
    "Task index rebuilt successfully": "Task index rebuilt successfully",
    "Failed to rebuild task index": "Failed to rebuild task index",
    "Metadata fields to parse as tasks": "Metadata fields to parse as tasks",
    "Comma-separated list of metadata fields that should be treated as tasks (e.g., dueDate, todo, complete, task)": "Comma-separated list of metadata fields that should be treated as tasks (e.g., dueDate, todo, complete, task)",
    "Task content from metadata": "Task content from metadata",
    "Which metadata field to use as task content. If not found, will use filename.": "Which metadata field to use as task content. If not found, will use filename.",
    "Default task status": "Default task status",
    "Default status for tasks created from metadata (space for incomplete, x for complete)": "Default status for tasks created from metadata (space for incomplete, x for complete)",
    "Enable tag-based task parsing": "Enable tag-based task parsing",
    "Parse tasks from file tags. When enabled, files with specific tags will be treated as tasks.": "Parse tasks from file tags. When enabled, files with specific tags will be treated as tasks.",
    "Tags to parse as tasks": "Tags to parse as tasks",
    "Comma-separated list of tags that should be treated as tasks (e.g., #todo, #task, #action, #due)": "Comma-separated list of tags that should be treated as tasks (e.g., #todo, #task, #action, #due)",
    "Enable worker processing": "Enable worker processing",
    "Use background worker for file parsing to improve performance. Recommended for large vaults.": "Use background worker for file parsing to improve performance. Recommended for large vaults.",
    "Enable inline editor": "Enable inline editor",
    "Enable inline editing of task content and metadata directly in task views. When disabled, tasks can only be edited in the source file.": "Enable inline editing of task content and metadata directly in task views. When disabled, tasks can only be edited in the source file.",
    "Auto-assigned from path": "Auto-assigned from path",
    "Auto-assigned from file metadata": "Auto-assigned from file metadata",
    "Auto-assigned from config file": "Auto-assigned from config file",
    "Auto-assigned": "Auto-assigned",
    "This project is automatically assigned and cannot be changed": "This project is automatically assigned and cannot be changed",
    "You can override the auto-assigned project by entering a different value": "You can override the auto-assigned project by entering a different value",
    "Auto from path": "Auto from path",
    "Auto from metadata": "Auto from metadata",
    "Auto from config": "Auto from config",
    "You can override the auto-assigned project": "You can override the auto-assigned project",
    "Timeline": "Timeline",
    "Go to today": "Go to today",
    "Focus on today": "Focus on today",
    "What do you want to do today?": "What do you want to do today?",
    "More options": "More options",
    "No events to display": "No events to display",
    "Go to task": "Go to task",
    "to": "to",
    "Hide weekends": "Hide weekends",
    "Hide weekend columns (Saturday and Sunday) in calendar views.": "Hide weekend columns (Saturday and Sunday) in calendar views.",
    "Hide weekend columns (Saturday and Sunday) in forecast calendar.": "Hide weekend columns (Saturday and Sunday) in forecast calendar.",
    "Repeatable": "Repeatable",
    "Final": "Final",
    "Sequential": "Sequential",
    "Current: ": "Current: ",
    "completed": "completed",
    "Convert to workflow template": "Convert to workflow template",
    "Start workflow here": "Start workflow here",
    "Create quick workflow": "Create quick workflow",
    "Workflow not found": "Workflow not found",
    "Stage not found": "Stage not found",
    "Current stage": "Current stage",
    "Type": "Type",
    "Next": "Next",
    "Start workflow": "Start workflow",
    "Continue": "Continue",
    "Complete substage and move to": "Complete substage and move to",
    "Add new task": "Add new task",
    "Add new sub-task": "Add new sub-task",
    "Auto-move completed subtasks to default file": "Auto-move completed subtasks to default file",
    "Auto-move direct completed subtasks to default file": "Auto-move direct completed subtasks to default file",
    "Auto-move all subtasks to default file": "Auto-move all subtasks to default file",
    "Auto-move incomplete subtasks to default file": "Auto-move incomplete subtasks to default file",
    "Auto-move direct incomplete subtasks to default file": "Auto-move direct incomplete subtasks to default file",
    "Convert task to workflow template": "Convert task to workflow template",
    "Convert current task to workflow root": "Convert current task to workflow root",
    "Duplicate workflow": "Duplicate workflow",
    "Workflow quick actions": "Workflow quick actions",
    "Views & Index": "Views & Index",
    "Progress Display": "Progress Display",
    "Workflows": "Workflows",
    "Dates & Priority": "Dates & Priority",
    "Habits": "Habits",
    "Calendar Sync": "Calendar Sync",
    "Beta Features": "Beta Features",
    "Core Settings": "Core Settings",
    "Display & Progress": "Display & Progress",
    "Task Management": "Task Management",
    "Workflow & Automation": "Workflow & Automation",
    "Gamification": "Gamification",
    "Integration": "Integration",
    "Advanced": "Advanced",
    "Information": "Information",
    "Workflow generated from task structure": "Workflow generated from task structure",
    "Workflow based on existing pattern": "Workflow based on existing pattern",
    "Matrix": "Matrix",
    "More actions": "More actions",
    "Open in file": "Open in file",
    "Copy task": "Copy task",
    "Mark as urgent": "Mark as urgent",
    "Mark as important": "Mark as important",
    "Overdue by {days} days": "Overdue by {days} days",
    "Due today": "Due today",
    "Due tomorrow": "Due tomorrow",
    "Due in {days} days": "Due in {days} days",
    "Loading tasks...": "Loading tasks...",
    "task": "task",
    "No crisis tasks - great job!": "No crisis tasks - great job!",
    "No planning tasks - consider adding some goals": "No planning tasks - consider adding some goals",
    "No interruptions - focus time!": "No interruptions - focus time!",
    "No time wasters - excellent focus!": "No time wasters - excellent focus!",
    "No tasks in this quadrant": "No tasks in this quadrant",
    "Handle immediately. These are critical tasks that need your attention now.": "Handle immediately. These are critical tasks that need your attention now.",
    "Schedule and plan. These tasks are key to your long-term success.": "Schedule and plan. These tasks are key to your long-term success.",
    "Delegate if possible. These tasks are urgent but don't require your specific skills.": "Delegate if possible. These tasks are urgent but don't require your specific skills.",
    "Eliminate or minimize. These tasks may be time wasters.": "Eliminate or minimize. These tasks may be time wasters.",
    "Review and categorize these tasks appropriately.": "Review and categorize these tasks appropriately.",
    "Urgent & Important": "Urgent & Important",
    "Do First - Crisis & emergencies": "Do First - Crisis & emergencies",
    "Not Urgent & Important": "Not Urgent & Important",
    "Schedule - Planning & development": "Schedule - Planning & development",
    "Urgent & Not Important": "Urgent & Not Important",
    "Delegate - Interruptions & distractions": "Delegate - Interruptions & distractions",
    "Not Urgent & Not Important": "Not Urgent & Not Important",
    "Eliminate - Time wasters": "Eliminate - Time wasters",
    "Task Priority Matrix": "Task Priority Matrix",
    "Created Date (Newest First)": "Created Date (Newest First)",
    "Created Date (Oldest First)": "Created Date (Oldest First)",
    "Toggle empty columns": "Toggle empty columns",
    "Failed to update task": "Failed to update task",
    "Remove urgent tag": "Remove urgent tag",
    "Remove important tag": "Remove important tag",
    "Loading more tasks...": "Loading more tasks...",
    "Action Type": "Action Type",
    "Select action type...": "Select action type...",
    "Delete task": "Delete task",
    "Keep task": "Keep task",
    "Complete related tasks": "Complete related tasks",
    "Move task": "Move task",
    "Archive task": "Archive task",
    "Duplicate task": "Duplicate task",
    "Task IDs": "Task IDs",
    "Enter task IDs separated by commas": "Enter task IDs separated by commas",
    "Comma-separated list of task IDs to complete when this task is completed": "Comma-separated list of task IDs to complete when this task is completed",
    "Target File": "Target File",
    "Path to target file": "Path to target file",
    "Target Section (Optional)": "Target Section (Optional)",
    "Section name in target file": "Section name in target file",
    "Archive File (Optional)": "Archive File (Optional)",
    "Default: Archive/Completed Tasks.md": "Default: Archive/Completed Tasks.md",
    "Archive Section (Optional)": "Archive Section (Optional)",
    "Default: Completed Tasks": "Default: Completed Tasks",
    "Target File (Optional)": "Target File (Optional)",
    "Default: same file": "Default: same file",
    "Preserve Metadata": "Preserve Metadata",
    "Keep completion dates and other metadata in the duplicated task": "Keep completion dates and other metadata in the duplicated task",
    "Overdue by": "Overdue by",
    "days": "days",
    "Due in": "Due in",
    "File Filter": "File Filter",
    "Enable File Filter": "Enable File Filter",
    "Toggle this to enable file and folder filtering during task indexing. This can significantly improve performance for large vaults.": "Toggle this to enable file and folder filtering during task indexing. This can significantly improve performance for large vaults.",
    "File Filter Mode": "File Filter Mode",
    "Choose whether to include only specified files/folders (whitelist) or exclude them (blacklist)": "Choose whether to include only specified files/folders (whitelist) or exclude them (blacklist)",
    "Whitelist (Include only)": "Whitelist (Include only)",
    "Blacklist (Exclude)": "Blacklist (Exclude)",
    "File Filter Rules": "File Filter Rules",
    "Configure which files and folders to include or exclude from task indexing": "Configure which files and folders to include or exclude from task indexing",
    "Type:": "Type:",
    "Folder": "Folder",
    "Path:": "Path:",
    "Enabled:": "Enabled:",
    "Delete rule": "Delete rule",
    "Add Filter Rule": "Add Filter Rule",
    "Add File Rule": "Add File Rule",
    "Add Folder Rule": "Add Folder Rule",
    "Add Pattern Rule": "Add Pattern Rule",
    "Refresh Statistics": "Refresh Statistics",
    "Manually refresh filter statistics to see current data": "Manually refresh filter statistics to see current data",
    "Refreshing...": "Refreshing...",
    "Active Rules": "Active Rules",
    "Cache Size": "Cache Size",
    "No filter data available": "No filter data available",
    "Error loading statistics": "Error loading statistics",
    "On Completion": "On Completion",
    "Enable OnCompletion": "Enable OnCompletion",
    "Enable automatic actions when tasks are completed": "Enable automatic actions when tasks are completed",
    "Default Archive File": "Default Archive File",
    "Default file for archive action": "Default file for archive action",
    "Default Archive Section": "Default Archive Section",
    "Default section for archive action": "Default section for archive action",
    "Show Advanced Options": "Show Advanced Options",
    "Show advanced configuration options in task editors": "Show advanced configuration options in task editors",
    "Configure checkbox status settings": "Configure checkbox status settings",
    "Auto complete parent checkbox": "Auto complete parent checkbox",
    "Toggle this to allow this plugin to auto complete parent checkbox when all child tasks are completed.": "Toggle this to allow this plugin to auto complete parent checkbox when all child tasks are completed.",
    "When some but not all child tasks are completed, mark the parent checkbox as 'In Progress'. Only works when 'Auto complete parent' is enabled.": "When some but not all child tasks are completed, mark the parent checkbox as 'In Progress'. Only works when 'Auto complete parent' is enabled.",
    "Select a predefined checkbox status collection or customize your own": "Select a predefined checkbox status collection or customize your own",
    "Checkbox Switcher": "Checkbox Switcher",
    "Enable checkbox status switcher": "Enable checkbox status switcher",
    "Replace default checkboxes with styled text marks that follow your checkbox status cycle when clicked.": "Replace default checkboxes with styled text marks that follow your checkbox status cycle when clicked.",
    "Make the text mark in source mode follow the checkbox status cycle when clicked.": "Make the text mark in source mode follow the checkbox status cycle when clicked.",
    "Automatically manage dates based on checkbox status changes": "Automatically manage dates based on checkbox status changes",
    "Toggle this to enable automatic date management when checkbox status changes. Dates will be added/removed based on your preferred metadata format (Tasks emoji format or Dataview format).": "Toggle this to enable automatic date management when checkbox status changes. Dates will be added/removed based on your preferred metadata format (Tasks emoji format or Dataview format).",
    "Default view mode": "Default view mode",
    "Choose the default display mode for all views. This affects how tasks are displayed when you first open a view or create a new view.": "Choose the default display mode for all views. This affects how tasks are displayed when you first open a view or create a new view.",
    "List View": "List View",
    "Tree View": "Tree View",
    "Global Filter Configuration": "Global Filter Configuration",
    "Configure global filter rules that apply to all Views by default. Individual Views can override these settings.": "Configure global filter rules that apply to all Views by default. Individual Views can override these settings.",
    "Cancelled Date": "Cancelled Date",
    "Configuration is valid": "Configuration is valid",
    "Action to execute on completion": "Action to execute on completion",
    "Depends On": "Depends On",
    "Task IDs separated by commas": "Task IDs separated by commas",
    "Task ID": "Task ID",
    "Unique task identifier": "Unique task identifier",
    "Action to execute when task is completed": "Action to execute when task is completed",
    "Comma-separated list of task IDs this task depends on": "Comma-separated list of task IDs this task depends on",
    "Unique identifier for this task": "Unique identifier for this task",
    "Quadrant Classification Method": "Quadrant Classification Method",
    "Choose how to classify tasks into quadrants": "Choose how to classify tasks into quadrants",
    "Urgent Priority Threshold": "Urgent Priority Threshold",
    "Tasks with priority >= this value are considered urgent (1-5)": "Tasks with priority >= this value are considered urgent (1-5)",
    "Important Priority Threshold": "Important Priority Threshold",
    "Tasks with priority >= this value are considered important (1-5)": "Tasks with priority >= this value are considered important (1-5)",
    "Urgent Tag": "Urgent Tag",
    "Tag to identify urgent tasks (e.g., #urgent, #fire)": "Tag to identify urgent tasks (e.g., #urgent, #fire)",
    "Important Tag": "Important Tag",
    "Tag to identify important tasks (e.g., #important, #key)": "Tag to identify important tasks (e.g., #important, #key)",
    "Urgent Threshold Days": "Urgent Threshold Days",
    "Tasks due within this many days are considered urgent": "Tasks due within this many days are considered urgent",
    "Auto Update Priority": "Auto Update Priority",
    "Automatically update task priority when moved between quadrants": "Automatically update task priority when moved between quadrants",
    "Auto Update Tags": "Auto Update Tags",
    "Automatically add/remove urgent/important tags when moved between quadrants": "Automatically add/remove urgent/important tags when moved between quadrants",
    "Hide Empty Quadrants": "Hide Empty Quadrants",
    "Hide quadrants that have no tasks": "Hide quadrants that have no tasks",
    "Configure On Completion Action": "Configure On Completion Action",
    "URL to the ICS/iCal file (supports http://, https://, and webcal:// protocols)": "URL to the ICS/iCal file (supports http://, https://, and webcal:// protocols)",
    "Task mark display style": "Task mark display style",
    "Choose how task marks are displayed: default checkboxes, custom text marks, or Task Genius icons.": "Choose how task marks are displayed: default checkboxes, custom text marks, or Task Genius icons.",
    "Default checkboxes": "Default checkboxes",
    "Custom text marks": "Custom text marks",
    "Task Genius icons": "Task Genius icons",
    "Time Parsing Settings": "Time Parsing Settings",
    "Enable Time Parsing": "Enable Time Parsing",
    "Automatically parse natural language time expressions in Quick Capture": "Automatically parse natural language time expressions in Quick Capture",
    "Remove Original Time Expressions": "Remove Original Time Expressions",
    "Remove parsed time expressions from the task text": "Remove parsed time expressions from the task text",
    "Supported Languages": "Supported Languages",
    "Currently supports English and Chinese time expressions. More languages may be added in future updates.": "Currently supports English and Chinese time expressions. More languages may be added in future updates.",
    "Date Keywords Configuration": "Date Keywords Configuration",
    "Start Date Keywords": "Start Date Keywords",
    "Keywords that indicate start dates (comma-separated)": "Keywords that indicate start dates (comma-separated)",
    "Due Date Keywords": "Due Date Keywords",
    "Keywords that indicate due dates (comma-separated)": "Keywords that indicate due dates (comma-separated)",
    "Scheduled Date Keywords": "Scheduled Date Keywords",
    "Keywords that indicate scheduled dates (comma-separated)": "Keywords that indicate scheduled dates (comma-separated)",
    "Configure...": "Configure...",
    "Collapse quick input": "Collapse quick input",
    "Expand quick input": "Expand quick input",
    "Set Priority": "Set Priority",
    "Clear Flags": "Clear Flags",
    "Filter by Priority": "Filter by Priority",
    "New Project": "New Project",
    "Archive Completed": "Archive Completed",
    "Project Statistics": "Project Statistics",
    "Manage Tags": "Manage Tags",
    "Time Parsing": "Time Parsing",
    "Minimal Quick Capture": "Minimal Quick Capture",
    "Enter your task...": "Enter your task...",
    "Set date": "Set date",
    "Set location": "Set location",
    "Add tags": "Add tags",
    "Day after tomorrow": "Day after tomorrow",
    "Next week": "Next week",
    "Next month": "Next month",
    "Choose date...": "Choose date...",
    "Fixed location": "Fixed location",
    "Date": "Date",
    "Add date (triggers ~)": "Add date (triggers ~)",
    "Set priority (triggers !)": "Set priority (triggers !)",
    "Target Location": "Target Location",
    "Set target location (triggers *)": "Set target location (triggers *)",
    "Add tags (triggers #)": "Add tags (triggers #)",
    "Minimal Mode": "Minimal Mode",
    "Enable minimal mode": "Enable minimal mode",
    "Enable simplified single-line quick capture with inline suggestions": "Enable simplified single-line quick capture with inline suggestions",
    "Suggest trigger character": "Suggest trigger character",
    "Character to trigger the suggestion menu": "Character to trigger the suggestion menu",
    "Highest Priority": "Highest Priority",
    "🔺 Highest priority task": "🔺 Highest priority task",
    "Highest priority set": "Highest priority set",
    "⏫ High priority task": "⏫ High priority task",
    "High priority set": "High priority set",
    "🔼 Medium priority task": "🔼 Medium priority task",
    "Medium priority set": "Medium priority set",
    "🔽 Low priority task": "🔽 Low priority task",
    "Low priority set": "Low priority set",
    "Lowest Priority": "Lowest Priority",
    "⏬ Lowest priority task": "⏬ Lowest priority task",
    "Lowest priority set": "Lowest priority set",
    "Set due date to today": "Set due date to today",
    "Due date set to today": "Due date set to today",
    "Set due date to tomorrow": "Set due date to tomorrow",
    "Due date set to tomorrow": "Due date set to tomorrow",
    "Pick Date": "Pick Date",
    "Open date picker": "Open date picker",
    "Set scheduled date": "Set scheduled date",
    "Scheduled date set": "Scheduled date set",
    "Save to inbox": "Save to inbox",
    "Target set to Inbox": "Target set to Inbox",
    "Daily Note": "Daily Note",
    "Save to today's daily note": "Save to today's daily note",
    "Target set to Daily Note": "Target set to Daily Note",
    "Current File": "Current File",
    "Save to current file": "Save to current file",
    "Target set to Current File": "Target set to Current File",
    "Choose File": "Choose File",
    "Open file picker": "Open file picker",
    "Save to recent file": "Save to recent file",
    "Target set to": "Target set to",
    "Important": "Important",
    "Tagged as important": "Tagged as important",
    "Urgent": "Urgent",
    "Tagged as urgent": "Tagged as urgent",
    "Work": "Work",
    "Work related task": "Work related task",
    "Tagged as work": "Tagged as work",
    "Personal": "Personal",
    "Personal task": "Personal task",
    "Tagged as personal": "Tagged as personal",
    "Choose Tag": "Choose Tag",
    "Open tag picker": "Open tag picker",
    "Existing tag": "Existing tag",
    "Tagged with": "Tagged with",
    "Toggle quick capture panel in editor": "Toggle quick capture panel in editor",
    "Toggle quick capture panel in editor (Globally)": "Toggle quick capture panel in editor (Globally)",
    "Selected Mode": "Selected Mode",
    "Features that will be enabled": "Features that will be enabled",
    "Don't worry! You can customize any of these settings later in the plugin settings.": "Don't worry! You can customize any of these settings later in the plugin settings.",
    "Available views": "Available views",
    "Key settings": "Key settings",
    "Progress bars": "Progress bars",
    "Enabled (both graphical and text)": "Enabled (both graphical and text)",
    "Task status switching": "Task status switching",
    "Workflow management": "Workflow management",
    "Reward system": "Reward system",
    "Habit tracking": "Habit tracking",
    "Performance optimization": "Performance optimization",
    "Configuration Changes": "Configuration Changes",
    "Your custom views will be preserved": "Your custom views will be preserved",
    "New views to be added": "New views to be added",
    "Existing views to be updated": "Existing views to be updated",
    "Feature changes": "Feature changes",
    "Only template settings will be applied. Your existing custom configurations will be preserved.": "Only template settings will be applied. Your existing custom configurations will be preserved.",
    "Congratulations!": "Congratulations!",
    "Task Genius has been configured with your selected preferences": "Task Genius has been configured with your selected preferences",
    "Your Configuration": "Your Configuration",
    "Quick Start Guide": "Quick Start Guide",
    "What's next?": "What's next?",
    "Open Task Genius view from the left ribbon": "Open Task Genius view from the left ribbon",
    "Create your first task using Quick Capture": "Create your first task using Quick Capture",
    "Explore different views to organize your tasks": "Explore different views to organize your tasks",
    "Customize settings anytime in plugin settings": "Customize settings anytime in plugin settings",
    "Helpful Resources": "Helpful Resources",
    "Complete guide to all features": "Complete guide to all features",
    "Community": "Community",
    "Get help and share tips": "Get help and share tips",
    "Customize Task Genius": "Customize Task Genius",
    "Click the Task Genius icon in the left sidebar": "Click the Task Genius icon in the left sidebar",
    "Start with the Inbox view to see all your tasks": "Start with the Inbox view to see all your tasks",
    "Use quick capture panel to quickly add your first task": "Use quick capture panel to quickly add your first task",
    "Try the Forecast view to see tasks by date": "Try the Forecast view to see tasks by date",
    "Open Task Genius and explore the available views": "Open Task Genius and explore the available views",
    "Set up a project using the Projects view": "Set up a project using the Projects view",
    "Try the Kanban board for visual task management": "Try the Kanban board for visual task management",
    "Use workflow stages to track task progress": "Use workflow stages to track task progress",
    "Explore all available views and their configurations": "Explore all available views and their configurations",
    "Set up complex workflows for your projects": "Set up complex workflows for your projects",
    "Configure habits and rewards to stay motivated": "Configure habits and rewards to stay motivated",
    "Integrate with external calendars and systems": "Integrate with external calendars and systems",
    "Open Task Genius from the left sidebar": "Open Task Genius from the left sidebar",
    "Create your first task": "Create your first task",
    "Explore the different views available": "Explore the different views available",
    "Customize settings as needed": "Customize settings as needed",
    "Thank you for your positive feedback!": "Thank you for your positive feedback!",
    "Thank you for your feedback. We'll continue improving the experience.": "Thank you for your feedback. We'll continue improving the experience.",
    "Share detailed feedback": "Share detailed feedback",
    "Skip onboarding": "Skip onboarding",
    "Back": "Back",
    "Welcome to Task Genius": "Welcome to Task Genius",
    "Transform your task management with advanced progress tracking and workflow automation": "Transform your task management with advanced progress tracking and workflow automation",
    "Progress Tracking": "Progress Tracking",
    "Visual progress bars and completion tracking for all your tasks": "Visual progress bars and completion tracking for all your tasks",
    "Organize tasks by projects with advanced filtering and sorting": "Organize tasks by projects with advanced filtering and sorting",
    "Workflow Automation": "Workflow Automation",
    "Automate task status changes and improve your productivity": "Automate task status changes and improve your productivity",
    "Multiple Views": "Multiple Views",
    "Kanban boards, calendars, Gantt charts, and more visualization options": "Kanban boards, calendars, Gantt charts, and more visualization options",
    "This quick setup will help you configure Task Genius based on your experience level and needs. You can always change these settings later.": "This quick setup will help you configure Task Genius based on your experience level and needs. You can always change these settings later.",
    "Choose Your Usage Mode": "Choose Your Usage Mode",
    "Select the configuration that best matches your task management experience": "Select the configuration that best matches your task management experience",
    "Configuration Preview": "Configuration Preview",
    "Review the settings that will be applied for your selected mode": "Review the settings that will be applied for your selected mode",
    "Include task creation guide": "Include task creation guide",
    "Show a quick tutorial on creating your first task": "Show a quick tutorial on creating your first task",
    "Create Your First Task": "Create Your First Task",
    "Learn how to create and format tasks in Task Genius": "Learn how to create and format tasks in Task Genius",
    "Setup Complete!": "Setup Complete!",
    "Task Genius is now configured and ready to use": "Task Genius is now configured and ready to use",
    "Start Using Task Genius": "Start Using Task Genius",
    "Task Genius Setup": "Task Genius Setup",
    "Skip setup": "Skip setup",
    "We noticed you've already configured Task Genius": "We noticed you've already configured Task Genius",
    "Your current configuration includes:": "Your current configuration includes:",
    "Would you like to run the setup wizard anyway?": "Would you like to run the setup wizard anyway?",
    "Yes, show me the setup wizard": "Yes, show me the setup wizard",
    "No, I'm happy with my current setup": "No, I'm happy with my current setup",
    "Learn the different ways to create and format tasks in Task Genius. You can use either emoji-based or Dataview-style syntax.": "Learn the different ways to create and format tasks in Task Genius. You can use either emoji-based or Dataview-style syntax.",
    "Task Format Examples": "Task Format Examples",
    "Basic Task": "Basic Task",
    "With Emoji Metadata": "With Emoji Metadata",
    "📅 = Due date, 🔺 = High priority, #project/ = Docs project tag": "📅 = Due date, 🔺 = High priority, #project/ = Docs project tag",
    "With Dataview Metadata": "With Dataview Metadata",
    "Mixed Format": "Mixed Format",
    "Combine emoji and dataview syntax as needed": "Combine emoji and dataview syntax as needed",
    "Task Status Markers": "Task Status Markers",
    "Not started": "Not started",
    "In progress": "In progress",
    "Common Metadata Symbols": "Common Metadata Symbols",
    "Due date": "Due date",
    "Start date": "Start date",
    "Scheduled date": "Scheduled date",
    "Higher priority": "Higher priority",
    "Lower priority": "Lower priority",
    "Recurring task": "Recurring task",
    "Project/tag": "Project/tag",
    "Use quick capture panel to quickly capture tasks from anywhere in Obsidian.": "Use quick capture panel to quickly capture tasks from anywhere in Obsidian.",
    "Try Quick Capture": "Try Quick Capture",
    "Quick capture is now enabled in your configuration!": "Quick capture is now enabled in your configuration!",
    "Failed to open quick capture. Please try again later.": "Failed to open quick capture. Please try again later.",
    "Try It Yourself": "Try It Yourself",
    "Practice creating a task with the format you prefer:": "Practice creating a task with the format you prefer:",
    "Practice Task": "Practice Task",
    "Enter a task using any of the formats shown above": "Enter a task using any of the formats shown above",
    "- [ ] Your task here": "- [ ] Your task here",
    "Validate Task": "Validate Task",
    "Please enter a task to validate": "Please enter a task to validate",
    "This doesn't look like a valid task. Tasks should start with '- [ ]'": "This doesn't look like a valid task. Tasks should start with '- [ ]'",
    "Valid task format!": "Valid task format!",
    "Emoji metadata": "Emoji metadata",
    "Dataview metadata": "Dataview metadata",
    "Project tags": "Project tags",
    "Detected features: ": "Detected features: ",
    "Onboarding": "Onboarding",
    "Restart the welcome guide and setup wizard": "Restart the welcome guide and setup wizard",
    "Restart Onboarding": "Restart Onboarding",
    "Copy": "Copy",
    "Copied!": "Copied!",
    "MCP integration is only available on desktop": "MCP integration is only available on desktop",
    "MCP Server Status": "MCP Server Status",
    "Enable MCP Server": "Enable MCP Server",
    "Start the MCP server to allow external tool connections": "Start the MCP server to allow external tool connections",
    "WARNING: Enabling the MCP server will allow external AI tools and applications to access and modify your task data. This includes:\n\n• Reading all tasks and their details\n• Creating new tasks\n• Updating existing tasks\n• Deleting tasks\n• Accessing task metadata and properties\n\nOnly enable this if you trust the applications that will connect to the MCP server. Make sure to keep your authentication token secure.\n\nDo you want to continue?": "WARNING: Enabling the MCP server will allow external AI tools and applications to access and modify your task data. This includes:\n\n• Reading all tasks and their details\n• Creating new tasks\n• Updating existing tasks\n• Deleting tasks\n• Accessing task metadata and properties\n\nOnly enable this if you trust the applications that will connect to the MCP server. Make sure to keep your authentication token secure.\n\nDo you want to continue?",
    "MCP Server enabled. Keep your authentication token secure!": "MCP Server enabled. Keep your authentication token secure!",
    "Server Configuration": "Server Configuration",
    "Host": "Host",
    "Server host address. Use 127.0.0.1 for local only, 0.0.0.0 for all interfaces": "Server host address. Use 127.0.0.1 for local only, 0.0.0.0 for all interfaces",
    "Security Warning": "Security Warning",
    "⚠️ **WARNING**: Switching to 0.0.0.0 will make the MCP server accessible from external networks.\n\nThis could expose your Obsidian data to:\n- Other devices on your local network\n- Potentially the internet if your firewall is misconfigured\n\n**Only proceed if you:**\n- Understand the security implications\n- Have properly configured your firewall\n- Need external access for legitimate reasons\n\nAre you sure you want to continue?": "⚠️ **WARNING**: Switching to 0.0.0.0 will make the MCP server accessible from external networks.\n\nThis could expose your Obsidian data to:\n- Other devices on your local network\n- Potentially the internet if your firewall is misconfigured\n\n**Only proceed if you:**\n- Understand the security implications\n- Have properly configured your firewall\n- Need external access for legitimate reasons\n\nAre you sure you want to continue?",
    "Yes, I understand the risks": "Yes, I understand the risks",
    "Host changed to 0.0.0.0. Server is now accessible from external networks.": "Host changed to 0.0.0.0. Server is now accessible from external networks.",
    "Port": "Port",
    "Server port number (default: 7777)": "Server port number (default: 7777)",
    "Authentication": "Authentication",
    "Authentication Token": "Authentication Token",
    "Bearer token for authenticating MCP requests (keep this secret)": "Bearer token for authenticating MCP requests (keep this secret)",
    "Show": "Show",
    "Hide": "Hide",
    "Token copied to clipboard": "Token copied to clipboard",
    "Regenerate": "Regenerate",
    "New token generated": "New token generated",
    "Advanced Settings": "Advanced Settings",
    "Enable CORS": "Enable CORS",
    "Allow cross-origin requests (required for web clients)": "Allow cross-origin requests (required for web clients)",
    "Log Level": "Log Level",
    "Logging verbosity for debugging": "Logging verbosity for debugging",
    "Error": "Error",
    "Warning": "Warning",
    "Info": "Info",
    "Debug": "Debug",
    "Server Actions": "Server Actions",
    "Test Connection": "Test Connection",
    "Test the MCP server connection": "Test the MCP server connection",
    "Test": "Test",
    "Testing...": "Testing...",
    "Connection test successful! MCP server is working.": "Connection test successful! MCP server is working.",
    "Connection test failed: ": "Connection test failed: ",
    "Restart Server": "Restart Server",
    "Stop and restart the MCP server": "Stop and restart the MCP server",
    "Restart": "Restart",
    "MCP server restarted": "MCP server restarted",
    "Failed to restart server: ": "Failed to restart server: ",
    "Use Next Available Port": "Use Next Available Port",
    "Port updated to ": "Port updated to ",
    "No available port found in range": "No available port found in range",
    "Client Configuration": "Client Configuration",
    "Authentication Method": "Authentication Method",
    "Choose the authentication method for client configurations": "Choose the authentication method for client configurations",
    "Method B: Combined Bearer (Recommended)": "Method B: Combined Bearer (Recommended)",
    "Method A: Custom Headers": "Method A: Custom Headers",
    "Supported Authentication Methods:": "Supported Authentication Methods:",
    "API Documentation": "API Documentation",
    "Server Endpoint": "Server Endpoint",
    "Copy URL": "Copy URL",
    "Available Tools": "Available Tools",
    "Loading tools...": "Loading tools...",
    "No tools available": "No tools available",
    "Failed to load tools. Is the MCP server running?": "Failed to load tools. Is the MCP server running?",
    "Example Request": "Example Request",
    "MCP Server not initialized": "MCP Server not initialized",
    "Running": "Running",
    "Stopped": "Stopped",
    "Uptime": "Uptime",
    "Requests": "Requests",
    "Toggle this to enable Org-mode style quick capture panel.": "Toggle this to enable Org-mode style quick capture panel.",
    "Auto-add task prefix": "Auto-add task prefix",
    "Automatically add task checkbox prefix to captured content": "Automatically add task checkbox prefix to captured content",
    "Task prefix format": "Task prefix format",
    "The prefix to add before captured content (e.g., '- [ ]' for task, '- ' for list item)": "The prefix to add before captured content (e.g., '- [ ]' for task, '- ' for list item)",
    "Search settings...": "Search settings...",
    "Search settings": "Search settings",
    "Clear search": "Clear search",
    "Search results": "Search results",
    "No settings found": "No settings found",
    "Project Tree View Settings": "Project Tree View Settings",
    "Configure how projects are displayed in tree view.": "Configure how projects are displayed in tree view.",
    "Default project view mode": "Default project view mode",
    "Choose whether to display projects as a flat list or hierarchical tree by default.": "Choose whether to display projects as a flat list or hierarchical tree by default.",
    "Auto-expand project tree": "Auto-expand project tree",
    "Automatically expand all project nodes when opening the project view in tree mode.": "Automatically expand all project nodes when opening the project view in tree mode.",
    "Show empty project folders": "Show empty project folders",
    "Display project folders even if they don't contain any tasks.": "Display project folders even if they don't contain any tasks.",
    "Project path separator": "Project path separator",
    "Character used to separate project hierarchy levels (e.g., '/' in 'Project/SubProject').": "Character used to separate project hierarchy levels (e.g., '/' in 'Project/SubProject').",
    "Enable dynamic metadata positioning": "Enable dynamic metadata positioning",
    "Intelligently position task metadata. When enabled, metadata appears on the same line as short tasks and below long tasks. When disabled, metadata always appears below the task content.": "Intelligently position task metadata. When enabled, metadata appears on the same line as short tasks and below long tasks. When disabled, metadata always appears below the task content.",
    "Toggle tree/list view": "Toggle tree/list view",
    "Clear date": "Clear date",
    "Clear priority": "Clear priority",
    "Clear all tags": "Clear all tags",
    "🔺 Highest priority": "🔺 Highest priority",
    "⏫ High priority": "⏫ High priority",
    "🔼 Medium priority": "🔼 Medium priority",
    "🔽 Low priority": "🔽 Low priority",
    "⏬ Lowest priority": "⏬ Lowest priority",
    "Fixed File": "Fixed File",
    "Save to Inbox.md": "Save to Inbox.md",
    "Open Task Genius Setup": "Open Task Genius Setup",
    "MCP Integration": "MCP Integration",
    "Beginner": "Beginner",
    "Basic task management with essential features": "Basic task management with essential features",
    "Basic progress bars": "Basic progress bars",
    "Essential views (Inbox, Forecast, Projects)": "Essential views (Inbox, Forecast, Projects)",
    "Simple task status tracking": "Simple task status tracking",
    "Quick task capture": "Quick task capture",
    "Date picker functionality": "Date picker functionality",
    "Project management with enhanced workflows": "Project management with enhanced workflows",
    "Full progress bar customization": "Full progress bar customization",
    "Extended views (Kanban, Calendar, Table)": "Extended views (Kanban, Calendar, Table)",
    "Project management features": "Project management features",
    "Basic workflow automation": "Basic workflow automation",
    "Advanced filtering and sorting": "Advanced filtering and sorting",
    "Power User": "Power User",
    "Full-featured experience with all capabilities": "Full-featured experience with all capabilities",
    "All views and advanced configurations": "All views and advanced configurations",
    "Complex workflow definitions": "Complex workflow definitions",
    "Reward and habit tracking systems": "Reward and habit tracking systems",
    "Performance optimizations": "Performance optimizations",
    "Advanced integrations": "Advanced integrations",
    "Experimental features": "Experimental features",
    "Timeline and calendar sync": "Timeline and calendar sync",
    "Not configured": "Not configured",
    "Custom": "Custom",
    "Custom views created": "Custom views created",
    "Progress bar settings modified": "Progress bar settings modified",
    "Task status settings configured": "Task status settings configured",
    "Quick capture configured": "Quick capture configured",
    "Workflow settings enabled": "Workflow settings enabled",
    "Advanced features enabled": "Advanced features enabled",
    "File parsing customized": "File parsing customized"
};
export default translations;
//# sourceMappingURL=data:application/json;base64,