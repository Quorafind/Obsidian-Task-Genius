// Brazilian Portuguese translations
const translations = {
    "File Metadata Inheritance": "Herança de Metadados de Arquivo",
    "Configure how tasks inherit metadata from file frontmatter": "Configure como as tarefas herdam metadados do frontmatter do arquivo",
    "Enable file metadata inheritance": "Habilitar herança de metadados de arquivo",
    "Allow tasks to inherit metadata properties from their file's frontmatter": "Permitir que as tarefas herdem propriedades de metadados do frontmatter de seu arquivo",
    "Inherit from frontmatter": "Inherit from frontmatter",
    "Tasks inherit metadata properties like priority, context, etc. from file frontmatter when not explicitly set on the task": "As tarefas herdam propriedades de metadados como prioridade, contexto, etc. do frontmatter do arquivo quando não explicitamente definidas na tarefa",
    "Inherit from frontmatter for subtasks": "Inherit from frontmatter for subtasks",
    "Allow subtasks to inherit metadata from file frontmatter. When disabled, only top-level tasks inherit file metadata": "Permitir que subtarefas herdem metadados do frontmatter do arquivo. Quando desabilitado, apenas tarefas de nível superior herdam metadados do arquivo",
    "Comprehensive task management plugin for Obsidian with progress bars, task status cycling, and advanced task tracking features.": "Plugin abrangente de gerenciamento de tarefas para Obsidian com barras de progresso, ciclo de status de tarefas e recursos avançados de acompanhamento de tarefas.",
    "Show progress bar": "Mostrar barra de progresso",
    "Toggle this to show the progress bar.": "Ative para mostrar a barra de progresso.",
    "Support hover to show progress info": "Suporte para mostrar informações de progresso ao passar o mouse",
    "Toggle this to allow this plugin to show progress info when hovering over the progress bar.": "Ative para permitir que este plugin mostre informações de progresso ao passar o mouse sobre a barra de progresso.",
    "Add progress bar to non-task bullet": "Adicionar barra de progresso a itens de lista comuns",
    "Toggle this to allow adding progress bars to regular list items (non-task bullets).": "Ative para permitir adicionar barras de progresso a itens de lista regulares (marcadores não relacionados a tarefas).",
    "Add progress bar to Heading": "Adicionar barra de progresso ao Cabeçalho",
    "Toggle this to allow this plugin to add progress bar for Task below the headings.": "Ative para permitir que este plugin adicione uma barra de progresso para Tarefas abaixo dos cabeçalhos.",
    "Enable heading progress bars": "Ativar barras de progresso em cabeçalhos",
    "Add progress bars to headings to show progress of all tasks under that heading.": "Adicione barras de progresso aos cabeçalhos para mostrar o progresso de todas as tarefas sob esse cabeçalho.",
    "Auto complete parent task": "Completar tarefa pai automaticamente",
    "Toggle this to allow this plugin to auto complete parent task when all child tasks are completed.": "Ative para permitir que este plugin complete automaticamente a tarefa pai quando todas as tarefas filhas forem concluídas.",
    "Mark parent as 'In Progress' when partially complete": "Marcar pai como 'Em Andamento' quando parcialmente concluído",
    "When some but not all child tasks are completed, mark the parent task as 'In Progress'. Only works when 'Auto complete parent' is enabled.": "Quando algumas, mas não todas as tarefas filhas estiverem concluídas, marque a tarefa pai como 'Em Andamento'. Só funciona quando 'Completar tarefa pai automaticamente' está ativado.",
    "Count sub children level of current Task": "Contar níveis de sub-tarefas da Tarefa atual",
    "Toggle this to allow this plugin to count sub tasks.": "Ative para permitir que este plugin conte sub-tarefas.",
    "Checkbox Status Settings": "Configurações de Status da Tarefa",
    "Select a predefined task status collection or customize your own": "Selecione uma coleção predefinida de status de tarefa ou personalize a sua",
    "Completed task markers": "Marcadores de tarefa concluída",
    "Characters in square brackets that represent completed tasks. Example: \"x|X\"": "Caracteres entre colchetes que representam tarefas concluídas. Exemplo: \"x|X\"",
    "Planned task markers": "Marcadores de tarefa planejada",
    "Characters in square brackets that represent planned tasks. Example: \"?\"": "Caracteres entre colchetes que representam tarefas planejadas. Exemplo: \"?\"",
    "In progress task markers": "Marcadores de tarefa em andamento",
    "Characters in square brackets that represent tasks in progress. Example: \">|/\"": "Caracteres entre colchetes que representam tarefas em andamento. Exemplo: \">|/\"",
    "Abandoned task markers": "Marcadores de tarefa abandonada",
    "Characters in square brackets that represent abandoned tasks. Example: \"-\"": "Caracteres entre colchetes que representam tarefas abandonadas. Exemplo: \"-\"",
    "Characters in square brackets that represent not started tasks. Default is space \" \"": "Caracteres entre colchetes que representam tarefas não iniciadas. O padrão é espaço \" \"",
    "Count other statuses as": "Contar outros status como",
    "Select the status to count other statuses as. Default is \"Not Started\".": "Selecione o status para o qual outros status devem ser contados. O padrão é \"Não Iniciada\".",
    "Task Counting Settings": "Configurações de Contagem de Tarefas",
    "Exclude specific task markers": "Excluir marcadores de tarefa específicos",
    "Specify task markers to exclude from counting. Example: \"?|/\"": "Especifique marcadores de tarefa a serem excluídos da contagem. Exemplo: \"?|/\"",
    "Only count specific task markers": "Contar apenas marcadores de tarefa específicos",
    "Toggle this to only count specific task markers": "Ative para contar apenas marcadores de tarefa específicos",
    "Specific task markers to count": "Marcadores de tarefa específicos para contar",
    "Specify which task markers to count. Example: \"x|X|>|/\"": "Especifique quais marcadores de tarefa contar. Exemplo: \"x|X|>|/\"",
    "Conditional Progress Bar Display": "Exibição Condicional da Barra de Progresso",
    "Hide progress bars based on conditions": "Ocultar barras de progresso com base em condições",
    "Toggle this to enable hiding progress bars based on tags, folders, or metadata.": "Ative para habilitar a ocultação de barras de progresso com base em tags, pastas ou metadados.",
    "Hide by tags": "Ocultar por tags",
    "Specify tags that will hide progress bars (comma-separated, without #). Example: \"no-progress-bar,hide-progress\"": "Especifique tags que ocultarão barras de progresso (separadas por vírgula, sem #). Exemplo: \"sem-barra-progresso,ocultar-progresso\"",
    "Hide by folders": "Ocultar por pastas",
    "Specify folder paths that will hide progress bars (comma-separated). Example: \"Daily Notes,Projects/Hidden\"": "Especifique caminhos de pasta que ocultarão barras de progresso (separados por vírgula). Exemplo: \"Notas Diárias,Projetos/Ocultos\"",
    "Hide by metadata": "Ocultar por metadados",
    "Specify frontmatter metadata that will hide progress bars. Example: \"hide-progress-bar: true\"": "Especifique metadados do frontmatter que ocultarão barras de progresso. Exemplo: \"ocultar-barra-progresso: true\"",
    "Checkbox Status Switcher": "Alternador de Status da Tarefa",
    "Enable task status switcher": "Ativar alternador de status da tarefa",
    "Enable/disable the ability to cycle through task states by clicking.": "Ativar/desativar a capacidade de alternar entre os status da tarefa clicando.",
    "Enable custom task marks": "Ativar marcadores de tarefa personalizados",
    "Replace default checkboxes with styled text marks that follow your task status cycle when clicked.": "Substitua as caixas de seleção padrão por marcadores de texto estilizados que seguem o ciclo de status da sua tarefa ao serem clicados.",
    "Enable cycle complete status": "Permitir que o status 'Concluída' faça parte do ciclo de status",
    "Enable/disable the ability to automatically cycle through task states when pressing a mark.": "Ativar/desativar a capacidade de alternar automaticamente entre os status da tarefa ao pressionar um marcador.",
    "Always cycle new tasks": "Sempre ciclar novas tarefas",
    "When enabled, newly inserted tasks will immediately cycle to the next status. When disabled, newly inserted tasks with valid marks will keep their original mark.": "Quando ativado, tarefas recém-inseridas irão imediatamente para o próximo status. Quando desativado, tarefas recém-inseridas com marcadores válidos manterão seu marcador original.",
    "Checkbox Status Cycle and Marks": "Ciclo de Status da Tarefa e Marcadores",
    "Define task states and their corresponding marks. The order from top to bottom defines the cycling sequence.": "Defina os status da tarefa e seus marcadores correspondentes. A ordem de cima para baixo define a sequência de ciclo.",
    "Add Status": "Adicionar Status",
    "Completed Task Mover": "Mover Tarefas Concluídas",
    "Enable completed task mover": "Ativar mover tarefas concluídas",
    "Toggle this to enable commands for moving completed tasks to another file.": "Ative para habilitar comandos para mover tarefas concluídas para outro arquivo.",
    "Task marker type": "Tipo de marcador de tarefa",
    "Choose what type of marker to add to moved tasks": "Escolha que tipo de marcador adicionar às tarefas movidas",
    "Version marker text": "Texto do marcador de versão",
    "Text to append to tasks when moved (e.g., 'version 1.0')": "Texto a ser anexado às tarefas quando movidas (ex.: 'versão 1.0')",
    "Date marker text": "Texto do marcador de data",
    "Text to append to tasks when moved (e.g., 'archived on 2023-12-31')": "Texto a ser anexado às tarefas quando movidas (ex.: 'arquivado em 2023-12-31')",
    "Custom marker text": "Texto do marcador personalizado",
    "Use {{DATE:format}} for date formatting (e.g., {{DATE:YYYY-MM-DD}}": "Use {{DATE:formato}} para formatação de data (ex.: {{DATE:YYYY-MM-DD}}",
    "Treat abandoned tasks as completed": "Tratar tarefas abandonadas como concluídas",
    "If enabled, abandoned tasks will be treated as completed.": "Se ativado, tarefas abandonadas serão tratadas como concluídas.",
    "Complete all moved tasks": "Concluir todas as tarefas movidas",
    "If enabled, all moved tasks will be marked as completed.": "Se ativado, todas as tarefas movidas serão marcadas como concluídas.",
    "With current file link": "Com link do arquivo atual",
    "A link to the current file will be added to the parent task of the moved tasks.": "Um link para o arquivo atual será adicionado à tarefa pai das tarefas movidas.",
    "Say Thank You": "Agradeça",
    "Donate": "Doar",
    "If you like this plugin, consider donating to support continued development:": "Se você gosta deste plugin, considere doar para apoiar o desenvolvimento contínuo:",
    "Add number to the Progress Bar": "Adicionar número à Barra de Progresso",
    "Toggle this to allow this plugin to add tasks number to progress bar.": "Ative para permitir que este plugin adicione o número de tarefas à barra de progresso.",
    "Show percentage": "Mostrar porcentagem",
    "Toggle this to allow this plugin to show percentage in the progress bar.": "Ative para permitir que este plugin mostre a porcentagem na barra de progresso.",
    "Customize progress text": "Personalizar texto de progresso",
    "Toggle this to customize text representation for different progress percentage ranges.": "Ative para personalizar a representação de texto para diferentes intervalos de porcentagem de progresso.",
    "Progress Ranges": "Intervalos de Progresso",
    "Define progress ranges and their corresponding text representations.": "Defina intervalos de progresso e suas representações textuais correspondentes.",
    "Add new range": "Adicionar novo intervalo",
    "Add a new progress percentage range with custom text": "Adicionar um novo intervalo de porcentagem de progresso com texto personalizado",
    "Min percentage (0-100)": "Porcentagem mínima (0-100)",
    "Max percentage (0-100)": "Porcentagem máxima (0-100)",
    "Text template (use {{PROGRESS}})": "Modelo de texto (use {{PROGRESS}})",
    "Reset to defaults": "Restaurar padrões",
    "Reset": "Redefinir",
    "Priority Picker Settings": "Configurações do Seletor de Prioridade",
    "Toggle to enable priority picker dropdown for emoji and letter format priorities.": "Ative para habilitar o seletor de prioridade suspenso para prioridades em formato de emoji e letra.",
    "Enable priority picker": "Ativar seletor de prioridade",
    "Enable priority keyboard shortcuts": "Ativar atalhos de teclado para prioridade",
    "Toggle to enable keyboard shortcuts for setting task priorities.": "Ative para habilitar atalhos de teclado para definir prioridades de tarefas.",
    "Date picker": "Seletor de Data",
    "Enable date picker": "Ativar seletor de data",
    "Toggle this to enable date picker for tasks. This will add a calendar icon near your tasks which you can click to select a date.": "Ative para habilitar o seletor de data para tarefas. Isso adicionará um ícone de calendário perto de suas tarefas, no qual você pode clicar para selecionar uma data.",
    "Date mark": "Marcador de data",
    "Emoji mark to identify dates. You can use multiple emoji separated by commas.": "Marcador de emoji para identificar datas. Você pode usar múltiplos emojis separados por vírgulas.",
    "Quick capture": "Captura rápida",
    "Enable quick capture": "Ativar captura rápida",
    "Toggle this to enable Org-mode style quick capture panel. Press Alt+C to open the capture panel.": "Ative para habilitar o painel de captura rápida no estilo Org-mode. Pressione Alt+C para abrir o painel de captura.",
    "Target file": "Arquivo de destino",
    "The file where captured text will be saved. You can include a path, e.g., 'folder/Quick Capture.md'": "O arquivo onde o texto capturado será salvo. Você pode incluir um caminho, ex.: 'pasta/Captura Rápida.md'",
    "Placeholder text": "Texto de espaço reservado",
    "Placeholder text to display in the capture panel": "Texto de espaço reservado para exibir no painel de captura",
    "Append to file": "Anexar ao arquivo",
    "If enabled, captured text will be appended to the target file. If disabled, it will replace the file content.": "Se ativado, o texto capturado será anexado ao arquivo de destino. Se desativado, substituirá o conteúdo do arquivo.",
    "Task Filter": "Filtro de Tarefas",
    "Enable Task Filter": "Ativar Filtro de Tarefas",
    "Toggle this to enable the task filter panel": "Ative para habilitar o painel de filtro de tarefas",
    "Preset Filters": "Filtros Predefinidos",
    "Create and manage preset filters for quick access to commonly used task filters.": "Crie e gerencie filtros predefinidos para acesso rápido a filtros de tarefas usados comumente.",
    "Edit Filter: ": "Editar Filtro: ",
    "Filter name": "Nome do filtro",
    "Checkbox Status": "Status da Tarefa",
    "Include or exclude tasks based on their status": "Incluir ou excluir tarefas com base em seu status",
    "Include Completed Tasks": "Incluir Tarefas Concluídas",
    "Include In Progress Tasks": "Incluir Tarefas em Andamento",
    "Include Abandoned Tasks": "Incluir Tarefas Abandonadas",
    "Include Not Started Tasks": "Incluir Tarefas Não Iniciadas",
    "Include Planned Tasks": "Incluir Tarefas Planejadas",
    "Related Tasks": "Tarefas Relacionadas",
    "Include parent, child, and sibling tasks in the filter": "Incluir tarefas pai, filha e irmãs no filtro",
    "Include Parent Tasks": "Incluir Tarefas Pai",
    "Include Child Tasks": "Incluir Tarefas Filhas",
    "Include Sibling Tasks": "Incluir Tarefas Irmãs",
    "Advanced Filter": "Filtro Avançado",
    "Use boolean operations: AND, OR, NOT. Example: 'text content AND #tag1'": "Use operações booleanas: AND, OR, NOT. Exemplo: 'conteúdo do texto AND #tag1'",
    "Filter query": "Consulta de filtro",
    "Filter out tasks": "Ocultar tarefas correspondentes",
    "If enabled, tasks that match the query will be hidden, otherwise they will be shown": "Se ativado, tarefas que correspondem à consulta serão ocultadas; caso contrário, serão mostradas.",
    "Save": "Salvar",
    "Cancel": "Cancelar",
    "Hide filter panel": "Ocultar painel de filtro",
    "Show filter panel": "Mostrar painel de filtro",
    "Filter Tasks": "Filtrar Tarefas",
    "Preset filters": "Filtros predefinidos",
    "Select a saved filter preset to apply": "Selecione uma predefinição de filtro salva para aplicar",
    "Select a preset...": "Selecione uma predefinição...",
    "Query": "Consulta",
    "Use boolean operations: AND, OR, NOT. Example: 'text content AND #tag1 AND DATE:<2022-01-02 NOT PRIORITY:>=#B' - Supports >, <, =, >=, <=, != for PRIORITY and DATE.": "Use operações booleanas: AND, OR, NOT. Exemplo: 'conteúdo do texto AND #tag1 AND DATE:<2022-01-02 NOT PRIORITY:>=#B' - Suporta >, <, =, >=, <=, != para PRIORITY e DATE.",
    "If true, tasks that match the query will be hidden, otherwise they will be shown": "Se verdadeiro, tarefas que correspondem à consulta serão ocultadas; caso contrário, serão mostradas.",
    "Completed": "Concluída",
    "In Progress": "Em Andamento",
    "Abandoned": "Abandonada",
    "Not Started": "Não Iniciada",
    "Planned": "Planejada",
    "Include Related Tasks": "Incluir Tarefas Relacionadas",
    "Parent Tasks": "Tarefas Pai",
    "Child Tasks": "Tarefas Filhas",
    "Sibling Tasks": "Tarefas Irmãs",
    "Apply": "Aplicar",
    "New Preset": "Nova Predefinição",
    "Preset saved": "Predefinição salva",
    "No changes to save": "Nenhuma alteração para salvar",
    "Close": "Fechar",
    "Capture to": "Capturar para",
    "Capture": "Capturar",
    "Capture thoughts, tasks, or ideas...": "Capture pensamentos, tarefas ou ideias...",
    "Tomorrow": "Amanhã",
    "In 2 days": "Em 2 dias",
    "In 3 days": "Em 3 dias",
    "In 5 days": "Em 5 dias",
    "In 1 week": "Em 1 semana",
    "In 10 days": "Em 10 dias",
    "In 2 weeks": "Em 2 semanas",
    "In 1 month": "Em 1 mês",
    "In 2 months": "Em 2 meses",
    "In 3 months": "Em 3 meses",
    "In 6 months": "Em 6 meses",
    "In 1 year": "Em 1 ano",
    "In 5 years": "Em 5 anos",
    "In 10 years": "Em 10 anos",
    "Highest priority": "Prioridade máxima",
    "High priority": "Prioridade alta",
    "Medium priority": "Prioridade média",
    "No priority": "Sem prioridade",
    "Low priority": "Prioridade baixa",
    "Lowest priority": "Prioridade mínima",
    "Priority A": "Prioridade A",
    "Priority B": "Prioridade B",
    "Priority C": "Prioridade C",
    "Task Priority": "Prioridade da Tarefa",
    "Remove Priority": "Remover Prioridade",
    "Cycle task status forward": "Avançar status da tarefa",
    "Cycle task status backward": "Retroceder status da tarefa",
    "Remove priority": "Remover prioridade",
    "Move task to another file": "Mover tarefa para outro arquivo",
    "Move all completed subtasks to another file": "Mover todas as sub-tarefas concluídas para outro arquivo",
    "Move direct completed subtasks to another file": "Mover sub-tarefas concluídas diretas para outro arquivo",
    "Move all subtasks to another file": "Mover todas as sub-tarefas para outro arquivo",
    "Set priority": "Definir prioridade",
    "Toggle quick capture panel": "Alternar painel de captura rápida",
    "Quick capture (Global)": "Captura rápida (Global)",
    "Toggle task filter panel": "Alternar painel de filtro de tarefas",
    "Filter Mode": "Modo de Filtro",
    "Choose whether to include or exclude tasks that match the filters": "Escolha se deseja incluir ou excluir tarefas que correspondem aos filtros",
    "Show matching tasks": "Mostrar tarefas correspondentes",
    "Hide matching tasks": "Ocultar tarefas correspondentes",
    "Choose whether to show or hide tasks that match the filters": "Escolha se deseja mostrar ou ocultar tarefas que correspondem aos filtros",
    "Create new file:": "Criar novo arquivo:",
    "Completed tasks moved to": "Tarefas concluídas movidas para",
    "Failed to create file:": "Falha ao criar arquivo:",
    "Beginning of file": "Início do arquivo",
    "Failed to move tasks:": "Falha ao mover tarefas:",
    "No active file found": "Nenhum arquivo ativo encontrado",
    "Task moved to": "Tarefa movida para",
    "Failed to move task:": "Falha ao mover tarefa:",
    "Nothing to capture": "Nada para capturar",
    "Captured successfully": "Capturado com sucesso",
    "Failed to save:": "Falha ao salvar:",
    "Captured successfully to": "Capturado com sucesso para",
    "Total": "Total",
    "Workflow": "Fluxo de Trabalho",
    "Add as workflow root": "Adicionar como raiz do fluxo de trabalho",
    "Move to stage": "Mover para etapa",
    "Complete stage": "Concluir etapa",
    "Add child task with same stage": "Adicionar tarefa filha com a mesma etapa",
    "Could not open quick capture panel in the current editor": "Não foi possível abrir o painel de captura rápida no editor atual",
    "Just started {{PROGRESS}}%": "Recém iniciado {{PROGRESS}}%",
    "Making progress {{PROGRESS}}%": "Progredindo {{PROGRESS}}%",
    "Half way {{PROGRESS}}%": "Na metade {{PROGRESS}}%",
    "Good progress {{PROGRESS}}%": "Bom progresso {{PROGRESS}}%",
    "Almost there {{PROGRESS}}%": "Quase lá {{PROGRESS}}%",
    "Progress bar": "Barra de progresso",
    "You can customize the progress bar behind the parent task(usually at the end of the task). You can also customize the progress bar for the task below the heading.": "Você pode personalizar a barra de progresso atrás da tarefa pai (geralmente no final da tarefa). Você também pode personalizar a barra de progresso para a tarefa abaixo do cabeçalho.",
    "Hide progress bars": "Ocultar barras de progresso",
    "Parent task changer": "Modificador de tarefa pai",
    "Change the parent task of the current task.": "Altere a tarefa pai da tarefa atual.",
    "No preset filters created yet. Click 'Add New Preset' to create one.": "Nenhum filtro predefinido criado ainda. Clique em 'Adicionar Nova Predefinição' para criar um.",
    "Configure task workflows for project and process management": "Configurar fluxos de trabalho de tarefas para gerenciamento de projetos e processos",
    "Enable workflow": "Ativar fluxo de trabalho",
    "Toggle to enable the workflow system for tasks": "Ative para habilitar o sistema de fluxo de trabalho para tarefas",
    "Auto-add timestamp": "Adicionar carimbo de tempo automaticamente",
    "Automatically add a timestamp to the task when it is created": "Adicionar automaticamente um carimbo de tempo à tarefa quando ela é criada",
    "Timestamp format:": "Formato do carimbo de tempo:",
    "Timestamp format": "Formato do carimbo de tempo",
    "Remove timestamp when moving to next stage": "Remover carimbo de tempo ao mover para a próxima etapa",
    "Remove the timestamp from the current task when moving to the next stage": "Remover o carimbo de tempo da tarefa atual ao mover para a próxima etapa",
    "Calculate spent time": "Calcular tempo gasto",
    "Calculate and display the time spent on the task when moving to the next stage": "Calcular e exibir o tempo gasto na tarefa ao mover para a próxima etapa",
    "Format for spent time:": "Formato para tempo gasto:",
    "Calculate spent time when move to next stage.": "Calcular tempo gasto ao mover para a próxima etapa.",
    "Spent time format": "Formato do tempo gasto",
    "Calculate full spent time": "Calcular tempo gasto total",
    "Calculate the full spent time from the start of the task to the last stage": "Calcular o tempo gasto total desde o início da tarefa até a última etapa",
    "Auto remove last stage marker": "Remover automaticamente marcador da última etapa",
    "Automatically remove the last stage marker when a task is completed": "Remover automaticamente o marcador da última etapa quando uma tarefa é concluída",
    "Auto-add next task": "Adicionar automaticamente próxima tarefa",
    "Automatically create a new task with the next stage when completing a task": "Criar automaticamente uma nova tarefa com a próxima etapa ao concluir uma tarefa",
    "Workflow definitions": "Definições de fluxo de trabalho",
    "Configure workflow templates for different types of processes": "Configure modelos de fluxo de trabalho para diferentes tipos de processos",
    "No workflow definitions created yet. Click 'Add New Workflow' to create one.": "Nenhuma definição de fluxo de trabalho criada ainda. Clique em 'Adicionar Novo Fluxo de Trabalho' para criar uma.",
    "Edit workflow": "Editar fluxo de trabalho",
    "Remove workflow": "Remover fluxo de trabalho",
    "Delete workflow": "Excluir fluxo de trabalho",
    "Delete": "Excluir",
    "Add New Workflow": "Adicionar Novo Fluxo de Trabalho",
    "New Workflow": "Novo Fluxo de Trabalho",
    "Create New Workflow": "Criar Novo Fluxo de Trabalho",
    "Workflow name": "Nome do fluxo de trabalho",
    "A descriptive name for the workflow": "Um nome descritivo para o fluxo de trabalho",
    "Workflow ID": "ID do fluxo de trabalho",
    "A unique identifier for the workflow (used in tags)": "Um identificador único para o fluxo de trabalho (usado em tags)",
    "Description": "Descrição",
    "Optional description for the workflow": "Descrição opcional para o fluxo de trabalho",
    "Describe the purpose and use of this workflow...": "Descreva o propósito e uso deste fluxo de trabalho...",
    "Workflow Stages": "Etapas do Fluxo de Trabalho",
    "No stages defined yet. Add a stage to get started.": "Nenhuma etapa definida ainda. Adicione uma etapa para começar.",
    "Edit": "Editar",
    "Move up": "Mover para cima",
    "Move down": "Mover para baixo",
    "Sub-stage": "Subetapa",
    "Sub-stage name": "Nome da subetapa",
    "Sub-stage ID": "ID da subetapa",
    "Next: ": "Próxima: ",
    "Add Sub-stage": "Adicionar Subetapa",
    "New Sub-stage": "Nova Subetapa",
    "Edit Stage": "Editar Etapa",
    "Stage name": "Nome da etapa",
    "A descriptive name for this workflow stage": "Um nome descritivo para esta etapa do fluxo de trabalho",
    "Stage ID": "ID da etapa",
    "A unique identifier for the stage (used in tags)": "Um identificador único para a etapa (usado em tags)",
    "Stage type": "Tipo de etapa",
    "The type of this workflow stage": "O tipo desta etapa do fluxo de trabalho",
    "Linear (sequential)": "Linear (sequencial)",
    "Cycle (repeatable)": "Ciclo (repetível)",
    "Terminal (end stage)": "Terminal (etapa final)",
    "Next stage": "Próxima etapa",
    "The stage to proceed to after this one": "A etapa para a qual prosseguir após esta",
    "Sub-stages": "Subetapas",
    "Define cycle sub-stages (optional)": "Definir subetapas do ciclo (opcional)",
    "No sub-stages defined yet.": "Nenhuma subetapa definida ainda.",
    "Can proceed to": "Pode prosseguir para",
    "Additional stages that can follow this one (for right-click menu)": "Etapas adicionais que podem seguir esta (para o menu de clique com o botão direito)",
    "No additional destination stages defined.": "Nenhuma etapa de destino adicional definida.",
    "Remove": "Remover",
    "Add": "Adicionar",
    "Name and ID are required.": "Nome e ID são obrigatórios.",
    "End of file": "Fim do arquivo",
    "Include in cycle": "Incluir no ciclo",
    "Preset": "Predefinição",
    "Preset name": "Nome da predefinição",
    "Edit Filter": "Editar Filtro",
    "Add New Preset": "Adicionar Nova Predefinição",
    "New Filter": "Novo Filtro",
    "Reset to Default Presets": "Restaurar Predefinições Padrão",
    "This will replace all your current presets with the default set. Are you sure?": "Isso substituirá todas as suas predefinições atuais pelo conjunto padrão. Tem certeza?",
    "Edit Workflow": "Editar Fluxo de Trabalho",
    "General": "Geral",
    "Progress Bar": "Barra de Progresso",
    "Task Mover": "Mover Tarefas",
    "Quick Capture": "Captura Rápida",
    "Date & Priority": "Data e Prioridade",
    "About": "Sobre",
    "Count sub children of current Task": "Contar sub-tarefas da Tarefa atual",
    "Toggle this to allow this plugin to count sub tasks when generating progress bar\t.": "Ative para permitir que este plugin conte sub-tarefas ao gerar a barra de progresso.",
    "Configure task status settings": "Configurar definições de status da tarefa",
    "Configure which task markers to count or exclude": "Configurar quais marcadores de tarefa contar ou excluir",
    "Task status cycle and marks": "Ciclo de status da tarefa e marcadores",
    "About Task Genius": "Sobre o Task Genius",
    "Version": "Versão",
    "Documentation": "Documentação",
    "View the documentation for this plugin": "Veja a documentação para este plugin",
    "Open Documentation": "Abrir Documentação",
    "Incomplete tasks": "Tarefas incompletas",
    "In progress tasks": "Tarefas em andamento",
    "Completed tasks": "Tarefas concluídas",
    "All tasks": "Todas as tarefas",
    "After heading": "Após o cabeçalho",
    "End of section": "Fim da seção",
    "Enable text mark in source mode": "Ativar marcador de texto no modo de edição",
    "Make the text mark in source mode follow the task status cycle when clicked.": "Fazer com que o marcador de texto no modo de edição siga o ciclo de status da tarefa ao ser clicado.",
    "Status name": "Nome do status",
    "Progress display mode": "Modo de exibição do progresso",
    "Choose how to display task progress": "Escolha como exibir o progresso da tarefa",
    "No progress indicators": "Sem indicadores de progresso",
    "Graphical progress bar": "Barra de progresso gráfica",
    "Text progress indicator": "Indicador de progresso textual",
    "Both graphical and text": "Gráfico e textual",
    "Toggle this to allow this plugin to count sub tasks when generating progress bar.": "Ative para permitir que este plugin conte sub-tarefas ao gerar a barra de progresso.",
    "Progress format": "Formato do progresso",
    "Choose how to display the task progress": "Escolha como exibir o progresso da tarefa",
    "Percentage (75%)": "Porcentagem (75%)",
    "Bracketed percentage ([75%])": "Porcentagem entre colchetes ([75%])",
    "Fraction (3/4)": "Fração (3/4)",
    "Bracketed fraction ([3/4])": "Fração entre colchetes ([3/4])",
    "Detailed ([3✓ 1⟳ 0✗ 1? / 5])": "Detalhado ([3✓ 1⟳ 0✗ 1? / 5])",
    "Custom format": "Formato personalizado",
    "Range-based text": "Texto baseado em intervalo",
    "Use placeholders like {{COMPLETED}}, {{TOTAL}}, {{PERCENT}}, etc.": "Use marcadores como {{COMPLETED}}, {{TOTAL}}, {{PERCENT}}, etc.",
    "Preview:": "Visualização:",
    "Available placeholders": "Marcadores disponíveis",
    "Available placeholders: {{COMPLETED}}, {{TOTAL}}, {{IN_PROGRESS}}, {{ABANDONED}}, {{PLANNED}}, {{NOT_STARTED}}, {{PERCENT}}, {{COMPLETED_SYMBOL}}, {{IN_PROGRESS_SYMBOL}}, {{ABANDONED_SYMBOL}}, {{PLANNED_SYMBOL}}": "Marcadores disponíveis: {{COMPLETED}}, {{TOTAL}}, {{IN_PROGRESS}}, {{ABANDONED}}, {{PLANNED}}, {{NOT_STARTED}}, {{PERCENT}}, {{COMPLETED_SYMBOL}}, {{IN_PROGRESS_SYMBOL}}, {{ABANDONED_SYMBOL}}, {{PLANNED_SYMBOL}}",
    "Expression examples": "Exemplos de expressão",
    "Examples of advanced formats using expressions": "Exemplos de formatos avançados usando expressões",
    "Text Progress Bar": "Barra de Progresso Textual",
    "Emoji Progress Bar": "Barra de Progresso com Emoji",
    "Color-coded Status": "Status Codificado por Cores",
    "Status with Icons": "Status com Ícones",
    "Preview": "Visualizar",
    "Use": "Usar",
    "Toggle this to show percentage instead of completed/total count.": "Ative para mostrar porcentagem em vez da contagem de concluídas/total.",
    "Customize progress ranges": "Personalizar intervalos de progresso",
    "Toggle this to customize the text for different progress ranges.": "Ative para personalizar o texto para diferentes intervalos de progresso.",
    "Apply Theme": "Aplicar Tema",
    "Back to main settings": "Voltar para configurações principais",
    "Support expression in format, like using data.percentages to get the percentage of completed tasks. And using math or even repeat operations to get the result.": "Suporte a expressões no formato, como usar data.percentages para obter a porcentagem de tarefas concluídas. E usar matemática ou até operações de repetição para obter o resultado.",
    "Support expression in format, like using data.percentages to get the percentage of completed tasks. And using math or even repeat functions to get the result.": "Suporte a expressões no formato, como usar data.percentages para obter a porcentagem de tarefas concluídas. E usar matemática ou até funções de repetição para obter o resultado.",
    "Target File:": "Arquivo de Destino:",
    "Task Properties": "Propriedades da Tarefa",
    "Start Date": "Data de Início",
    "Due Date": "Data de Vencimento",
    "Scheduled Date": "Data Agendada",
    "Priority": "Prioridade",
    "None": "Nenhuma",
    "Highest": "Máxima",
    "High": "Alta",
    "Medium": "Média",
    "Low": "Baixa",
    "Lowest": "Mínima",
    "Project": "Projeto",
    "Project name": "Nome do projeto",
    "Context": "Contexto",
    "Recurrence": "Recorrência",
    "e.g., every day, every week": "ex.: todo dia, toda semana",
    "Task Content": "Conteúdo da Tarefa",
    "Task Details": "Detalhes da Tarefa",
    "File": "Arquivo",
    "Edit in File": "Editar no Arquivo",
    "Mark Incomplete": "Marcar como Incompleta",
    "Mark Complete": "Marcar como Concluída",
    "Task Title": "Título da Tarefa",
    "Tags": "Tags",
    "e.g. every day, every 2 weeks": "ex.: todo dia, a cada 2 semanas",
    "Forecast": "Previsão",
    "0 actions, 0 projects": "0 ações, 0 projetos",
    "Toggle list/tree view": "Alternar visualização em lista/árvore",
    "Focusing on Work": "Focando no Trabalho",
    "Unfocus": "Desfocar",
    "Past Due": "Atrasada",
    "Today": "Hoje",
    "Future": "Futuro",
    "actions": "ações",
    "project": "projeto",
    "Coming Up": "Em breve",
    "Task": "Tarefa",
    "Tasks": "Tarefas",
    "No upcoming tasks": "Nenhuma tarefa futura",
    "No tasks scheduled": "Nenhuma tarefa agendada",
    "0 tasks": "0 tarefas",
    "Filter tasks...": "Filtrar tarefas...",
    "Projects": "Projetos",
    "Toggle multi-select": "Alternar multisseleção",
    "No projects found": "Nenhum projeto encontrado",
    "projects selected": "projetos selecionados",
    "tasks": "tarefas",
    "No tasks in the selected projects": "Nenhuma tarefa nos projetos selecionados",
    "Select a project to see related tasks": "Selecione um projeto para ver tarefas relacionadas",
    "Configure Review for": "Configurar Revisão para",
    "Review Frequency": "Frequência de Revisão",
    "How often should this project be reviewed": "Com que frequência este projeto deve ser revisado",
    "Custom...": "Personalizado...",
    "e.g., every 3 months": "ex.: a cada 3 meses",
    "Last Reviewed": "Última Revisão",
    "Please specify a review frequency": "Por favor, especifique uma frequência de revisão",
    "Review schedule updated for": "Agenda de revisão atualizada para",
    "Review Projects": "Revisar Projetos",
    "Select a project to review its tasks.": "Selecione um projeto para revisar suas tarefas.",
    "Configured for Review": "Configurado para Revisão",
    "Not Configured": "Não Configurado",
    "No projects available.": "Nenhum projeto disponível.",
    "Select a project to review.": "Selecione um projeto para revisar.",
    "Show all tasks": "Mostrar todas as tarefas",
    "Showing all tasks, including completed tasks from previous reviews.": "Mostrando todas as tarefas, incluindo tarefas concluídas de revisões anteriores.",
    "Show only new and in-progress tasks": "Mostrar apenas tarefas novas e em andamento",
    "No tasks found for this project.": "Nenhuma tarefa encontrada para este projeto.",
    "Review every": "Revisar a cada",
    "never": "nunca",
    "Last reviewed": "Última revisão",
    "Mark as Reviewed": "Marcar como Revisado",
    "No review schedule configured for this project": "Nenhuma agenda de revisão configurada para este projeto",
    "Configure Review Schedule": "Configurar Agenda de Revisão",
    "Project Review": "Revisão de Projeto",
    "Select a project from the left sidebar to review its tasks.": "Selecione um projeto na barra lateral esquerda para revisar suas tarefas.",
    "Inbox": "Caixa de Entrada",
    "Flagged": "Sinalizadas",
    "Review": "Revisão",
    "tags selected": "tags selecionadas",
    "No tasks with the selected tags": "Nenhuma tarefa com as tags selecionadas",
    "Select a tag to see related tasks": "Selecione uma tag para ver tarefas relacionadas",
    "Open Task Genius view": "Abrir visualização Task Genius",
    "Task capture with metadata": "Captura de tarefa com metadados",
    "Refresh task index": "Atualizar índice de tarefas",
    "Refreshing task index...": "Atualizando índice de tarefas...",
    "Task index refreshed": "Índice de tarefas atualizado",
    "Failed to refresh task index": "Falha ao atualizar índice de tarefas",
    "Force reindex all tasks": "Forçar reindexação de todas as tarefas",
    "Clearing task cache and rebuilding index...": "Limpando cache de tarefas e reconstruindo índice...",
    "Task index completely rebuilt": "Índice de tarefas completamente reconstruído",
    "Failed to force reindex tasks": "Falha ao forçar reindexação de tarefas",
    "Task Genius View": "Visualização Task Genius",
    "Toggle Sidebar": "Alternar Barra Lateral",
    "Details": "Detalhes",
    "View": "Visualização",
    "Task Genius view is a comprehensive view that allows you to manage your tasks in a more efficient way.": "A visualização Task Genius é uma visualização abrangente que permite gerenciar suas tarefas de forma mais eficiente.",
    "Enable task genius view": "Ativar visualização Task Genius",
    "Select a task to view details": "Selecione uma tarefa para ver detalhes",
    "Status": "Status",
    "Comma separated": "Separado por vírgula",
    "Focus": "Foco",
    "Loading more...": "Carregando mais...",
    "projects": "projetos",
    "No tasks for this section.": "Nenhuma tarefa para esta seção.",
    "No tasks found.": "Nenhuma tarefa encontrada.",
    "Complete": "Concluir",
    "Switch status": "Mudar status",
    "Rebuild index": "Reconstruir índice",
    "Rebuild": "Reconstruir",
    "0 tasks, 0 projects": "0 tarefas, 0 projetos",
    "New Custom View": "Nova Visualização Personalizada",
    "Create Custom View": "Criar Visualização Personalizada",
    "Edit View: ": "Editar Visualização: ",
    "View Name": "Nome da Visualização",
    "My Custom Task View": "Minha Visualização de Tarefas Personalizada",
    "Icon Name": "Nome do Ícone",
    "Enter any Lucide icon name (e.g., list-checks, filter, inbox)": "Insira qualquer nome de ícone Lucide (ex.: list-checks, filter, inbox)",
    "Filter Rules": "Regras de Filtro",
    "Hide Completed and Abandoned Tasks": "Ocultar Tarefas Concluídas e Abandonadas",
    "Hide completed and abandoned tasks in this view.": "Ocultar tarefas concluídas e abandonadas nesta visualização.",
    "Text Contains": "Texto Contém",
    "Filter tasks whose content includes this text (case-insensitive).": "Filtrar tarefas cujo conteúdo inclua este texto (não diferencia maiúsculas/minúsculas).",
    "Tags Include": "Tags Incluem",
    "Task must include ALL these tags (comma-separated).": "A tarefa deve incluir TODAS estas tags (separadas por vírgula).",
    "Tags Exclude": "Tags Excluem",
    "Task must NOT include ANY of these tags (comma-separated).": "A tarefa NÃO deve incluir NENHUMA destas tags (separadas por vírgula).",
    "Project Is": "Projeto É",
    "Task must belong to this project (exact match).": "A tarefa deve pertencer a este projeto (correspondência exata).",
    "Priority Is": "Prioridade É",
    "Task must have this priority (e.g., 1, 2, 3).": "A tarefa deve ter esta prioridade (ex.: 1, 2, 3).",
    "Status Include": "Status Inclui",
    "Task status must be one of these (comma-separated markers, e.g., /,>).": "O status da tarefa deve ser um destes (marcadores separados por vírgula, ex.: /,>).",
    "Status Exclude": "Status Exclui",
    "Task status must NOT be one of these (comma-separated markers, e.g., -,x).": "O status da tarefa NÃO deve ser um destes (marcadores separados por vírgula, ex.: -,x).",
    "Use YYYY-MM-DD or relative terms like 'today', 'tomorrow', 'next week', 'last month'.": "Use AAAA-MM-DD ou termos relativos como 'hoje', 'amanhã', 'próxima semana', 'mês passado'.",
    "Due Date Is": "Data de Vencimento É",
    "Start Date Is": "Data de Início É",
    "Scheduled Date Is": "Data Agendada É",
    "Path Includes": "Caminho Inclui",
    "Task must contain this path (case-insensitive).": "A tarefa deve conter este caminho (não diferencia maiúsculas/minúsculas).",
    "Path Excludes": "Caminho Exclui",
    "Task must NOT contain this path (case-insensitive).": "A tarefa NÃO deve conter este caminho (não diferencia maiúsculas/minúsculas).",
    "Unnamed View": "Visualização Sem Nome",
    "View configuration saved.": "Configuração da visualização salva.",
    "Hide Details": "Ocultar Detalhes",
    "Show Details": "Mostrar Detalhes",
    "View Config": "Config. da Visualização",
    "View Configuration": "Configuração da Visualização",
    "Configure the Task Genius sidebar views, visibility, order, and create custom views.": "Configure as visualizações da barra lateral do Task Genius, visibilidade, ordem e crie visualizações personalizadas.",
    "Manage Views": "Gerenciar Visualizações",
    "Configure sidebar views, order, visibility, and hide/show completed tasks per view.": "Configure as visualizações da barra lateral, ordem, visibilidade e oculte/mostre tarefas concluídas por visualização.",
    "Show in sidebar": "Mostrar na barra lateral",
    "Edit View": "Editar Visualização",
    "Move Up": "Mover Para Cima",
    "Move Down": "Mover Para Baixo",
    "Delete View": "Excluir Visualização",
    "Add Custom View": "Adicionar Visualização Personalizada",
    "Error: View ID already exists.": "Erro: ID da visualização já existe.",
    "Events": "Eventos",
    "Plan": "Plano",
    "Year": "Ano",
    "Month": "Mês",
    "Week": "Semana",
    "Day": "Dia",
    "Agenda": "Agenda",
    "Back to categories": "Voltar para categorias",
    "No matching options found": "Nenhuma opção correspondente encontrada",
    "No matching filters found": "Nenhum filtro correspondente encontrado",
    "Tag": "Tag",
    "File Path": "Caminho do Arquivo",
    "Add filter": "Adicionar filtro",
    "Clear all": "Limpar tudo",
    "Add Card": "Adicionar Cartão",
    "First Day of Week": "Primeiro Dia da Semana",
    "Overrides the locale default for calendar views.": "Substitui o padrão da localidade para visualizações de calendário.",
    "Show checkbox": "Mostrar caixa de seleção",
    "Show a checkbox for each task in the kanban view.": "Mostrar uma caixa de seleção para cada tarefa na visualização kanban.",
    "Locale Default": "Padrão da Localidade",
    "Use custom goal for progress bar": "Usar meta personalizada para barra de progresso",
    "Toggle this to allow this plugin to find the pattern g::number as goal of the parent task.": "Ative para permitir que este plugin encontre o padrão g::número como meta da tarefa pai.",
    "Prefer metadata format of task": "Preferir formato de metadados da tarefa",
    "You can choose dataview format or tasks format, that will influence both index and save format.": "Você pode escolher o formato dataview ou o formato tasks, o que influenciará tanto o índice quanto o formato de salvamento.",
    "Open in new tab": "Abrir em nova aba",
    "Open settings": "Abrir configurações",
    "Hide in sidebar": "Ocultar na barra lateral",
    "No items found": "Nenhum item encontrado",
    "High Priority": "Prioridade Alta",
    "Medium Priority": "Prioridade Média",
    "Low Priority": "Prioridade Baixa",
    "No tasks in the selected items": "Nenhuma tarefa nos itens selecionados",
    "View Type": "Tipo de Visualização",
    "Select the type of view to create": "Selecione o tipo de visualização a criar",
    "Standard View": "Visualização Padrão",
    "Two Column View": "Visualização em Duas Colunas",
    "Items": "Itens",
    "selected items": "itens selecionados",
    "No items selected": "Nenhum item selecionado",
    "Two Column View Settings": "Configurações da Visualização em Duas Colunas",
    "Group by Task Property": "Agrupar por Propriedade da Tarefa",
    "Select which task property to use for left column grouping": "Selecione qual propriedade da tarefa usar para agrupamento na coluna esquerda",
    "Priorities": "Prioridades",
    "Contexts": "Contextos",
    "Due Dates": "Datas de Vencimento",
    "Scheduled Dates": "Datas Agendadas",
    "Start Dates": "Datas de Início",
    "Files": "Arquivos",
    "Left Column Title": "Título da Coluna Esquerda",
    "Title for the left column (items list)": "Título para a coluna esquerda (lista de itens)",
    "Right Column Title": "Título da Coluna Direita",
    "Default title for the right column (tasks list)": "Título padrão para a coluna direita (lista de tarefas)",
    "Multi-select Text": "Texto da Multisseleção",
    "Text to show when multiple items are selected": "Texto a ser mostrado quando múltiplos itens são selecionados",
    "Empty State Text": "Texto de Estado Vazio",
    "Text to show when no items are selected": "Texto a ser mostrado quando nenhum item é selecionado",
    "Filter Blanks": "Filtrar Itens em Branco",
    "Filter out blank tasks in this view.": "Filtrar tarefas em branco nesta visualização.",
    "Task must contain this path (case-insensitive). Separate multiple paths with commas.": "A tarefa deve conter este caminho (não diferencia maiúsculas/minúsculas). Separe múltiplos caminhos com vírgulas.",
    "Task must NOT contain this path (case-insensitive). Separate multiple paths with commas.": "A tarefa NÃO deve conter este caminho (não diferencia maiúsculas/minúsculas). Separe múltiplos caminhos com vírgulas.",
    "You have unsaved changes. Save before closing?": "Você tem alterações não salvas. Salvar antes de fechar?",
    "Rotate": "Girar",
    "Are you sure you want to force reindex all tasks?": "Tem certeza de que deseja forçar a reindexação de todas as tarefas?",
    "Enable progress bar in reading mode": "Ativar barra de progresso no modo de leitura",
    "Toggle this to allow this plugin to show progress bars in reading mode.": "Ative para permitir que este plugin mostre barras de progresso no modo de leitura.",
    "Range": "Intervalo",
    "as a placeholder for the percentage value": "como um marcador para o valor da porcentagem",
    "Template text with": "Texto do modelo com",
    "placeholder": "marcador de posição",
    "Reindex": "Reindexar",
    "From now": "A partir de agora",
    "Complete workflow": "Concluir fluxo de trabalho",
    "Move to": "Mover para",
    "Settings": "Configurações",
    "Just started": "Recém iniciado",
    "Making progress": "Progredindo",
    "Half way": "Na metade",
    "Good progress": "Bom progresso",
    "Almost there": "Quase lá",
    "archived on": "arquivado em",
    "moved": "movido",
    "Capture your thoughts...": "Capture seus pensamentos...",
    "Project Workflow": "Fluxo de Trabalho do Projeto",
    "Standard project management workflow": "Fluxo de trabalho padrão de gerenciamento de projetos",
    "Planning": "Planejamento",
    "Development": "Desenvolvimento",
    "Testing": "Teste",
    "Cancelled": "Cancelada",
    "Habit": "Hábito",
    "Drink a cup of good tea": "Beber uma xícara de um bom chá",
    "Watch an episode of a favorite series": "Assistir a um episódio de uma série favorita",
    "Play a game": "Jogar um jogo",
    "Eat a piece of chocolate": "Comer um pedaço de chocolate",
    "common": "comum",
    "rare": "raro",
    "legendary": "lendário",
    "No Habits Yet": "Nenhum Hábito Ainda",
    "Click the open habit button to create a new habit.": "Clique no botão abrir hábito para criar um novo hábito.",
    "Please enter details": "Por favor, insira os detalhes",
    "Goal reached": "Meta alcançada",
    "Exceeded goal": "Meta excedida",
    "Active": "Ativo",
    "today": "hoje",
    "Inactive": "Inativo",
    "All Done!": "Tudo Concluído!",
    "Select event...": "Selecionar evento...",
    "Create new habit": "Criar novo hábito",
    "Edit habit": "Editar hábito",
    "Habit type": "Tipo de hábito",
    "Daily habit": "Hábito diário",
    "Simple daily check-in habit": "Hábito simples de check-in diário",
    "Count habit": "Hábito de contagem",
    "Record numeric values, e.g., how many cups of water": "Registrar valores numéricos, ex.: quantos copos de água",
    "Mapping habit": "Hábito de mapeamento",
    "Use different values to map, e.g., emotion tracking": "Usar valores diferentes para mapear, ex.: acompanhamento de emoções",
    "Scheduled habit": "Hábito agendado",
    "Habit with multiple events": "Hábito com múltiplos eventos",
    "Habit name": "Nome do hábito",
    "Display name of the habit": "Nome de exibição do hábito",
    "Optional habit description": "Descrição opcional do hábito",
    "Icon": "Ícone",
    "Please enter a habit name": "Por favor, insira um nome para o hábito",
    "Property name": "Nome da propriedade",
    "The property name of the daily note front matter": "O nome da propriedade no front matter da nota diária",
    "Completion text": "Texto de conclusão",
    "(Optional) Specific text representing completion, leave blank for any non-empty value to be considered completed": "(Opcional) Texto específico representando conclusão, deixe em branco para que qualquer valor não vazio seja considerado concluído",
    "The property name in daily note front matter to store count values": "O nome da propriedade no front matter da nota diária para armazenar valores de contagem",
    "Minimum value": "Valor mínimo",
    "(Optional) Minimum value for the count": "(Opcional) Valor mínimo para a contagem",
    "Maximum value": "Valor máximo",
    "(Optional) Maximum value for the count": "(Opcional) Valor máximo para a contagem",
    "Unit": "Unidade",
    "(Optional) Unit for the count, such as 'cups', 'times', etc.": "(Opcional) Unidade para a contagem, como 'copos', 'vezes', etc.",
    "Notice threshold": "Limite de aviso",
    "(Optional) Trigger a notification when this value is reached": "(Opcional) Acionar uma notificação quando este valor for atingido",
    "The property name in daily note front matter to store mapping values": "O nome da propriedade no front matter da nota diária para armazenar valores de mapeamento",
    "Value mapping": "Mapeamento de valor",
    "Define mappings from numeric values to display text": "Definir mapeamentos de valores numéricos para texto de exibição",
    "Add new mapping": "Adicionar novo mapeamento",
    "Scheduled events": "Eventos agendados",
    "Add multiple events that need to be completed": "Adicionar múltiplos eventos que precisam ser concluídos",
    "Event name": "Nome do evento",
    "Event details": "Detalhes do evento",
    "Add new event": "Adicionar novo evento",
    "Please enter a property name": "Por favor, insira um nome de propriedade",
    "Please add at least one mapping value": "Por favor, adicione pelo menos um valor de mapeamento",
    "Mapping key must be a number": "A chave de mapeamento deve ser um número",
    "Please enter text for all mapping values": "Por favor, insira texto para todos os valores de mapeamento",
    "Please add at least one event": "Por favor, adicione pelo menos um evento",
    "Event name cannot be empty": "O nome do evento não pode estar vazio",
    "Add new habit": "Adicionar novo hábito",
    "No habits yet": "Nenhum hábito ainda",
    "Click the button above to add your first habit": "Clique no botão acima para adicionar seu primeiro hábito",
    "Habit updated": "Hábito atualizado",
    "Habit added": "Hábito adicionado",
    "Delete habit": "Excluir hábito",
    "This action cannot be undone.": "Esta ação não pode ser desfeita.",
    "Habit deleted": "Hábito excluído",
    "You've Earned a Reward!": "Você Ganhou uma Recompensa!",
    "Your reward:": "Sua recompensa:",
    "Image not found:": "Imagem não encontrada:",
    "Claim Reward": "Resgatar Recompensa",
    "Skip": "Pular",
    "Reward": "Recompensa",
    "View & Index Configuration": "Configuração de Visualização e Índice",
    "Enable task genius view will also enable the task genius indexer, which will provide the task genius view results from whole vault.": "Ativar a visualização Task Genius também ativará o indexador Task Genius, que fornecerá os resultados da visualização Task Genius de todo o cofre.",
    "Use daily note path as date": "Usar caminho da nota diária como data",
    "If enabled, the daily note path will be used as the date for tasks.": "Se ativado, o caminho da nota diária será usado como data para as tarefas.",
    "Task Genius will use moment.js and also this format to parse the daily note path.": "O Task Genius usará moment.js e também este formato para analisar o caminho da nota diária.",
    "You need to set `yyyy` instead of `YYYY` in the format string. And `dd` instead of `DD`.": "Você precisa definir `yyyy` em vez de `YYYY` na string de formato. E `dd` em vez de `DD`.",
    "Daily note format": "Formato da nota diária",
    "Daily note path": "Caminho da nota diária",
    "Select the folder that contains the daily note.": "Selecione a pasta que contém a nota diária.",
    "Use as date type": "Usar como tipo de data",
    "You can choose due, start, or scheduled as the date type for tasks.": "Você pode escolher vencimento, início ou agendada como o tipo de data para as tarefas.",
    "Due": "Vencimento",
    "Start": "Início",
    "Scheduled": "Agendada",
    "Rewards": "Recompensas",
    "Configure rewards for completing tasks. Define items, their occurrence chances, and conditions.": "Configure recompensas por concluir tarefas. Defina itens, suas chances de ocorrência e condições.",
    "Enable Rewards": "Ativar Recompensas",
    "Toggle to enable or disable the reward system.": "Ative para habilitar ou desabilitar o sistema de recompensas.",
    "Occurrence Levels": "Níveis de Ocorrência",
    "Define different levels of reward rarity and their probability.": "Defina diferentes níveis de raridade de recompensa e sua probabilidade.",
    "Chance must be between 0 and 100.": "A chance deve estar entre 0 e 100.",
    "Level Name (e.g., common)": "Nome do Nível (ex.: comum)",
    "Chance (%)": "Chance (%)",
    "Delete Level": "Excluir Nível",
    "Add Occurrence Level": "Adicionar Nível de Ocorrência",
    "New Level": "Novo Nível",
    "Reward Items": "Itens de Recompensa",
    "Manage the specific rewards that can be obtained.": "Gerencie as recompensas específicas que podem ser obtidas.",
    "No levels defined": "Nenhum nível definido",
    "Reward Name/Text": "Nome/Texto da Recompensa",
    "Inventory (-1 for ∞)": "Inventário (-1 para ∞)",
    "Invalid inventory number.": "Número de inventário inválido.",
    "Condition (e.g., #tag AND project)": "Condição (ex.: #tag E projeto)",
    "Image URL (optional)": "URL da Imagem (opcional)",
    "Delete Reward Item": "Excluir Item de Recompensa",
    "No reward items defined yet.": "Nenhum item de recompensa definido ainda.",
    "Add Reward Item": "Adicionar Item de Recompensa",
    "New Reward": "Nova Recompensa",
    "Configure habit settings, including adding new habits, editing existing habits, and managing habit completion.": "Configure as definições de hábitos, incluindo adicionar novos hábitos, editar hábitos existentes e gerenciar a conclusão de hábitos.",
    "Enable habits": "Ativar hábitos",
    "Task sorting is disabled or no sort criteria are defined in settings.": "A ordenação de tarefas está desativada ou nenhum critério de ordenação está definido nas configurações.",
    "e.g. #tag1, #tag2, #tag3": "ex.: #tag1, #tag2, #tag3",
    "Overdue": "Atrasadas",
    "No tasks found for this tag.": "Nenhuma tarefa encontrada para esta tag.",
    "New custom view": "Nova visualização personalizada",
    "Create custom view": "Criar visualização personalizada",
    "Edit view: ": "Editar visualização: ",
    "Icon name": "Nome do ícone",
    "First day of week": "Primeiro dia da semana",
    "Overrides the locale default for forecast views.": "Substitui o padrão da localidade para visualizações de previsão.",
    "View type": "Tipo de visualização",
    "Standard view": "Visualização padrão",
    "Two column view": "Visualização em duas colunas",
    "Two column view settings": "Configurações da visualização em duas colunas",
    "Group by task property": "Agrupar por propriedade da tarefa",
    "Left column title": "Título da coluna esquerda",
    "Right column title": "Título da coluna direita",
    "Empty state text": "Texto de estado vazio",
    "Hide completed and abandoned tasks": "Ocultar tarefas concluídas e abandonadas",
    "Filter blanks": "Filtrar itens em branco",
    "Text contains": "Texto contém",
    "Tags include": "Tags incluem",
    "Tags exclude": "Tags excluem",
    "Project is": "Projeto é",
    "Priority is": "Prioridade é",
    "Status include": "Status inclui",
    "Status exclude": "Status exclui",
    "Due date is": "Data de vencimento é",
    "Start date is": "Data de início é",
    "Scheduled date is": "Data agendada é",
    "Path includes": "Caminho inclui",
    "Path excludes": "Caminho exclui",
    "Sort Criteria": "Critérios de Ordenação",
    "Define the order in which tasks should be sorted. Criteria are applied sequentially.": "Defina a ordem em que as tarefas devem ser ordenadas. Os critérios são aplicados sequencialmente.",
    "No sort criteria defined. Add criteria below.": "Nenhum critério de ordenação definido. Adicione critérios abaixo.",
    "Content": "Conteúdo",
    "Ascending": "Ascendente",
    "Descending": "Descendente",
    "Ascending: High -> Low -> None. Descending: None -> Low -> High": "Ascendente: Alta -> Baixa -> Nenhuma. Descendente: Nenhuma -> Baixa -> Alta",
    "Ascending: Earlier -> Later -> None. Descending: None -> Later -> Earlier": "Ascendente: Mais Cedo -> Mais Tarde -> Nenhuma. Descendente: Nenhuma -> Mais Tarde -> Mais Cedo",
    "Ascending respects status order (Overdue first). Descending reverses it.": "Ascendente respeita a ordem do status (Atrasadas primeiro). Descendente a inverte.",
    "Ascending: A-Z. Descending: Z-A": "Ascendente: A-Z. Descendente: Z-A",
    "Remove Criterion": "Remover Critério",
    "Add Sort Criterion": "Adicionar Critério de Ordenação",
    "Reset to Defaults": "Restaurar Padrões",
    "Has due date": "Possui data de vencimento",
    "Has date": "Possui data",
    "No date": "Sem data",
    "Any": "Qualquer",
    "Has start date": "Possui data de início",
    "Has scheduled date": "Possui data agendada",
    "Has created date": "Possui data de criação",
    "Has completed date": "Possui data de conclusão",
    "Only show tasks that match the completed date.": "Mostrar apenas tarefas que correspondem à data de conclusão.",
    "Has recurrence": "Possui recorrência",
    "Has property": "Possui propriedade",
    "No property": "Sem propriedade",
    "Unsaved Changes": "Alterações Não Salvas",
    "Sort Tasks in Section": "Ordenar Tarefas na Seção",
    "Tasks sorted (using settings). Change application needs refinement.": "Tarefas ordenadas (usando configurações). A aplicação da alteração precisa de refinamento.",
    "Sort Tasks in Entire Document": "Ordenar Tarefas no Documento Inteiro",
    "Entire document sorted (using settings).": "Documento inteiro ordenado (usando configurações).",
    "Tasks already sorted or no tasks found.": "Tarefas já ordenadas ou nenhuma tarefa encontrada.",
    "Task Handler": "Manipulador de Tarefas",
    "Show progress bars based on heading": "Mostrar barras de progresso com base no cabeçalho",
    "Toggle this to enable showing progress bars based on heading.": "Ative para habilitar a exibição de barras de progresso com base no cabeçalho.",
    "# heading": "# cabeçalho",
    "Task Sorting": "Ordenação de Tarefas",
    "Configure how tasks are sorted in the document.": "Configure como as tarefas são ordenadas no documento.",
    "Enable Task Sorting": "Ativar Ordenação de Tarefas",
    "Toggle this to enable commands for sorting tasks.": "Ative para habilitar comandos para ordenar tarefas.",
    "Use relative time for date": "Usar tempo relativo para data",
    "Use relative time for date in task list item, e.g. 'yesterday', 'today', 'tomorrow', 'in 2 days', '3 months ago', etc.": "Usar tempo relativo para data no item da lista de tarefas, ex.: 'ontem', 'hoje', 'amanhã', 'em 2 dias', 'há 3 meses', etc.",
    "Ignore all tasks behind heading": "Ignorar todas as tarefas após o cabeçalho",
    "Enter the heading to ignore, e.g. '## Project', '## Inbox', separated by comma": "Insira o cabeçalho a ser ignorado, ex.: '## Projeto', '## Caixa de Entrada', separado por vírgula",
    "Focus all tasks behind heading": "Focar todas as tarefas após o cabeçalho",
    "Enter the heading to focus, e.g. '## Project', '## Inbox', separated by comma": "Insira o cabeçalho para focar, ex.: '## Projeto', '## Caixa de Entrada', separado por vírgula",
    "Enable rewards": "Ativar recompensas",
    "Reward display type": "Tipo de exibição da recompensa",
    "Choose how rewards are displayed when earned.": "Escolha como as recompensas são exibidas ao serem ganhas.",
    "Modal dialog": "Caixa de diálogo modal",
    "Notice (Auto-accept)": "Aviso (Aceitar automaticamente)",
    "Occurrence levels": "Níveis de ocorrência",
    "Add occurrence level": "Adicionar nível de ocorrência",
    "Reward items": "Itens de recompensa",
    "Image url (optional)": "URL da imagem (opcional)",
    "Delete reward item": "Excluir item de recompensa",
    "Add reward item": "Adicionar item de recompensa",
    "moved on": "movida em",
    "Priority (High to Low)": "Prioridade (Alta para Baixa)",
    "Priority (Low to High)": "Prioridade (Baixa para Alta)",
    "Due Date (Earliest First)": "Data de Vencimento (Mais Cedo Primeiro)",
    "Due Date (Latest First)": "Data de Vencimento (Mais Tarde Primeiro)",
    "Scheduled Date (Earliest First)": "Data Agendada (Mais Cedo Primeiro)",
    "Scheduled Date (Latest First)": "Data Agendada (Mais Tarde Primeiro)",
    "Start Date (Earliest First)": "Data de Início (Mais Cedo Primeiro)",
    "Start Date (Latest First)": "Data de Início (Mais Tarde Primeiro)",
    "Created Date": "Data de Criação",
    "Overview": "Visão Geral",
    "Dates": "Datas",
    "e.g. #tag1, #tag2": "ex.: #tag1, #tag2",
    "e.g. @home, @work": "ex.: @casa, @trabalho",
    "Recurrence Rule": "Regra de Recorrência",
    "Edit Task": "Editar Tarefa",
    "Save Filter Configuration": "Salvar Configuração de Filtro",
    "Filter Configuration Name": "Nome da Configuração de Filtro",
    "Enter a name for this filter configuration": "Insira um nome para esta configuração de filtro",
    "Filter Configuration Description": "Descrição da Configuração de Filtro",
    "Enter a description for this filter configuration (optional)": "Insira uma descrição para esta configuração de filtro (opcional)",
    "Load Filter Configuration": "Carregar Configuração de Filtro",
    "No saved filter configurations": "Nenhuma configuração de filtro salva",
    "Select a saved filter configuration": "Selecione uma configuração de filtro salva",
    "Load": "Carregar",
    "Created": "Criado",
    "Updated": "Atualizado",
    "Filter Summary": "Resumo do Filtro",
    "filter group": "grupo de filtros",
    "filter": "filtro",
    "Root condition": "Condição raiz",
    "Filter configuration name is required": "O nome da configuração do filtro é obrigatório",
    "Failed to save filter configuration": "Falha ao salvar configuração do filtro",
    "Filter configuration saved successfully": "Configuração do filtro salva com sucesso",
    "Failed to load filter configuration": "Falha ao carregar configuração do filtro",
    "Filter configuration loaded successfully": "Configuração do filtro carregada com sucesso",
    "Failed to delete filter configuration": "Falha ao excluir configuração do filtro",
    "Delete Filter Configuration": "Excluir Configuração de Filtro",
    "Are you sure you want to delete this filter configuration?": "Tem certeza de que deseja excluir esta configuração de filtro?",
    "Filter configuration deleted successfully": "Configuração do filtro excluída com sucesso",
    "Match": "Corresponder a",
    "All": "Todos",
    "Add filter group": "Adicionar grupo de filtros",
    "Save Current Filter": "Salvar Filtro Atual",
    "Load Saved Filter": "Carregar Filtro Salvo",
    "filter in this group": "filtro neste grupo",
    "Duplicate filter group": "Duplicar grupo de filtros",
    "Remove filter group": "Remover grupo de filtros",
    "OR": "OU",
    "AND NOT": "E NÃO",
    "AND": "E",
    "Remove filter": "Remover filtro",
    "contains": "contém",
    "does not contain": "não contém",
    "is": "é",
    "is not": "não é",
    "starts with": "começa com",
    "ends with": "termina com",
    "is empty": "está vazio",
    "is not empty": "não está vazio",
    "is true": "é verdadeiro",
    "is false": "é falso",
    "is set": "está definido",
    "is not set": "não está definido",
    "equals": "é igual a",
    "NOR": "NEM",
    "Group by": "Agrupar por",
    "Select which task property to use for creating columns": "Selecione qual propriedade da tarefa usar para criar colunas",
    "Hide empty columns": "Ocultar colunas vazias",
    "Hide columns that have no tasks.": "Ocultar colunas que não têm tarefas.",
    "Default sort field": "Campo de ordenação padrão",
    "Default field to sort tasks by within each column.": "Campo padrão para ordenar tarefas dentro de cada coluna.",
    "Default sort order": "Ordem de ordenação padrão",
    "Default order to sort tasks within each column.": "Ordem padrão para ordenar tarefas dentro de cada coluna.",
    "Custom Columns": "Colunas Personalizadas",
    "Configure custom columns for the selected grouping property": "Configure colunas personalizadas para a propriedade de agrupamento selecionada",
    "No custom columns defined. Add columns below.": "Nenhuma coluna personalizada definida. Adicione colunas abaixo.",
    "Column Title": "Título da Coluna",
    "Value": "Valor",
    "Remove Column": "Remover Coluna",
    "Add Column": "Adicionar Coluna",
    "New Column": "Nova Coluna",
    "Reset Columns": "Redefinir Colunas",
    "Task must have this priority (e.g., 1, 2, 3). You can also use 'none' to filter out tasks without a priority.": "A tarefa deve ter esta prioridade (ex.: 1, 2, 3). Você também pode usar 'nenhuma' para filtrar tarefas sem prioridade.",
    "Move all incomplete subtasks to another file": "Mover todas as sub-tarefas incompletas para outro arquivo",
    "Move direct incomplete subtasks to another file": "Mover sub-tarefas incompletas diretas para outro arquivo",
    "Filter": "Filtro",
    "Reset Filter": "Redefinir Filtro",
    "Saved Filters": "Filtros Salvos",
    "Manage Saved Filters": "Gerenciar Filtros Salvos",
    "Filter applied: ": "Filtro aplicado: ",
    "Recurrence date calculation": "Cálculo da data de recorrência",
    "Choose how to calculate the next date for recurring tasks": "Escolha como calcular a próxima data para tarefas recorrentes",
    "Based on due date": "Com base na data de vencimento",
    "Based on scheduled date": "Com base na data agendada",
    "Based on current date": "Com base na data atual",
    "Task Gutter": "Margem da Tarefa",
    "Configure the task gutter.": "Configure a margem da tarefa.",
    "Enable task gutter": "Ativar margem da tarefa",
    "Toggle this to enable the task gutter.": "Ative para habilitar a margem da tarefa.",
    "Incomplete Task Mover": "Mover Tarefas Incompletas",
    "Enable incomplete task mover": "Ativar mover tarefas incompletas",
    "Toggle this to enable commands for moving incomplete tasks to another file.": "Ative para habilitar comandos para mover tarefas incompletas para outro arquivo.",
    "Incomplete task marker type": "Tipo de marcador de tarefa incompleta",
    "Choose what type of marker to add to moved incomplete tasks": "Escolha que tipo de marcador adicionar às tarefas incompletas movidas",
    "Incomplete version marker text": "Texto do marcador de versão incompleta",
    "Text to append to incomplete tasks when moved (e.g., 'version 1.0')": "Texto a ser anexado às tarefas incompletas quando movidas (ex.: 'versão 1.0')",
    "Incomplete date marker text": "Texto do marcador de data incompleta",
    "Text to append to incomplete tasks when moved (e.g., 'moved on 2023-12-31')": "Texto a ser anexado às tarefas incompletas quando movidas (ex.: 'movida em 2023-12-31')",
    "Incomplete custom marker text": "Texto do marcador personalizado incompleto",
    "With current file link for incomplete tasks": "Com link do arquivo atual para tarefas incompletas",
    "A link to the current file will be added to the parent task of the moved incomplete tasks.": "Um link para o arquivo atual será adicionado à tarefa pai das tarefas incompletas movidas.",
    "Line Number": "Número da Linha",
    "Clear Date": "Limpar Data",
    "Copy view": "Copiar visualização",
    "View copied successfully: ": "Visualização copiada com sucesso: ",
    "Copy of ": "Cópia de ",
    "Copy view: ": "Copiar visualização: ",
    "Creating a copy based on: ": "Criando uma cópia baseada em: ",
    "You can modify all settings below. The original view will remain unchanged.": "Você pode modificar todas as configurações abaixo. A visualização original permanecerá inalterada.",
    "Tasks Plugin Detected": "Plugin 'Tasks' Detectado",
    "Current status management and date management may conflict with the Tasks plugin. Please check the ": "O gerenciamento de status atual e o gerenciamento de datas podem entrar em conflito com o plugin Tasks. Por favor, verifique a ",
    "compatibility documentation": "documentação de compatibilidade",
    " for more information.": " para mais informações.",
    "Auto Date Manager": "Gerenciador Automático de Datas",
    "Automatically manage dates based on task status changes": "Gerenciar datas automaticamente com base nas alterações de status da tarefa",
    "Enable auto date manager": "Ativar gerenciador automático de datas",
    "Toggle this to enable automatic date management when task status changes. Dates will be added/removed based on your preferred metadata format (Tasks emoji format or Dataview format).": "Ative para habilitar o gerenciamento automático de datas quando o status da tarefa mudar. Datas serão adicionadas/removidas com base no seu formato de metadados preferido (formato emoji do Tasks ou formato Dataview).",
    "Manage completion dates": "Gerenciar datas de conclusão",
    "Automatically add completion dates when tasks are marked as completed, and remove them when changed to other statuses.": "Adicionar automaticamente datas de conclusão quando as tarefas são marcadas como concluídas e removê-las quando alteradas para outros status.",
    "Manage start dates": "Gerenciar datas de início",
    "Automatically add start dates when tasks are marked as in progress, and remove them when changed to other statuses.": "Adicionar automaticamente datas de início quando as tarefas são marcadas como em andamento e removê-las quando alteradas para outros status.",
    "Manage cancelled dates": "Gerenciar datas de cancelamento",
    "Automatically add cancelled dates when tasks are marked as abandoned, and remove them when changed to other statuses.": "Adicionar automaticamente datas de cancelamento quando as tarefas são marcadas como abandonadas e removê-las quando alteradas para outros status.",
    "Copy View": "Copiar Visualização",
    "Beta": "Beta",
    "Beta Test Features": "Recursos em Teste Beta",
    "Experimental features that are currently in testing phase. These features may be unstable and could change or be removed in future updates.": "Recursos experimentais que estão atualmente em fase de teste. Estes recursos podem ser instáveis e podem mudar ou ser removidos em atualizações futuras.",
    "Beta Features Warning": "Aviso sobre Recursos Beta",
    "These features are experimental and may be unstable. They could change significantly or be removed in future updates due to Obsidian API changes or other factors. Please use with caution and provide feedback to help improve these features.": "Estes recursos são experimentais e podem ser instáveis. Eles podem mudar significativamente ou ser removidos em atualizações futuras devido a alterações na API do Obsidian ou outros fatores. Use com cautela e forneça feedback para ajudar a melhorar esses recursos.",
    "Base View": "Visualização Base",
    "Advanced view management features that extend the default Task Genius views with additional functionality.": "Recursos avançados de gerenciamento de visualização que estendem as visualizações padrão do Task Genius com funcionalidades adicionais.",
    "Enable experimental Base View functionality. This feature provides enhanced view management capabilities but may be affected by future Obsidian API changes. You may need to restart Obsidian to see the changes.": "Ativar funcionalidade experimental de Visualização Base. Este recurso oferece capacidades aprimoradas de gerenciamento de visualização, mas pode ser afetado por futuras alterações na API do Obsidian. Pode ser necessário reiniciar o Obsidian para ver as alterações.",
    "You need to close all bases view if you already create task view in them and remove unused view via edit them manually when disable this feature.": "Você precisa fechar todas as visualizações base se já criou visualizações de tarefas nelas e remover visualizações não utilizadas editando-as manualmente ao desabilitar este recurso.",
    "Enable Base View": "Ativar Visualização Base",
    "Enable experimental Base View functionality. This feature provides enhanced view management capabilities but may be affected by future Obsidian API changes.": "Ativar funcionalidade experimental de Visualização Base. Este recurso oferece capacidades aprimoradas de gerenciamento de visualização, mas pode ser afetado por futuras alterações na API do Obsidian.",
    "Enable": "Ativar",
    "Beta Feedback": "Feedback Beta",
    "Help improve these features by providing feedback on your experience.": "Ajude a melhorar estes recursos fornecendo feedback sobre sua experiência.",
    "Report Issues": "Relatar Problemas",
    "If you encounter any issues with beta features, please report them to help improve the plugin.": "Se você encontrar quaisquer problemas com os recursos beta, por favor, relate-os para ajudar a melhorar o plugin.",
    "Report Issue": "Relatar Problema",
    "Table": "Tabela",
    "No Priority": "Sem Prioridade",
    "Click to select date": "Clique para selecionar data",
    "Enter tags separated by commas": "Insira tags separadas por vírgulas",
    "Enter project name": "Insira o nome do projeto",
    "Enter context": "Insira o contexto",
    "Invalid value": "Valor inválido",
    "No tasks": "Nenhuma tarefa",
    "1 task": "1 tarefa",
    "Columns": "Colunas",
    "Toggle column visibility": "Alternar visibilidade da coluna",
    "Switch to List Mode": "Alternar para Modo Lista",
    "Switch to Tree Mode": "Alternar para Modo Árvore",
    "Collapse": "Recolher",
    "Expand": "Expandir",
    "Collapse subtasks": "Recolher sub-tarefas",
    "Expand subtasks": "Expandir sub-tarefas",
    "Click to change status": "Clique para mudar status",
    "Click to set priority": "Clique para definir prioridade",
    "Yesterday": "Ontem",
    "Click to edit date": "Clique para editar data",
    "No tags": "Nenhuma tag",
    "Click to open file": "Clique para abrir arquivo",
    "No tasks found": "Nenhuma tarefa encontrada",
    "Completed Date": "Data de Conclusão",
    "Loading...": "Carregando...",
    "Advanced Filtering": "Filtragem Avançada",
    "Use advanced multi-group filtering with complex conditions": "Use filtragem avançada multi-grupo com condições complexas",
    "Auto-moved": "Auto-moved",
    "tasks to": "tasks to",
    "Failed to auto-move tasks:": "Failed to auto-move tasks:",
    "Workflow created successfully": "Workflow created successfully",
    "No task structure found at cursor position": "No task structure found at cursor position",
    "Use similar existing workflow": "Use similar existing workflow",
    "Create new workflow": "Create new workflow",
    "No workflows defined. Create a workflow first.": "No workflows defined. Create a workflow first.",
    "Workflow task created": "Workflow task created",
    "Task converted to workflow root": "Task converted to workflow root",
    "Failed to convert task": "Failed to convert task",
    "No workflows to duplicate": "No workflows to duplicate",
    "Duplicate": "Duplicate",
    "Workflow duplicated and saved": "Workflow duplicated and saved",
    "Workflow created from task structure": "Workflow created from task structure",
    "Create Quick Workflow": "Create Quick Workflow",
    "Convert Task to Workflow": "Convert Task to Workflow",
    "Convert to Workflow Root": "Convert to Workflow Root",
    "Start Workflow Here": "Start Workflow Here",
    "Duplicate Workflow": "Duplicate Workflow",
    "Simple Linear Workflow": "Simple Linear Workflow",
    "A basic linear workflow with sequential stages": "A basic linear workflow with sequential stages",
    "To Do": "To Do",
    "Done": "Done",
    "Project Management": "Project Management",
    "Coding": "Coding",
    "Research Process": "Research Process",
    "Academic or professional research workflow": "Academic or professional research workflow",
    "Literature Review": "Literature Review",
    "Data Collection": "Data Collection",
    "Analysis": "Analysis",
    "Writing": "Writing",
    "Published": "Published",
    "Custom Workflow": "Custom Workflow",
    "Create a custom workflow from scratch": "Create a custom workflow from scratch",
    "Quick Workflow Creation": "Quick Workflow Creation",
    "Workflow Template": "Workflow Template",
    "Choose a template to start with or create a custom workflow": "Choose a template to start with or create a custom workflow",
    "Workflow Name": "Workflow Name",
    "A descriptive name for your workflow": "A descriptive name for your workflow",
    "Enter workflow name": "Enter workflow name",
    "Unique identifier (auto-generated from name)": "Unique identifier (auto-generated from name)",
    "Optional description of the workflow purpose": "Optional description of the workflow purpose",
    "Describe your workflow...": "Describe your workflow...",
    "Preview of workflow stages (edit after creation for advanced options)": "Preview of workflow stages (edit after creation for advanced options)",
    "Add Stage": "Add Stage",
    "No stages defined. Choose a template or add stages manually.": "No stages defined. Choose a template or add stages manually.",
    "Remove stage": "Remove stage",
    "Create Workflow": "Create Workflow",
    "Please provide a workflow name and ID": "Please provide a workflow name and ID",
    "Please add at least one stage to the workflow": "Please add at least one stage to the workflow",
    "Discord": "Discord",
    "Chat with us": "Chat with us",
    "Open Discord": "Open Discord",
    "Task Genius icons are designed by": "Task Genius icons are designed by",
    "Task Genius Icons": "Task Genius Icons",
    "ICS Calendar Integration": "ICS Calendar Integration",
    "Configure external calendar sources to display events in your task views.": "Configure external calendar sources to display events in your task views.",
    "Add New Calendar Source": "Add New Calendar Source",
    "Global Settings": "Global Settings",
    "Enable Background Refresh": "Enable Background Refresh",
    "Automatically refresh calendar sources in the background": "Automatically refresh calendar sources in the background",
    "Global Refresh Interval": "Global Refresh Interval",
    "Default refresh interval for all sources (minutes)": "Default refresh interval for all sources (minutes)",
    "Maximum Cache Age": "Maximum Cache Age",
    "How long to keep cached data (hours)": "How long to keep cached data (hours)",
    "Network Timeout": "Network Timeout",
    "Request timeout in seconds": "Request timeout in seconds",
    "Max Events Per Source": "Max Events Per Source",
    "Maximum number of events to load from each source": "Maximum number of events to load from each source",
    "Default Event Color": "Default Event Color",
    "Default color for events without a specific color": "Default color for events without a specific color",
    "Calendar Sources": "Calendar Sources",
    "No calendar sources configured. Add a source to get started.": "No calendar sources configured. Add a source to get started.",
    "ICS Enabled": "ICS Enabled",
    "ICS Disabled": "ICS Disabled",
    "URL": "URL",
    "Refresh": "Refresh",
    "min": "min",
    "Color": "Color",
    "Edit this calendar source": "Edit this calendar source",
    "Sync": "Sync",
    "Sync this calendar source now": "Sync this calendar source now",
    "Syncing...": "Syncing...",
    "Sync completed successfully": "Sync completed successfully",
    "Sync failed: ": "Sync failed: ",
    "Disable": "Disable",
    "Disable this source": "Disable this source",
    "Enable this source": "Enable this source",
    "Delete this calendar source": "Delete this calendar source",
    "Are you sure you want to delete this calendar source?": "Are you sure you want to delete this calendar source?",
    "Edit ICS Source": "Edit ICS Source",
    "Add ICS Source": "Add ICS Source",
    "ICS Source Name": "ICS Source Name",
    "Display name for this calendar source": "Display name for this calendar source",
    "My Calendar": "My Calendar",
    "ICS URL": "ICS URL",
    "URL to the ICS/iCal file": "URL to the ICS/iCal file",
    "Whether this source is active": "Whether this source is active",
    "Refresh Interval": "Refresh Interval",
    "How often to refresh this source (minutes)": "How often to refresh this source (minutes)",
    "Color for events from this source (optional)": "Color for events from this source (optional)",
    "Show Type": "Show Type",
    "How to display events from this source in calendar views": "How to display events from this source in calendar views",
    "Event": "Event",
    "Badge": "Badge",
    "Show All-Day Events": "Show All-Day Events",
    "Include all-day events from this source": "Include all-day events from this source",
    "Show Timed Events": "Show Timed Events",
    "Include timed events from this source": "Include timed events from this source",
    "Authentication (Optional)": "Authentication (Optional)",
    "Authentication Type": "Authentication Type",
    "Type of authentication required": "Type of authentication required",
    "ICS Auth None": "ICS Auth None",
    "Basic Auth": "Basic Auth",
    "Bearer Token": "Bearer Token",
    "Custom Headers": "Custom Headers",
    "Text Replacements": "Text Replacements",
    "Configure rules to modify event text using regular expressions": "Configure rules to modify event text using regular expressions",
    "No text replacement rules configured": "No text replacement rules configured",
    "Enabled": "Enabled",
    "Disabled": "Disabled",
    "Target": "Target",
    "Pattern": "Pattern",
    "Replacement": "Replacement",
    "Are you sure you want to delete this text replacement rule?": "Are you sure you want to delete this text replacement rule?",
    "Add Text Replacement Rule": "Add Text Replacement Rule",
    "ICS Username": "ICS Username",
    "ICS Password": "ICS Password",
    "ICS Bearer Token": "ICS Bearer Token",
    "JSON object with custom headers": "JSON object with custom headers",
    "Holiday Configuration": "Holiday Configuration",
    "Configure how holiday events are detected and displayed": "Configure how holiday events are detected and displayed",
    "Enable Holiday Detection": "Enable Holiday Detection",
    "Automatically detect and group holiday events": "Automatically detect and group holiday events",
    "Status Mapping": "Status Mapping",
    "Configure how ICS events are mapped to task statuses": "Configure how ICS events are mapped to task statuses",
    "Enable Status Mapping": "Enable Status Mapping",
    "Automatically map ICS events to specific task statuses": "Automatically map ICS events to specific task statuses",
    "Grouping Strategy": "Grouping Strategy",
    "How to handle consecutive holiday events": "How to handle consecutive holiday events",
    "Show All Events": "Show All Events",
    "Show First Day Only": "Show First Day Only",
    "Show Summary": "Show Summary",
    "Show First and Last": "Show First and Last",
    "Maximum Gap Days": "Maximum Gap Days",
    "Maximum days between events to consider them consecutive": "Maximum days between events to consider them consecutive",
    "Show in Forecast": "Show in Forecast",
    "Whether to show holiday events in forecast view": "Whether to show holiday events in forecast view",
    "Show in Calendar": "Show in Calendar",
    "Whether to show holiday events in calendar view": "Whether to show holiday events in calendar view",
    "Detection Patterns": "Detection Patterns",
    "Summary Patterns": "Summary Patterns",
    "Regex patterns to match in event titles (one per line)": "Regex patterns to match in event titles (one per line)",
    "Keywords": "Keywords",
    "Keywords to detect in event text (one per line)": "Keywords to detect in event text (one per line)",
    "Categories": "Categories",
    "Event categories that indicate holidays (one per line)": "Event categories that indicate holidays (one per line)",
    "Group Display Format": "Group Display Format",
    "Format for grouped holiday display. Use {title}, {count}, {startDate}, {endDate}": "Format for grouped holiday display. Use {title}, {count}, {startDate}, {endDate}",
    "Override ICS Status": "Override ICS Status",
    "Override original ICS event status with mapped status": "Override original ICS event status with mapped status",
    "Timing Rules": "Timing Rules",
    "Past Events Status": "Past Events Status",
    "Status for events that have already ended": "Status for events that have already ended",
    "Status Incomplete": "Status Incomplete",
    "Status Complete": "Status Complete",
    "Status Cancelled": "Status Cancelled",
    "Status In Progress": "Status In Progress",
    "Status Question": "Status Question",
    "Current Events Status": "Current Events Status",
    "Status for events happening today": "Status for events happening today",
    "Future Events Status": "Future Events Status",
    "Status for events in the future": "Status for events in the future",
    "Property Rules": "Property Rules",
    "Optional rules based on event properties (higher priority than timing rules)": "Optional rules based on event properties (higher priority than timing rules)",
    "Holiday Status": "Holiday Status",
    "Status for events detected as holidays": "Status for events detected as holidays",
    "Use timing rules": "Use timing rules",
    "Category Mapping": "Category Mapping",
    "Map specific categories to statuses (format: category:status, one per line)": "Map specific categories to statuses (format: category:status, one per line)",
    "Please enter a name for the source": "Please enter a name for the source",
    "Please enter a URL for the source": "Please enter a URL for the source",
    "Please enter a valid URL": "Please enter a valid URL",
    "Edit Text Replacement Rule": "Edit Text Replacement Rule",
    "Rule Name": "Rule Name",
    "Descriptive name for this replacement rule": "Descriptive name for this replacement rule",
    "Remove Meeting Prefix": "Remove Meeting Prefix",
    "Whether this rule is active": "Whether this rule is active",
    "Target Field": "Target Field",
    "Which field to apply the replacement to": "Which field to apply the replacement to",
    "Summary/Title": "Summary/Title",
    "Location": "Location",
    "All Fields": "All Fields",
    "Pattern (Regular Expression)": "Pattern (Regular Expression)",
    "Regular expression pattern to match. Use parentheses for capture groups.": "Regular expression pattern to match. Use parentheses for capture groups.",
    "Text to replace matches with. Use $1, $2, etc. for capture groups.": "Text to replace matches with. Use $1, $2, etc. for capture groups.",
    "Regex Flags": "Regex Flags",
    "Regular expression flags (e.g., 'g' for global, 'i' for case-insensitive)": "Regular expression flags (e.g., 'g' for global, 'i' for case-insensitive)",
    "Examples": "Examples",
    "Remove prefix": "Remove prefix",
    "Replace room numbers": "Replace room numbers",
    "Swap words": "Swap words",
    "Test Rule": "Test Rule",
    "Output: ": "Output: ",
    "Test Input": "Test Input",
    "Enter text to test the replacement rule": "Enter text to test the replacement rule",
    "Please enter a name for the rule": "Please enter a name for the rule",
    "Please enter a pattern": "Please enter a pattern",
    "Invalid regular expression pattern": "Invalid regular expression pattern",
    "Reset progress ranges to default values": "Reset progress ranges to default values",
    "Enhanced Project Configuration": "Enhanced Project Configuration",
    "Configure advanced project detection and management features": "Configure advanced project detection and management features",
    "Enable enhanced project features": "Enable enhanced project features",
    "Enable path-based, metadata-based, and config file-based project detection": "Enable path-based, metadata-based, and config file-based project detection",
    "Path-based Project Mappings": "Path-based Project Mappings",
    "Configure project names based on file paths": "Configure project names based on file paths",
    "No path mappings configured yet.": "No path mappings configured yet.",
    "Mapping": "Mapping",
    "Path pattern (e.g., Projects/Work)": "Path pattern (e.g., Projects/Work)",
    "Add Path Mapping": "Add Path Mapping",
    "Metadata-based Project Configuration": "Metadata-based Project Configuration",
    "Configure project detection from file frontmatter": "Configure project detection from file frontmatter",
    "Enable metadata project detection": "Enable metadata project detection",
    "Detect project from file frontmatter metadata": "Detect project from file frontmatter metadata",
    "Metadata key": "Metadata key",
    "The frontmatter key to use for project name": "The frontmatter key to use for project name",
    "Inherit other metadata fields from file frontmatter": "Inherit other metadata fields from file frontmatter",
    "Allow subtasks to inherit metadata from file frontmatter. When disabled, only top-level tasks inherit file metadata.": "Allow subtasks to inherit metadata from file frontmatter. When disabled, only top-level tasks inherit file metadata.",
    "Project Configuration File": "Project Configuration File",
    "Configure project detection from project config files": "Configure project detection from project config files",
    "Enable config file project detection": "Enable config file project detection",
    "Detect project from project configuration files": "Detect project from project configuration files",
    "Config file name": "Config file name",
    "Name of the project configuration file": "Name of the project configuration file",
    "Search recursively": "Search recursively",
    "Search for config files in parent directories": "Search for config files in parent directories",
    "Metadata Mappings": "Metadata Mappings",
    "Configure how metadata fields are mapped and transformed": "Configure how metadata fields are mapped and transformed",
    "No metadata mappings configured yet.": "No metadata mappings configured yet.",
    "Source key (e.g., proj)": "Source key (e.g., proj)",
    "Select target field": "Select target field",
    "Add Metadata Mapping": "Add Metadata Mapping",
    "Default Project Naming": "Default Project Naming",
    "Configure fallback project naming when no explicit project is found": "Configure fallback project naming when no explicit project is found",
    "Enable default project naming": "Enable default project naming",
    "Use default naming strategy when no project is explicitly defined": "Use default naming strategy when no project is explicitly defined",
    "Naming strategy": "Naming strategy",
    "Strategy for generating default project names": "Strategy for generating default project names",
    "Use filename": "Use filename",
    "Use folder name": "Use folder name",
    "Use metadata field": "Use metadata field",
    "Metadata field to use as project name": "Metadata field to use as project name",
    "Enter metadata key (e.g., project-name)": "Enter metadata key (e.g., project-name)",
    "Strip file extension": "Strip file extension",
    "Remove file extension from filename when using as project name": "Remove file extension from filename when using as project name",
    "Target type": "Target type",
    "Choose whether to capture to a fixed file or daily note": "Choose whether to capture to a fixed file or daily note",
    "Fixed file": "Fixed file",
    "Daily note": "Daily note",
    "The file where captured text will be saved. You can include a path, e.g., 'folder/Quick Capture.md'. Supports date templates like {{DATE:YYYY-MM-DD}} or {{date:YYYY-MM-DD-HHmm}}": "The file where captured text will be saved. You can include a path, e.g., 'folder/Quick Capture.md'. Supports date templates like {{DATE:YYYY-MM-DD}} or {{date:YYYY-MM-DD-HHmm}}",
    "Sync with Daily Notes plugin": "Sync with Daily Notes plugin",
    "Automatically sync settings from the Daily Notes plugin": "Automatically sync settings from the Daily Notes plugin",
    "Sync now": "Sync now",
    "Daily notes settings synced successfully": "Daily notes settings synced successfully",
    "Daily Notes plugin is not enabled": "Daily Notes plugin is not enabled",
    "Failed to sync daily notes settings": "Failed to sync daily notes settings",
    "Date format for daily notes (e.g., YYYY-MM-DD)": "Date format for daily notes (e.g., YYYY-MM-DD)",
    "Daily note folder": "Daily note folder",
    "Folder path for daily notes (leave empty for root)": "Folder path for daily notes (leave empty for root)",
    "Daily note template": "Daily note template",
    "Template file path for new daily notes (optional)": "Template file path for new daily notes (optional)",
    "Target heading": "Target heading",
    "Optional heading to append content under (leave empty to append to file)": "Optional heading to append content under (leave empty to append to file)",
    "How to add captured content to the target location": "How to add captured content to the target location",
    "Append": "Append",
    "Prepend": "Prepend",
    "Replace": "Replace",
    "Enable auto-move for completed tasks": "Enable auto-move for completed tasks",
    "Automatically move completed tasks to a default file without manual selection.": "Automatically move completed tasks to a default file without manual selection.",
    "Default target file": "Default target file",
    "Default file to move completed tasks to (e.g., 'Archive.md')": "Default file to move completed tasks to (e.g., 'Archive.md')",
    "Default insertion mode": "Default insertion mode",
    "Where to insert completed tasks in the target file": "Where to insert completed tasks in the target file",
    "Default heading name": "Default heading name",
    "Heading name to insert tasks after (will be created if it doesn't exist)": "Heading name to insert tasks after (will be created if it doesn't exist)",
    "Enable auto-move for incomplete tasks": "Enable auto-move for incomplete tasks",
    "Automatically move incomplete tasks to a default file without manual selection.": "Automatically move incomplete tasks to a default file without manual selection.",
    "Default target file for incomplete tasks": "Default target file for incomplete tasks",
    "Default file to move incomplete tasks to (e.g., 'Backlog.md')": "Default file to move incomplete tasks to (e.g., 'Backlog.md')",
    "Default insertion mode for incomplete tasks": "Default insertion mode for incomplete tasks",
    "Where to insert incomplete tasks in the target file": "Where to insert incomplete tasks in the target file",
    "Default heading name for incomplete tasks": "Default heading name for incomplete tasks",
    "Heading name to insert incomplete tasks after (will be created if it doesn't exist)": "Heading name to insert incomplete tasks after (will be created if it doesn't exist)",
    "Other settings": "Other settings",
    "Use Task Genius icons": "Use Task Genius icons",
    "Use Task Genius icons for task statuses": "Use Task Genius icons for task statuses",
    "Timeline Sidebar": "Timeline Sidebar",
    "Enable Timeline Sidebar": "Enable Timeline Sidebar",
    "Toggle this to enable the timeline sidebar view for quick access to your daily events and tasks.": "Toggle this to enable the timeline sidebar view for quick access to your daily events and tasks.",
    "Auto-open on startup": "Auto-open on startup",
    "Automatically open the timeline sidebar when Obsidian starts.": "Automatically open the timeline sidebar when Obsidian starts.",
    "Show completed tasks": "Show completed tasks",
    "Include completed tasks in the timeline view. When disabled, only incomplete tasks will be shown.": "Include completed tasks in the timeline view. When disabled, only incomplete tasks will be shown.",
    "Focus mode by default": "Focus mode by default",
    "Enable focus mode by default, which highlights today's events and dims past/future events.": "Enable focus mode by default, which highlights today's events and dims past/future events.",
    "Maximum events to show": "Maximum events to show",
    "Maximum number of events to display in the timeline. Higher numbers may affect performance.": "Maximum number of events to display in the timeline. Higher numbers may affect performance.",
    "Open Timeline Sidebar": "Open Timeline Sidebar",
    "Click to open the timeline sidebar view.": "Click to open the timeline sidebar view.",
    "Open Timeline": "Open Timeline",
    "Timeline sidebar opened": "Timeline sidebar opened",
    "Task Parser Configuration": "Task Parser Configuration",
    "Configure how task metadata is parsed and recognized.": "Configure how task metadata is parsed and recognized.",
    "Project tag prefix": "Project tag prefix",
    "Customize the prefix used for project tags in dataview format (e.g., 'project' for [project:: myproject]). Changes require reindexing.": "Customize the prefix used for project tags in dataview format (e.g., 'project' for [project:: myproject]). Changes require reindexing.",
    "Customize the prefix used for project tags (e.g., 'project' for #project/myproject). Changes require reindexing.": "Customize the prefix used for project tags (e.g., 'project' for #project/myproject). Changes require reindexing.",
    "Context tag prefix": "Context tag prefix",
    "Customize the prefix used for context tags in dataview format (e.g., 'context' for [context:: home]). Changes require reindexing.": "Customize the prefix used for context tags in dataview format (e.g., 'context' for [context:: home]). Changes require reindexing.",
    "Customize the prefix used for context tags (e.g., '@home' for @home). Changes require reindexing.": "Customize the prefix used for context tags (e.g., '@home' for @home). Changes require reindexing.",
    "Area tag prefix": "Area tag prefix",
    "Customize the prefix used for area tags in dataview format (e.g., 'area' for [area:: work]). Changes require reindexing.": "Customize the prefix used for area tags in dataview format (e.g., 'area' for [area:: work]). Changes require reindexing.",
    "Customize the prefix used for area tags (e.g., 'area' for #area/work). Changes require reindexing.": "Customize the prefix used for area tags (e.g., 'area' for #area/work). Changes require reindexing.",
    "Format Examples:": "Format Examples:",
    "Area": "Area",
    "always uses @ prefix": "always uses @ prefix",
    "File Parsing Configuration": "File Parsing Configuration",
    "Configure how to extract tasks from file metadata and tags.": "Configure how to extract tasks from file metadata and tags.",
    "Enable file metadata parsing": "Enable file metadata parsing",
    "Parse tasks from file frontmatter metadata fields. When enabled, files with specific metadata fields will be treated as tasks.": "Parse tasks from file frontmatter metadata fields. When enabled, files with specific metadata fields will be treated as tasks.",
    "File metadata parsing enabled. Rebuilding task index...": "File metadata parsing enabled. Rebuilding task index...",
    "Task index rebuilt successfully": "Task index rebuilt successfully",
    "Failed to rebuild task index": "Failed to rebuild task index",
    "Metadata fields to parse as tasks": "Metadata fields to parse as tasks",
    "Comma-separated list of metadata fields that should be treated as tasks (e.g., dueDate, todo, complete, task)": "Comma-separated list of metadata fields that should be treated as tasks (e.g., dueDate, todo, complete, task)",
    "Task content from metadata": "Task content from metadata",
    "Which metadata field to use as task content. If not found, will use filename.": "Which metadata field to use as task content. If not found, will use filename.",
    "Default task status": "Default task status",
    "Default status for tasks created from metadata (space for incomplete, x for complete)": "Default status for tasks created from metadata (space for incomplete, x for complete)",
    "Enable tag-based task parsing": "Enable tag-based task parsing",
    "Parse tasks from file tags. When enabled, files with specific tags will be treated as tasks.": "Parse tasks from file tags. When enabled, files with specific tags will be treated as tasks.",
    "Tags to parse as tasks": "Tags to parse as tasks",
    "Comma-separated list of tags that should be treated as tasks (e.g., #todo, #task, #action, #due)": "Comma-separated list of tags that should be treated as tasks (e.g., #todo, #task, #action, #due)",
    "Enable worker processing": "Enable worker processing",
    "Use background worker for file parsing to improve performance. Recommended for large vaults.": "Use background worker for file parsing to improve performance. Recommended for large vaults.",
    "Enable inline editor": "Enable inline editor",
    "Enable inline editing of task content and metadata directly in task views. When disabled, tasks can only be edited in the source file.": "Enable inline editing of task content and metadata directly in task views. When disabled, tasks can only be edited in the source file.",
    "Auto-assigned from path": "Auto-assigned from path",
    "Auto-assigned from file metadata": "Auto-assigned from file metadata",
    "Auto-assigned from config file": "Auto-assigned from config file",
    "Auto-assigned": "Auto-assigned",
    "e.g. every day, every week": "e.g. every day, every week",
    "This project is automatically assigned and cannot be changed": "This project is automatically assigned and cannot be changed",
    "You can override the auto-assigned project by entering a different value": "You can override the auto-assigned project by entering a different value",
    "Auto from path": "Auto from path",
    "Auto from metadata": "Auto from metadata",
    "Auto from config": "Auto from config",
    "You can override the auto-assigned project": "You can override the auto-assigned project",
    "Timeline": "Timeline",
    "Go to today": "Go to today",
    "Focus on today": "Focus on today",
    "What do you want to do today?": "What do you want to do today?",
    "More options": "More options",
    "No events to display": "No events to display",
    "Go to task": "Go to task",
    "to": "to",
    "Hide weekends": "Hide weekends",
    "Hide weekend columns (Saturday and Sunday) in calendar views.": "Hide weekend columns (Saturday and Sunday) in calendar views.",
    "Hide weekend columns (Saturday and Sunday) in forecast calendar.": "Hide weekend columns (Saturday and Sunday) in forecast calendar.",
    "Repeatable": "Repeatable",
    "Final": "Final",
    "Sequential": "Sequential",
    "Current: ": "Current: ",
    "completed": "completed",
    "Convert to workflow template": "Convert to workflow template",
    "Start workflow here": "Start workflow here",
    "Create quick workflow": "Create quick workflow",
    "Workflow not found": "Workflow not found",
    "Stage not found": "Stage not found",
    "Current stage": "Current stage",
    "Type": "Type",
    "Next": "Next",
    "Start workflow": "Start workflow",
    "Continue": "Continue",
    "Complete substage and move to": "Complete substage and move to",
    "Add new task": "Add new task",
    "Add new sub-task": "Add new sub-task",
    "Auto-move completed subtasks to default file": "Auto-move completed subtasks to default file",
    "Auto-move direct completed subtasks to default file": "Auto-move direct completed subtasks to default file",
    "Auto-move all subtasks to default file": "Auto-move all subtasks to default file",
    "Auto-move incomplete subtasks to default file": "Auto-move incomplete subtasks to default file",
    "Auto-move direct incomplete subtasks to default file": "Auto-move direct incomplete subtasks to default file",
    "Convert task to workflow template": "Convert task to workflow template",
    "Convert current task to workflow root": "Convert current task to workflow root",
    "Duplicate workflow": "Duplicate workflow",
    "Workflow quick actions": "Workflow quick actions",
    "Views & Index": "Views & Index",
    "Progress Display": "Progress Display",
    "Workflows": "Workflows",
    "Dates & Priority": "Dates & Priority",
    "Habits": "Habits",
    "Calendar Sync": "Calendar Sync",
    "Beta Features": "Beta Features",
    "Core Settings": "Core Settings",
    "Display & Progress": "Display & Progress",
    "Task Management": "Task Management",
    "Workflow & Automation": "Workflow & Automation",
    "Gamification": "Gamification",
    "Integration": "Integration",
    "Advanced": "Advanced",
    "Information": "Information",
    "Workflow generated from task structure": "Workflow generated from task structure",
    "Workflow based on existing pattern": "Workflow based on existing pattern",
    "Matrix": "Matrix",
    "More actions": "More actions",
    "Open in file": "Open in file",
    "Copy task": "Copy task",
    "Mark as urgent": "Mark as urgent",
    "Mark as important": "Mark as important",
    "Overdue by {days} days": "Overdue by {days} days",
    "Due today": "Due today",
    "Due tomorrow": "Due tomorrow",
    "Due in {days} days": "Due in {days} days",
    "Loading tasks...": "Loading tasks...",
    "task": "task",
    "No crisis tasks - great job!": "No crisis tasks - great job!",
    "No planning tasks - consider adding some goals": "No planning tasks - consider adding some goals",
    "No interruptions - focus time!": "No interruptions - focus time!",
    "No time wasters - excellent focus!": "No time wasters - excellent focus!",
    "No tasks in this quadrant": "No tasks in this quadrant",
    "Handle immediately. These are critical tasks that need your attention now.": "Handle immediately. These are critical tasks that need your attention now.",
    "Schedule and plan. These tasks are key to your long-term success.": "Schedule and plan. These tasks are key to your long-term success.",
    "Delegate if possible. These tasks are urgent but don't require your specific skills.": "Delegate if possible. These tasks are urgent but don't require your specific skills.",
    "Eliminate or minimize. These tasks may be time wasters.": "Eliminate or minimize. These tasks may be time wasters.",
    "Review and categorize these tasks appropriately.": "Review and categorize these tasks appropriately.",
    "Urgent & Important": "Urgent & Important",
    "Do First - Crisis & emergencies": "Do First - Crisis & emergencies",
    "Not Urgent & Important": "Not Urgent & Important",
    "Schedule - Planning & development": "Schedule - Planning & development",
    "Urgent & Not Important": "Urgent & Not Important",
    "Delegate - Interruptions & distractions": "Delegate - Interruptions & distractions",
    "Not Urgent & Not Important": "Not Urgent & Not Important",
    "Eliminate - Time wasters": "Eliminate - Time wasters",
    "Task Priority Matrix": "Task Priority Matrix",
    "Created Date (Newest First)": "Created Date (Newest First)",
    "Created Date (Oldest First)": "Created Date (Oldest First)",
    "Toggle empty columns": "Toggle empty columns",
    "Failed to update task": "Failed to update task",
    "Remove urgent tag": "Remove urgent tag",
    "Remove important tag": "Remove important tag",
    "Loading more tasks...": "Loading more tasks...",
    "Action Type": "Action Type",
    "Select action type...": "Select action type...",
    "Delete task": "Delete task",
    "Keep task": "Keep task",
    "Complete related tasks": "Complete related tasks",
    "Move task": "Move task",
    "Archive task": "Archive task",
    "Duplicate task": "Duplicate task",
    "Task IDs": "Task IDs",
    "Enter task IDs separated by commas": "Enter task IDs separated by commas",
    "Comma-separated list of task IDs to complete when this task is completed": "Comma-separated list of task IDs to complete when this task is completed",
    "Target File": "Target File",
    "Path to target file": "Path to target file",
    "Target Section (Optional)": "Target Section (Optional)",
    "Section name in target file": "Section name in target file",
    "Archive File (Optional)": "Archive File (Optional)",
    "Default: Archive/Completed Tasks.md": "Default: Archive/Completed Tasks.md",
    "Archive Section (Optional)": "Archive Section (Optional)",
    "Default: Completed Tasks": "Default: Completed Tasks",
    "Target File (Optional)": "Target File (Optional)",
    "Default: same file": "Default: same file",
    "Preserve Metadata": "Preserve Metadata",
    "Keep completion dates and other metadata in the duplicated task": "Keep completion dates and other metadata in the duplicated task",
    "Overdue by": "Overdue by",
    "days": "days",
    "Due in": "Due in",
    "File Filter": "File Filter",
    "Enable File Filter": "Enable File Filter",
    "Toggle this to enable file and folder filtering during task indexing. This can significantly improve performance for large vaults.": "Toggle this to enable file and folder filtering during task indexing. This can significantly improve performance for large vaults.",
    "File Filter Mode": "File Filter Mode",
    "Choose whether to include only specified files/folders (whitelist) or exclude them (blacklist)": "Choose whether to include only specified files/folders (whitelist) or exclude them (blacklist)",
    "Whitelist (Include only)": "Whitelist (Include only)",
    "Blacklist (Exclude)": "Blacklist (Exclude)",
    "File Filter Rules": "File Filter Rules",
    "Configure which files and folders to include or exclude from task indexing": "Configure which files and folders to include or exclude from task indexing",
    "Type:": "Type:",
    "Folder": "Folder",
    "Path:": "Path:",
    "Enabled:": "Enabled:",
    "Delete rule": "Delete rule",
    "Add Filter Rule": "Add Filter Rule",
    "Add File Rule": "Add File Rule",
    "Add Folder Rule": "Add Folder Rule",
    "Add Pattern Rule": "Add Pattern Rule",
    "Refresh Statistics": "Refresh Statistics",
    "Manually refresh filter statistics to see current data": "Manually refresh filter statistics to see current data",
    "Refreshing...": "Refreshing...",
    "Active Rules": "Active Rules",
    "Cache Size": "Cache Size",
    "No filter data available": "No filter data available",
    "Error loading statistics": "Error loading statistics",
    "On Completion": "On Completion",
    "Enable OnCompletion": "Enable OnCompletion",
    "Enable automatic actions when tasks are completed": "Enable automatic actions when tasks are completed",
    "Default Archive File": "Default Archive File",
    "Default file for archive action": "Default file for archive action",
    "Default Archive Section": "Default Archive Section",
    "Default section for archive action": "Default section for archive action",
    "Show Advanced Options": "Show Advanced Options",
    "Show advanced configuration options in task editors": "Show advanced configuration options in task editors",
    "Configure checkbox status settings": "Configure checkbox status settings",
    "Auto complete parent checkbox": "Auto complete parent checkbox",
    "Toggle this to allow this plugin to auto complete parent checkbox when all child tasks are completed.": "Toggle this to allow this plugin to auto complete parent checkbox when all child tasks are completed.",
    "When some but not all child tasks are completed, mark the parent checkbox as 'In Progress'. Only works when 'Auto complete parent' is enabled.": "When some but not all child tasks are completed, mark the parent checkbox as 'In Progress'. Only works when 'Auto complete parent' is enabled.",
    "Select a predefined checkbox status collection or customize your own": "Select a predefined checkbox status collection or customize your own",
    "Checkbox Switcher": "Checkbox Switcher",
    "Enable checkbox status switcher": "Enable checkbox status switcher",
    "Replace default checkboxes with styled text marks that follow your checkbox status cycle when clicked.": "Replace default checkboxes with styled text marks that follow your checkbox status cycle when clicked.",
    "Make the text mark in source mode follow the checkbox status cycle when clicked.": "Make the text mark in source mode follow the checkbox status cycle when clicked.",
    "Automatically manage dates based on checkbox status changes": "Automatically manage dates based on checkbox status changes",
    "Toggle this to enable automatic date management when checkbox status changes. Dates will be added/removed based on your preferred metadata format (Tasks emoji format or Dataview format).": "Toggle this to enable automatic date management when checkbox status changes. Dates will be added/removed based on your preferred metadata format (Tasks emoji format or Dataview format).",
    "Default view mode": "Default view mode",
    "Choose the default display mode for all views. This affects how tasks are displayed when you first open a view or create a new view.": "Choose the default display mode for all views. This affects how tasks are displayed when you first open a view or create a new view.",
    "List View": "List View",
    "Tree View": "Tree View",
    "Global Filter Configuration": "Global Filter Configuration",
    "Configure global filter rules that apply to all Views by default. Individual Views can override these settings.": "Configure global filter rules that apply to all Views by default. Individual Views can override these settings.",
    "Cancelled Date": "Cancelled Date",
    "Configuration is valid": "Configuration is valid",
    "Action to execute on completion": "Action to execute on completion",
    "Depends On": "Depends On",
    "Task IDs separated by commas": "Task IDs separated by commas",
    "Task ID": "Task ID",
    "Unique task identifier": "Unique task identifier",
    "Action to execute when task is completed": "Action to execute when task is completed",
    "Comma-separated list of task IDs this task depends on": "Comma-separated list of task IDs this task depends on",
    "Unique identifier for this task": "Unique identifier for this task",
    "Quadrant Classification Method": "Quadrant Classification Method",
    "Choose how to classify tasks into quadrants": "Choose how to classify tasks into quadrants",
    "Urgent Priority Threshold": "Urgent Priority Threshold",
    "Tasks with priority >= this value are considered urgent (1-5)": "Tasks with priority >= this value are considered urgent (1-5)",
    "Important Priority Threshold": "Important Priority Threshold",
    "Tasks with priority >= this value are considered important (1-5)": "Tasks with priority >= this value are considered important (1-5)",
    "Urgent Tag": "Urgent Tag",
    "Tag to identify urgent tasks (e.g., #urgent, #fire)": "Tag to identify urgent tasks (e.g., #urgent, #fire)",
    "Important Tag": "Important Tag",
    "Tag to identify important tasks (e.g., #important, #key)": "Tag to identify important tasks (e.g., #important, #key)",
    "Urgent Threshold Days": "Urgent Threshold Days",
    "Tasks due within this many days are considered urgent": "Tasks due within this many days are considered urgent",
    "Auto Update Priority": "Auto Update Priority",
    "Automatically update task priority when moved between quadrants": "Automatically update task priority when moved between quadrants",
    "Auto Update Tags": "Auto Update Tags",
    "Automatically add/remove urgent/important tags when moved between quadrants": "Automatically add/remove urgent/important tags when moved between quadrants",
    "Hide Empty Quadrants": "Hide Empty Quadrants",
    "Hide quadrants that have no tasks": "Hide quadrants that have no tasks",
    "Configure On Completion Action": "Configure On Completion Action",
    "URL to the ICS/iCal file (supports http://, https://, and webcal:// protocols)": "URL to the ICS/iCal file (supports http://, https://, and webcal:// protocols)",
    "Task mark display style": "Task mark display style",
    "Choose how task marks are displayed: default checkboxes, custom text marks, or Task Genius icons.": "Choose how task marks are displayed: default checkboxes, custom text marks, or Task Genius icons.",
    "Default checkboxes": "Default checkboxes",
    "Custom text marks": "Custom text marks",
    "Task Genius icons": "Task Genius icons",
    "Time Parsing Settings": "Time Parsing Settings",
    "Enable Time Parsing": "Enable Time Parsing",
    "Automatically parse natural language time expressions in Quick Capture": "Automatically parse natural language time expressions in Quick Capture",
    "Remove Original Time Expressions": "Remove Original Time Expressions",
    "Remove parsed time expressions from the task text": "Remove parsed time expressions from the task text",
    "Supported Languages": "Supported Languages",
    "Currently supports English and Chinese time expressions. More languages may be added in future updates.": "Currently supports English and Chinese time expressions. More languages may be added in future updates.",
    "Date Keywords Configuration": "Date Keywords Configuration",
    "Start Date Keywords": "Start Date Keywords",
    "Keywords that indicate start dates (comma-separated)": "Keywords that indicate start dates (comma-separated)",
    "Due Date Keywords": "Due Date Keywords",
    "Keywords that indicate due dates (comma-separated)": "Keywords that indicate due dates (comma-separated)",
    "Scheduled Date Keywords": "Scheduled Date Keywords",
    "Keywords that indicate scheduled dates (comma-separated)": "Keywords that indicate scheduled dates (comma-separated)",
    "Configure...": "Configure...",
    "Collapse quick input": "Collapse quick input",
    "Expand quick input": "Expand quick input",
    "Set Priority": "Set Priority",
    "Clear Flags": "Clear Flags",
    "Filter by Priority": "Filter by Priority",
    "New Project": "New Project",
    "Archive Completed": "Archive Completed",
    "Project Statistics": "Project Statistics",
    "Manage Tags": "Manage Tags",
    "Time Parsing": "Time Parsing",
    "Minimal Quick Capture": "Minimal Quick Capture",
    "Enter your task...": "Enter your task...",
    "Set date": "Set date",
    "Set location": "Set location",
    "Add tags": "Add tags",
    "Day after tomorrow": "Day after tomorrow",
    "Next week": "Next week",
    "Next month": "Next month",
    "Choose date...": "Choose date...",
    "Fixed location": "Fixed location",
    "Date": "Date",
    "Add date (triggers ~)": "Add date (triggers ~)",
    "Set priority (triggers !)": "Set priority (triggers !)",
    "Target Location": "Target Location",
    "Set target location (triggers *)": "Set target location (triggers *)",
    "Add tags (triggers #)": "Add tags (triggers #)",
    "Minimal Mode": "Minimal Mode",
    "Enable minimal mode": "Enable minimal mode",
    "Enable simplified single-line quick capture with inline suggestions": "Enable simplified single-line quick capture with inline suggestions",
    "Suggest trigger character": "Suggest trigger character",
    "Character to trigger the suggestion menu": "Character to trigger the suggestion menu",
    "Highest Priority": "Highest Priority",
    "🔺 Highest priority task": "🔺 Highest priority task",
    "Highest priority set": "Highest priority set",
    "⏫ High priority task": "⏫ High priority task",
    "High priority set": "High priority set",
    "🔼 Medium priority task": "🔼 Medium priority task",
    "Medium priority set": "Medium priority set",
    "🔽 Low priority task": "🔽 Low priority task",
    "Low priority set": "Low priority set",
    "Lowest Priority": "Lowest Priority",
    "⏬ Lowest priority task": "⏬ Lowest priority task",
    "Lowest priority set": "Lowest priority set",
    "Set due date to today": "Set due date to today",
    "Due date set to today": "Due date set to today",
    "Set due date to tomorrow": "Set due date to tomorrow",
    "Due date set to tomorrow": "Due date set to tomorrow",
    "Pick Date": "Pick Date",
    "Open date picker": "Open date picker",
    "Set scheduled date": "Set scheduled date",
    "Scheduled date set": "Scheduled date set",
    "Save to inbox": "Save to inbox",
    "Target set to Inbox": "Target set to Inbox",
    "Daily Note": "Daily Note",
    "Save to today's daily note": "Save to today's daily note",
    "Target set to Daily Note": "Target set to Daily Note",
    "Current File": "Current File",
    "Save to current file": "Save to current file",
    "Target set to Current File": "Target set to Current File",
    "Choose File": "Choose File",
    "Open file picker": "Open file picker",
    "Save to recent file": "Save to recent file",
    "Target set to": "Target set to",
    "Important": "Important",
    "Tagged as important": "Tagged as important",
    "Urgent": "Urgent",
    "Tagged as urgent": "Tagged as urgent",
    "Work": "Work",
    "Work related task": "Work related task",
    "Tagged as work": "Tagged as work",
    "Personal": "Personal",
    "Personal task": "Personal task",
    "Tagged as personal": "Tagged as personal",
    "Choose Tag": "Choose Tag",
    "Open tag picker": "Open tag picker",
    "Existing tag": "Existing tag",
    "Tagged with": "Tagged with",
    "Toggle quick capture panel in editor": "Toggle quick capture panel in editor",
    "Toggle quick capture panel in editor (Globally)": "Toggle quick capture panel in editor (Globally)",
    "Selected Mode": "Selected Mode",
    "Features that will be enabled": "Features that will be enabled",
    "Don't worry! You can customize any of these settings later in the plugin settings.": "Don't worry! You can customize any of these settings later in the plugin settings.",
    "Available views": "Available views",
    "Key settings": "Key settings",
    "Progress bars": "Progress bars",
    "Enabled (both graphical and text)": "Enabled (both graphical and text)",
    "Task status switching": "Task status switching",
    "Workflow management": "Workflow management",
    "Reward system": "Reward system",
    "Habit tracking": "Habit tracking",
    "Performance optimization": "Performance optimization",
    "Configuration Changes": "Configuration Changes",
    "Your custom views will be preserved": "Your custom views will be preserved",
    "New views to be added": "New views to be added",
    "Existing views to be updated": "Existing views to be updated",
    "Feature changes": "Feature changes",
    "Only template settings will be applied. Your existing custom configurations will be preserved.": "Only template settings will be applied. Your existing custom configurations will be preserved.",
    "Congratulations!": "Congratulations!",
    "Task Genius has been configured with your selected preferences": "Task Genius has been configured with your selected preferences",
    "Your Configuration": "Your Configuration",
    "Quick Start Guide": "Quick Start Guide",
    "What's next?": "What's next?",
    "Open Task Genius view from the left ribbon": "Open Task Genius view from the left ribbon",
    "Create your first task using Quick Capture": "Create your first task using Quick Capture",
    "Explore different views to organize your tasks": "Explore different views to organize your tasks",
    "Customize settings anytime in plugin settings": "Customize settings anytime in plugin settings",
    "Helpful Resources": "Helpful Resources",
    "Complete guide to all features": "Complete guide to all features",
    "Community": "Community",
    "Get help and share tips": "Get help and share tips",
    "Customize Task Genius": "Customize Task Genius",
    "Click the Task Genius icon in the left sidebar": "Click the Task Genius icon in the left sidebar",
    "Start with the Inbox view to see all your tasks": "Start with the Inbox view to see all your tasks",
    "Use quick capture panel to quickly add your first task": "Use quick capture panel to quickly add your first task",
    "Try the Forecast view to see tasks by date": "Try the Forecast view to see tasks by date",
    "Open Task Genius and explore the available views": "Open Task Genius and explore the available views",
    "Set up a project using the Projects view": "Set up a project using the Projects view",
    "Try the Kanban board for visual task management": "Try the Kanban board for visual task management",
    "Use workflow stages to track task progress": "Use workflow stages to track task progress",
    "Explore all available views and their configurations": "Explore all available views and their configurations",
    "Set up complex workflows for your projects": "Set up complex workflows for your projects",
    "Configure habits and rewards to stay motivated": "Configure habits and rewards to stay motivated",
    "Integrate with external calendars and systems": "Integrate with external calendars and systems",
    "Open Task Genius from the left sidebar": "Open Task Genius from the left sidebar",
    "Create your first task": "Create your first task",
    "Explore the different views available": "Explore the different views available",
    "Customize settings as needed": "Customize settings as needed",
    "Thank you for your positive feedback!": "Thank you for your positive feedback!",
    "Thank you for your feedback. We'll continue improving the experience.": "Thank you for your feedback. We'll continue improving the experience.",
    "Share detailed feedback": "Share detailed feedback",
    "Skip onboarding": "Skip onboarding",
    "Back": "Back",
    "Welcome to Task Genius": "Welcome to Task Genius",
    "Transform your task management with advanced progress tracking and workflow automation": "Transform your task management with advanced progress tracking and workflow automation",
    "Progress Tracking": "Progress Tracking",
    "Visual progress bars and completion tracking for all your tasks": "Visual progress bars and completion tracking for all your tasks",
    "Organize tasks by projects with advanced filtering and sorting": "Organize tasks by projects with advanced filtering and sorting",
    "Workflow Automation": "Workflow Automation",
    "Automate task status changes and improve your productivity": "Automate task status changes and improve your productivity",
    "Multiple Views": "Multiple Views",
    "Kanban boards, calendars, Gantt charts, and more visualization options": "Kanban boards, calendars, Gantt charts, and more visualization options",
    "This quick setup will help you configure Task Genius based on your experience level and needs. You can always change these settings later.": "This quick setup will help you configure Task Genius based on your experience level and needs. You can always change these settings later.",
    "Choose Your Usage Mode": "Choose Your Usage Mode",
    "Select the configuration that best matches your task management experience": "Select the configuration that best matches your task management experience",
    "Configuration Preview": "Configuration Preview",
    "Review the settings that will be applied for your selected mode": "Review the settings that will be applied for your selected mode",
    "Include task creation guide": "Include task creation guide",
    "Show a quick tutorial on creating your first task": "Show a quick tutorial on creating your first task",
    "Create Your First Task": "Create Your First Task",
    "Learn how to create and format tasks in Task Genius": "Learn how to create and format tasks in Task Genius",
    "Setup Complete!": "Setup Complete!",
    "Task Genius is now configured and ready to use": "Task Genius is now configured and ready to use",
    "Start Using Task Genius": "Start Using Task Genius",
    "Task Genius Setup": "Task Genius Setup",
    "Skip setup": "Skip setup",
    "We noticed you've already configured Task Genius": "We noticed you've already configured Task Genius",
    "Your current configuration includes:": "Your current configuration includes:",
    "Would you like to run the setup wizard anyway?": "Would you like to run the setup wizard anyway?",
    "Yes, show me the setup wizard": "Yes, show me the setup wizard",
    "No, I'm happy with my current setup": "No, I'm happy with my current setup",
    "Learn the different ways to create and format tasks in Task Genius. You can use either emoji-based or Dataview-style syntax.": "Learn the different ways to create and format tasks in Task Genius. You can use either emoji-based or Dataview-style syntax.",
    "Task Format Examples": "Task Format Examples",
    "Basic Task": "Basic Task",
    "With Emoji Metadata": "With Emoji Metadata",
    "📅 = Due date, 🔺 = High priority, #project/ = Docs project tag": "📅 = Due date, 🔺 = High priority, #project/ = Docs project tag",
    "With Dataview Metadata": "With Dataview Metadata",
    "Mixed Format": "Mixed Format",
    "Combine emoji and dataview syntax as needed": "Combine emoji and dataview syntax as needed",
    "Task Status Markers": "Task Status Markers",
    "Not started": "Not started",
    "In progress": "In progress",
    "Common Metadata Symbols": "Common Metadata Symbols",
    "Due date": "Due date",
    "Start date": "Start date",
    "Scheduled date": "Scheduled date",
    "Higher priority": "Higher priority",
    "Lower priority": "Lower priority",
    "Recurring task": "Recurring task",
    "Project/tag": "Project/tag",
    "Use quick capture panel to quickly capture tasks from anywhere in Obsidian.": "Use quick capture panel to quickly capture tasks from anywhere in Obsidian.",
    "Try Quick Capture": "Try Quick Capture",
    "Quick capture is now enabled in your configuration!": "Quick capture is now enabled in your configuration!",
    "Failed to open quick capture. Please try again later.": "Failed to open quick capture. Please try again later.",
    "Try It Yourself": "Try It Yourself",
    "Practice creating a task with the format you prefer:": "Practice creating a task with the format you prefer:",
    "Practice Task": "Practice Task",
    "Enter a task using any of the formats shown above": "Enter a task using any of the formats shown above",
    "- [ ] Your task here": "- [ ] Your task here",
    "Validate Task": "Validate Task",
    "Please enter a task to validate": "Please enter a task to validate",
    "This doesn't look like a valid task. Tasks should start with '- [ ]'": "This doesn't look like a valid task. Tasks should start with '- [ ]'",
    "Valid task format!": "Valid task format!",
    "Emoji metadata": "Emoji metadata",
    "Dataview metadata": "Dataview metadata",
    "Project tags": "Project tags",
    "Detected features: ": "Detected features: ",
    "Onboarding": "Onboarding",
    "Restart the welcome guide and setup wizard": "Restart the welcome guide and setup wizard",
    "Restart Onboarding": "Restart Onboarding",
    "Copy": "Copy",
    "Copied!": "Copied!",
    "MCP integration is only available on desktop": "MCP integration is only available on desktop",
    "MCP Server Status": "MCP Server Status",
    "Enable MCP Server": "Enable MCP Server",
    "Start the MCP server to allow external tool connections": "Start the MCP server to allow external tool connections",
    "WARNING: Enabling the MCP server will allow external AI tools and applications to access and modify your task data. This includes:\n\n• Reading all tasks and their details\n• Creating new tasks\n• Updating existing tasks\n• Deleting tasks\n• Accessing task metadata and properties\n\nOnly enable this if you trust the applications that will connect to the MCP server. Make sure to keep your authentication token secure.\n\nDo you want to continue?": "WARNING: Enabling the MCP server will allow external AI tools and applications to access and modify your task data. This includes:\n\n• Reading all tasks and their details\n• Creating new tasks\n• Updating existing tasks\n• Deleting tasks\n• Accessing task metadata and properties\n\nOnly enable this if you trust the applications that will connect to the MCP server. Make sure to keep your authentication token secure.\n\nDo you want to continue?",
    "MCP Server enabled. Keep your authentication token secure!": "MCP Server enabled. Keep your authentication token secure!",
    "Server Configuration": "Server Configuration",
    "Host": "Host",
    "Server host address. Use 127.0.0.1 for local only, 0.0.0.0 for all interfaces": "Server host address. Use 127.0.0.1 for local only, 0.0.0.0 for all interfaces",
    "Security Warning": "Security Warning",
    "⚠️ **WARNING**: Switching to 0.0.0.0 will make the MCP server accessible from external networks.\n\nThis could expose your Obsidian data to:\n- Other devices on your local network\n- Potentially the internet if your firewall is misconfigured\n\n**Only proceed if you:**\n- Understand the security implications\n- Have properly configured your firewall\n- Need external access for legitimate reasons\n\nAre you sure you want to continue?": "⚠️ **WARNING**: Switching to 0.0.0.0 will make the MCP server accessible from external networks.\n\nThis could expose your Obsidian data to:\n- Other devices on your local network\n- Potentially the internet if your firewall is misconfigured\n\n**Only proceed if you:**\n- Understand the security implications\n- Have properly configured your firewall\n- Need external access for legitimate reasons\n\nAre you sure you want to continue?",
    "Yes, I understand the risks": "Yes, I understand the risks",
    "Host changed to 0.0.0.0. Server is now accessible from external networks.": "Host changed to 0.0.0.0. Server is now accessible from external networks.",
    "Port": "Port",
    "Server port number (default: 7777)": "Server port number (default: 7777)",
    "Authentication": "Authentication",
    "Authentication Token": "Authentication Token",
    "Bearer token for authenticating MCP requests (keep this secret)": "Bearer token for authenticating MCP requests (keep this secret)",
    "Show": "Show",
    "Hide": "Hide",
    "Token copied to clipboard": "Token copied to clipboard",
    "Regenerate": "Regenerate",
    "New token generated": "New token generated",
    "Advanced Settings": "Advanced Settings",
    "Enable CORS": "Enable CORS",
    "Allow cross-origin requests (required for web clients)": "Allow cross-origin requests (required for web clients)",
    "Log Level": "Log Level",
    "Logging verbosity for debugging": "Logging verbosity for debugging",
    "Error": "Error",
    "Warning": "Warning",
    "Info": "Info",
    "Debug": "Debug",
    "Server Actions": "Server Actions",
    "Test Connection": "Test Connection",
    "Test the MCP server connection": "Test the MCP server connection",
    "Test": "Test",
    "Testing...": "Testing...",
    "Connection test successful! MCP server is working.": "Connection test successful! MCP server is working.",
    "Connection test failed: ": "Connection test failed: ",
    "Restart Server": "Restart Server",
    "Stop and restart the MCP server": "Stop and restart the MCP server",
    "Restart": "Restart",
    "MCP server restarted": "MCP server restarted",
    "Failed to restart server: ": "Failed to restart server: ",
    "Use Next Available Port": "Use Next Available Port",
    "Port updated to ": "Port updated to ",
    "No available port found in range": "No available port found in range",
    "Client Configuration": "Client Configuration",
    "Authentication Method": "Authentication Method",
    "Choose the authentication method for client configurations": "Choose the authentication method for client configurations",
    "Method B: Combined Bearer (Recommended)": "Method B: Combined Bearer (Recommended)",
    "Method A: Custom Headers": "Method A: Custom Headers",
    "Supported Authentication Methods:": "Supported Authentication Methods:",
    "API Documentation": "API Documentation",
    "Server Endpoint": "Server Endpoint",
    "Copy URL": "Copy URL",
    "Available Tools": "Available Tools",
    "Loading tools...": "Loading tools...",
    "No tools available": "No tools available",
    "Failed to load tools. Is the MCP server running?": "Failed to load tools. Is the MCP server running?",
    "Example Request": "Example Request",
    "MCP Server not initialized": "MCP Server not initialized",
    "Running": "Running",
    "Stopped": "Stopped",
    "Uptime": "Uptime",
    "Requests": "Requests",
    "Toggle this to enable Org-mode style quick capture panel.": "Toggle this to enable Org-mode style quick capture panel.",
    "Auto-add task prefix": "Auto-add task prefix",
    "Automatically add task checkbox prefix to captured content": "Automatically add task checkbox prefix to captured content",
    "Task prefix format": "Task prefix format",
    "The prefix to add before captured content (e.g., '- [ ]' for task, '- ' for list item)": "The prefix to add before captured content (e.g., '- [ ]' for task, '- ' for list item)",
    "Search settings...": "Search settings...",
    "Search settings": "Search settings",
    "Clear search": "Clear search",
    "Search results": "Search results",
    "No settings found": "No settings found",
    "Project Tree View Settings": "Project Tree View Settings",
    "Configure how projects are displayed in tree view.": "Configure how projects are displayed in tree view.",
    "Default project view mode": "Default project view mode",
    "Choose whether to display projects as a flat list or hierarchical tree by default.": "Choose whether to display projects as a flat list or hierarchical tree by default.",
    "Auto-expand project tree": "Auto-expand project tree",
    "Automatically expand all project nodes when opening the project view in tree mode.": "Automatically expand all project nodes when opening the project view in tree mode.",
    "Show empty project folders": "Show empty project folders",
    "Display project folders even if they don't contain any tasks.": "Display project folders even if they don't contain any tasks.",
    "Project path separator": "Project path separator",
    "Character used to separate project hierarchy levels (e.g., '/' in 'Project/SubProject').": "Character used to separate project hierarchy levels (e.g., '/' in 'Project/SubProject').",
    "Enable dynamic metadata positioning": "Enable dynamic metadata positioning",
    "Intelligently position task metadata. When enabled, metadata appears on the same line as short tasks and below long tasks. When disabled, metadata always appears below the task content.": "Intelligently position task metadata. When enabled, metadata appears on the same line as short tasks and below long tasks. When disabled, metadata always appears below the task content.",
    "Toggle tree/list view": "Toggle tree/list view",
    "Clear date": "Clear date",
    "Clear priority": "Clear priority",
    "Clear all tags": "Clear all tags",
    "🔺 Highest priority": "🔺 Highest priority",
    "⏫ High priority": "⏫ High priority",
    "🔼 Medium priority": "🔼 Medium priority",
    "🔽 Low priority": "🔽 Low priority",
    "⏬ Lowest priority": "⏬ Lowest priority",
    "Fixed File": "Fixed File",
    "Save to Inbox.md": "Save to Inbox.md",
    "Open Task Genius Setup": "Open Task Genius Setup",
    "MCP Integration": "MCP Integration",
    "Beginner": "Beginner",
    "Basic task management with essential features": "Basic task management with essential features",
    "Basic progress bars": "Basic progress bars",
    "Essential views (Inbox, Forecast, Projects)": "Essential views (Inbox, Forecast, Projects)",
    "Simple task status tracking": "Simple task status tracking",
    "Quick task capture": "Quick task capture",
    "Date picker functionality": "Date picker functionality",
    "Project management with enhanced workflows": "Project management with enhanced workflows",
    "Full progress bar customization": "Full progress bar customization",
    "Extended views (Kanban, Calendar, Table)": "Extended views (Kanban, Calendar, Table)",
    "Project management features": "Project management features",
    "Basic workflow automation": "Basic workflow automation",
    "Advanced filtering and sorting": "Advanced filtering and sorting",
    "Power User": "Power User",
    "Full-featured experience with all capabilities": "Full-featured experience with all capabilities",
    "All views and advanced configurations": "All views and advanced configurations",
    "Complex workflow definitions": "Complex workflow definitions",
    "Reward and habit tracking systems": "Reward and habit tracking systems",
    "Performance optimizations": "Performance optimizations",
    "Advanced integrations": "Advanced integrations",
    "Experimental features": "Experimental features",
    "Timeline and calendar sync": "Timeline and calendar sync",
    "Not configured": "Not configured",
    "Custom": "Custom",
    "Custom views created": "Custom views created",
    "Progress bar settings modified": "Progress bar settings modified",
    "Task status settings configured": "Task status settings configured",
    "Quick capture configured": "Quick capture configured",
    "Workflow settings enabled": "Workflow settings enabled",
    "Advanced features enabled": "Advanced features enabled",
    "File parsing customized": "File parsing customized"
};
export default translations;
//# sourceMappingURL=data:application/json;base64,