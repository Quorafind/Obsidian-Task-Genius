// Code from https://github.com/obsidian-tasks-group/obsidian-tasks/tree/main/src/Config/Themes
// Original code is licensed under the MIT License.
/**
 * Status supported by the ITS theme. {@link https://github.com/SlRvb/Obsidian--ITS-Theme}
 * Values recognised by Tasks are excluded.
 * @see {@link StatusSettings.bulkAddStatusCollection}
 */
export function itsSupportedStatuses() {
    const zzz = [
        [" ", "Unchecked", "notStarted"],
        ["x", "Regular", "completed"],
        ["X", "Checked", "completed"],
        ["-", "Dropped", "abandoned"],
        [">", "Forward", "planned"],
        ["D", "Date", "notStarted"],
        ["?", "Question", "planned"],
        ["/", "Half Done", "inProgress"],
        ["+", "Add", "notStarted"],
        ["R", "Research", "notStarted"],
        ["!", "Important", "notStarted"],
        ["i", "Idea", "notStarted"],
        ["B", "Brainstorm", "notStarted"],
        ["P", "Pro", "notStarted"],
        ["C", "Con", "notStarted"],
        ["Q", "Quote", "notStarted"],
        ["N", "Note", "notStarted"],
        ["b", "Bookmark", "notStarted"],
        ["I", "Information", "notStarted"],
        ["p", "Paraphrase", "notStarted"],
        ["L", "Location", "notStarted"],
        ["E", "Example", "notStarted"],
        ["A", "Answer", "notStarted"],
        ["r", "Reward", "notStarted"],
        ["c", "Choice", "notStarted"],
        ["d", "Doing", "inProgress"],
        ["T", "Time", "notStarted"],
        ["@", "Character / Person", "notStarted"],
        ["t", "Talk", "notStarted"],
        ["O", "Outline / Plot", "notStarted"],
        ["~", "Conflict", "notStarted"],
        ["W", "World", "notStarted"],
        ["f", "Clue / Find", "notStarted"],
        ["F", "Foreshadow", "notStarted"],
        ["H", "Favorite / Health", "notStarted"],
        ["&", "Symbolism", "notStarted"],
        ["s", "Secret", "notStarted"],
    ];
    return zzz;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSVRTVGhlbWVDb2xsZWN0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiSVRTVGhlbWVDb2xsZWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtGQUErRjtBQUMvRixtREFBbUQ7QUFJbkQ7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxvQkFBb0I7SUFDbkMsTUFBTSxHQUFHLEdBQXFCO1FBQzdCLENBQUMsR0FBRyxFQUFFLFdBQVcsRUFBRSxZQUFZLENBQUM7UUFDaEMsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLFdBQVcsQ0FBQztRQUM3QixDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDO1FBQzdCLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxXQUFXLENBQUM7UUFDN0IsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQztRQUMzQixDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsWUFBWSxDQUFDO1FBQzNCLENBQUMsR0FBRyxFQUFFLFVBQVUsRUFBRSxTQUFTLENBQUM7UUFDNUIsQ0FBQyxHQUFHLEVBQUUsV0FBVyxFQUFFLFlBQVksQ0FBQztRQUNoQyxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsWUFBWSxDQUFDO1FBQzFCLENBQUMsR0FBRyxFQUFFLFVBQVUsRUFBRSxZQUFZLENBQUM7UUFDL0IsQ0FBQyxHQUFHLEVBQUUsV0FBVyxFQUFFLFlBQVksQ0FBQztRQUNoQyxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsWUFBWSxDQUFDO1FBQzNCLENBQUMsR0FBRyxFQUFFLFlBQVksRUFBRSxZQUFZLENBQUM7UUFDakMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLFlBQVksQ0FBQztRQUMxQixDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsWUFBWSxDQUFDO1FBQzFCLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxZQUFZLENBQUM7UUFDNUIsQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLFlBQVksQ0FBQztRQUMzQixDQUFDLEdBQUcsRUFBRSxVQUFVLEVBQUUsWUFBWSxDQUFDO1FBQy9CLENBQUMsR0FBRyxFQUFFLGFBQWEsRUFBRSxZQUFZLENBQUM7UUFDbEMsQ0FBQyxHQUFHLEVBQUUsWUFBWSxFQUFFLFlBQVksQ0FBQztRQUNqQyxDQUFDLEdBQUcsRUFBRSxVQUFVLEVBQUUsWUFBWSxDQUFDO1FBQy9CLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxZQUFZLENBQUM7UUFDOUIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLFlBQVksQ0FBQztRQUM3QixDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsWUFBWSxDQUFDO1FBQzdCLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxZQUFZLENBQUM7UUFDN0IsQ0FBQyxHQUFHLEVBQUUsT0FBTyxFQUFFLFlBQVksQ0FBQztRQUM1QixDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsWUFBWSxDQUFDO1FBQzNCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixFQUFFLFlBQVksQ0FBQztRQUN6QyxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsWUFBWSxDQUFDO1FBQzNCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLFlBQVksQ0FBQztRQUNyQyxDQUFDLEdBQUcsRUFBRSxVQUFVLEVBQUUsWUFBWSxDQUFDO1FBQy9CLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxZQUFZLENBQUM7UUFDNUIsQ0FBQyxHQUFHLEVBQUUsYUFBYSxFQUFFLFlBQVksQ0FBQztRQUNsQyxDQUFDLEdBQUcsRUFBRSxZQUFZLEVBQUUsWUFBWSxDQUFDO1FBQ2pDLENBQUMsR0FBRyxFQUFFLG1CQUFtQixFQUFFLFlBQVksQ0FBQztRQUN4QyxDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsWUFBWSxDQUFDO1FBQ2hDLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxZQUFZLENBQUM7S0FDN0IsQ0FBQztJQUNGLE9BQU8sR0FBRyxDQUFDO0FBQ1osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvZGUgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vb2JzaWRpYW4tdGFza3MtZ3JvdXAvb2JzaWRpYW4tdGFza3MvdHJlZS9tYWluL3NyYy9Db25maWcvVGhlbWVzXHJcbi8vIE9yaWdpbmFsIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG5cclxuaW1wb3J0IHR5cGUgeyBTdGF0dXNDb2xsZWN0aW9uIH0gZnJvbSBcIi4vU3RhdHVzQ29sbGVjdGlvbnNcIjtcclxuXHJcbi8qKlxyXG4gKiBTdGF0dXMgc3VwcG9ydGVkIGJ5IHRoZSBJVFMgdGhlbWUuIHtAbGluayBodHRwczovL2dpdGh1Yi5jb20vU2xSdmIvT2JzaWRpYW4tLUlUUy1UaGVtZX1cclxuICogVmFsdWVzIHJlY29nbmlzZWQgYnkgVGFza3MgYXJlIGV4Y2x1ZGVkLlxyXG4gKiBAc2VlIHtAbGluayBTdGF0dXNTZXR0aW5ncy5idWxrQWRkU3RhdHVzQ29sbGVjdGlvbn1cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBpdHNTdXBwb3J0ZWRTdGF0dXNlcygpIHtcclxuXHRjb25zdCB6eno6IFN0YXR1c0NvbGxlY3Rpb24gPSBbXHJcblx0XHRbXCIgXCIsIFwiVW5jaGVja2VkXCIsIFwibm90U3RhcnRlZFwiXSxcclxuXHRcdFtcInhcIiwgXCJSZWd1bGFyXCIsIFwiY29tcGxldGVkXCJdLFxyXG5cdFx0W1wiWFwiLCBcIkNoZWNrZWRcIiwgXCJjb21wbGV0ZWRcIl0sXHJcblx0XHRbXCItXCIsIFwiRHJvcHBlZFwiLCBcImFiYW5kb25lZFwiXSxcclxuXHRcdFtcIj5cIiwgXCJGb3J3YXJkXCIsIFwicGxhbm5lZFwiXSxcclxuXHRcdFtcIkRcIiwgXCJEYXRlXCIsIFwibm90U3RhcnRlZFwiXSxcclxuXHRcdFtcIj9cIiwgXCJRdWVzdGlvblwiLCBcInBsYW5uZWRcIl0sXHJcblx0XHRbXCIvXCIsIFwiSGFsZiBEb25lXCIsIFwiaW5Qcm9ncmVzc1wiXSxcclxuXHRcdFtcIitcIiwgXCJBZGRcIiwgXCJub3RTdGFydGVkXCJdLFxyXG5cdFx0W1wiUlwiLCBcIlJlc2VhcmNoXCIsIFwibm90U3RhcnRlZFwiXSxcclxuXHRcdFtcIiFcIiwgXCJJbXBvcnRhbnRcIiwgXCJub3RTdGFydGVkXCJdLFxyXG5cdFx0W1wiaVwiLCBcIklkZWFcIiwgXCJub3RTdGFydGVkXCJdLFxyXG5cdFx0W1wiQlwiLCBcIkJyYWluc3Rvcm1cIiwgXCJub3RTdGFydGVkXCJdLFxyXG5cdFx0W1wiUFwiLCBcIlByb1wiLCBcIm5vdFN0YXJ0ZWRcIl0sXHJcblx0XHRbXCJDXCIsIFwiQ29uXCIsIFwibm90U3RhcnRlZFwiXSxcclxuXHRcdFtcIlFcIiwgXCJRdW90ZVwiLCBcIm5vdFN0YXJ0ZWRcIl0sXHJcblx0XHRbXCJOXCIsIFwiTm90ZVwiLCBcIm5vdFN0YXJ0ZWRcIl0sXHJcblx0XHRbXCJiXCIsIFwiQm9va21hcmtcIiwgXCJub3RTdGFydGVkXCJdLFxyXG5cdFx0W1wiSVwiLCBcIkluZm9ybWF0aW9uXCIsIFwibm90U3RhcnRlZFwiXSxcclxuXHRcdFtcInBcIiwgXCJQYXJhcGhyYXNlXCIsIFwibm90U3RhcnRlZFwiXSxcclxuXHRcdFtcIkxcIiwgXCJMb2NhdGlvblwiLCBcIm5vdFN0YXJ0ZWRcIl0sXHJcblx0XHRbXCJFXCIsIFwiRXhhbXBsZVwiLCBcIm5vdFN0YXJ0ZWRcIl0sXHJcblx0XHRbXCJBXCIsIFwiQW5zd2VyXCIsIFwibm90U3RhcnRlZFwiXSxcclxuXHRcdFtcInJcIiwgXCJSZXdhcmRcIiwgXCJub3RTdGFydGVkXCJdLFxyXG5cdFx0W1wiY1wiLCBcIkNob2ljZVwiLCBcIm5vdFN0YXJ0ZWRcIl0sXHJcblx0XHRbXCJkXCIsIFwiRG9pbmdcIiwgXCJpblByb2dyZXNzXCJdLFxyXG5cdFx0W1wiVFwiLCBcIlRpbWVcIiwgXCJub3RTdGFydGVkXCJdLFxyXG5cdFx0W1wiQFwiLCBcIkNoYXJhY3RlciAvIFBlcnNvblwiLCBcIm5vdFN0YXJ0ZWRcIl0sXHJcblx0XHRbXCJ0XCIsIFwiVGFsa1wiLCBcIm5vdFN0YXJ0ZWRcIl0sXHJcblx0XHRbXCJPXCIsIFwiT3V0bGluZSAvIFBsb3RcIiwgXCJub3RTdGFydGVkXCJdLFxyXG5cdFx0W1wiflwiLCBcIkNvbmZsaWN0XCIsIFwibm90U3RhcnRlZFwiXSxcclxuXHRcdFtcIldcIiwgXCJXb3JsZFwiLCBcIm5vdFN0YXJ0ZWRcIl0sXHJcblx0XHRbXCJmXCIsIFwiQ2x1ZSAvIEZpbmRcIiwgXCJub3RTdGFydGVkXCJdLFxyXG5cdFx0W1wiRlwiLCBcIkZvcmVzaGFkb3dcIiwgXCJub3RTdGFydGVkXCJdLFxyXG5cdFx0W1wiSFwiLCBcIkZhdm9yaXRlIC8gSGVhbHRoXCIsIFwibm90U3RhcnRlZFwiXSxcclxuXHRcdFtcIiZcIiwgXCJTeW1ib2xpc21cIiwgXCJub3RTdGFydGVkXCJdLFxyXG5cdFx0W1wic1wiLCBcIlNlY3JldFwiLCBcIm5vdFN0YXJ0ZWRcIl0sXHJcblx0XTtcclxuXHRyZXR1cm4genp6O1xyXG59XHJcbiJdfQ==