import { __awaiter } from "tslib";
import { MarkdownTaskParser } from "../core/ConfigurableTaskParser";
import { MetadataParseMode } from "../../types/TaskParserConfig";
// Default config for compatibility
const defaultConfig = {
    parseMetadata: true,
    parseTags: true,
    parseComments: true,
    parseHeadings: true,
    maxIndentSize: 10,
    maxParseIterations: 1000,
    maxMetadataIterations: 10,
    maxTagLength: 50,
    maxEmojiValueLength: 100,
    maxStackOperations: 100,
    maxStackSize: 50,
    statusMapping: {},
    emojiMapping: {},
    metadataParseMode: MetadataParseMode.Both,
    specialTagPrefixes: {}
};
const parser = new MarkdownTaskParser(defaultConfig);
export function parseMarkdown(content, filePath, fileMetadata) {
    return __awaiter(this, void 0, void 0, function* () {
        // Use existing legacy output for compatibility
        return parser.parseLegacy(content, filePath, fileMetadata);
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFya2Rvd25FbnRyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk1hcmtkb3duRW50cnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRXBFLE9BQU8sRUFBb0IsaUJBQWlCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUVuRixtQ0FBbUM7QUFDbkMsTUFBTSxhQUFhLEdBQXFCO0lBQ3RDLGFBQWEsRUFBRSxJQUFJO0lBQ25CLFNBQVMsRUFBRSxJQUFJO0lBQ2YsYUFBYSxFQUFFLElBQUk7SUFDbkIsYUFBYSxFQUFFLElBQUk7SUFDbkIsYUFBYSxFQUFFLEVBQUU7SUFDakIsa0JBQWtCLEVBQUUsSUFBSTtJQUN4QixxQkFBcUIsRUFBRSxFQUFFO0lBQ3pCLFlBQVksRUFBRSxFQUFFO0lBQ2hCLG1CQUFtQixFQUFFLEdBQUc7SUFDeEIsa0JBQWtCLEVBQUUsR0FBRztJQUN2QixZQUFZLEVBQUUsRUFBRTtJQUNoQixhQUFhLEVBQUUsRUFBRTtJQUNqQixZQUFZLEVBQUUsRUFBRTtJQUNoQixpQkFBaUIsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO0lBQ3pDLGtCQUFrQixFQUFFLEVBQUU7Q0FDdkIsQ0FBQztBQUVGLE1BQU0sTUFBTSxHQUFHLElBQUksa0JBQWtCLENBQUMsYUFBYSxDQUFDLENBQUM7QUFFckQsTUFBTSxVQUFnQixhQUFhLENBQUMsT0FBZSxFQUFFLFFBQWdCLEVBQUUsWUFBa0M7O1FBQ3ZHLCtDQUErQztRQUMvQyxPQUFPLE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUM3RCxDQUFDO0NBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXJrZG93blRhc2tQYXJzZXIgfSBmcm9tIFwiLi4vY29yZS9Db25maWd1cmFibGVUYXNrUGFyc2VyXCI7XHJcbmltcG9ydCB0eXBlIHsgVGFzayB9IGZyb20gXCIuLi8uLi90eXBlcy90YXNrXCI7XHJcbmltcG9ydCB7IFRhc2tQYXJzZXJDb25maWcsIE1ldGFkYXRhUGFyc2VNb2RlIH0gZnJvbSBcIi4uLy4uL3R5cGVzL1Rhc2tQYXJzZXJDb25maWdcIjtcclxuXHJcbi8vIERlZmF1bHQgY29uZmlnIGZvciBjb21wYXRpYmlsaXR5XHJcbmNvbnN0IGRlZmF1bHRDb25maWc6IFRhc2tQYXJzZXJDb25maWcgPSB7XHJcbiAgcGFyc2VNZXRhZGF0YTogdHJ1ZSxcclxuICBwYXJzZVRhZ3M6IHRydWUsXHJcbiAgcGFyc2VDb21tZW50czogdHJ1ZSxcclxuICBwYXJzZUhlYWRpbmdzOiB0cnVlLFxyXG4gIG1heEluZGVudFNpemU6IDEwLFxyXG4gIG1heFBhcnNlSXRlcmF0aW9uczogMTAwMCxcclxuICBtYXhNZXRhZGF0YUl0ZXJhdGlvbnM6IDEwLFxyXG4gIG1heFRhZ0xlbmd0aDogNTAsXHJcbiAgbWF4RW1vamlWYWx1ZUxlbmd0aDogMTAwLFxyXG4gIG1heFN0YWNrT3BlcmF0aW9uczogMTAwLFxyXG4gIG1heFN0YWNrU2l6ZTogNTAsXHJcbiAgc3RhdHVzTWFwcGluZzoge30sXHJcbiAgZW1vamlNYXBwaW5nOiB7fSxcclxuICBtZXRhZGF0YVBhcnNlTW9kZTogTWV0YWRhdGFQYXJzZU1vZGUuQm90aCxcclxuICBzcGVjaWFsVGFnUHJlZml4ZXM6IHt9XHJcbn07XHJcblxyXG5jb25zdCBwYXJzZXIgPSBuZXcgTWFya2Rvd25UYXNrUGFyc2VyKGRlZmF1bHRDb25maWcpO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBhcnNlTWFya2Rvd24oY29udGVudDogc3RyaW5nLCBmaWxlUGF0aDogc3RyaW5nLCBmaWxlTWV0YWRhdGE/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+KTogUHJvbWlzZTxUYXNrW10+IHtcclxuICAvLyBVc2UgZXhpc3RpbmcgbGVnYWN5IG91dHB1dCBmb3IgY29tcGF0aWJpbGl0eVxyXG4gIHJldHVybiBwYXJzZXIucGFyc2VMZWdhY3koY29udGVudCwgZmlsZVBhdGgsIGZpbGVNZXRhZGF0YSk7XHJcbn1cclxuXHJcbiJdfQ==